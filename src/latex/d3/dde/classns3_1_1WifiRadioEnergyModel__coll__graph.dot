digraph "ns3::WifiRadioEnergyModel"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::WifiRadioEnergyModel\n|- m_txCurrentA\l- m_rxCurrentA\l- m_idleCurrentA\l- m_ccaBusyCurrentA\l- m_switchingCurrentA\l- m_sleepCurrentA\l- m_currentState\l- m_nPendingChangeState\l- m_isSupersededChangeState\l|+ WifiRadioEnergyModel()\l+ ~WifiRadioEnergyModel()\l+ SetEnergySource()\l+ GetTotalEnergyConsumption()\l+ GetIdleCurrentA()\l+ SetIdleCurrentA()\l+ GetCcaBusyCurrentA()\l+ SetCcaBusyCurrentA()\l+ GetTxCurrentA()\l+ SetTxCurrentA()\land 15 more...\l+ GetTypeId()\l- DoDispose()\l- DoGetCurrentA()\l- SetWifiRadioState()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::DeviceEnergyModel\n||+ DeviceEnergyModel()\l+ ~DeviceEnergyModel()\l+ SetEnergySource()\l+ GetTotalEnergyConsumption()\l+ ChangeState()\l+ GetCurrentA()\l+ HandleEnergyDepletion()\l+ HandleEnergyRecharged()\l+ GetTypeId()\l- DoGetCurrentA()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/dbf/classns3_1_1DeviceEnergyModel.html",tooltip="Base class for device energy models. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node6 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node3 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_totalEnergyConsumption" ,arrowhead="odiamond"];
  Node8 [label="{ns3::TracedValue\< double \>\n|- m_v\l|+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ operator double()\l+ operator=()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ Set()\l+ Get()\l+ operator++()\l+ operator++()\l+ operator--()\l+ operator--()\l* operator++()\l* operator++()\l* operator--()\l* operator--()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d97/classns3_1_1TracedValue.html"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_cb" ,arrowhead="odiamond"];
  Node9 [label="{ns3::TracedCallback\l\< double, double \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_lastUpdateTime" ,arrowhead="odiamond"];
  Node10 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* FromInteger()\l* FromDouble()\l* From()\l* ToInteger()\l* ToDouble()\l* To()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_energyRechargedCallback\n-m_energyDepletionCallback" ,arrowhead="odiamond"];
  Node11 [label="{ns3::Callback\< void \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::CallbackBase\n||+ CallbackBase()\l+ GetImpl()\l# CallbackBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1CallbackBase.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" #m_impl" ,arrowhead="odiamond"];
  Node13 [label="{ns3::Ptr\< ns3::CallbackImpl\lBase \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node14 [label="{ns3::CallbackImplBase\n||+ ~CallbackImplBase()\l+ IsEqual()\l+ GetTypeid()\l# Demangle()\l# GetCppTypeid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dfa/classns3_1_1CallbackImplBase.html"];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 [label="{ns3::SimpleRefCount\l\< CallbackImplBase \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node17 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_txCurrentModel" ,arrowhead="odiamond"];
  Node17 [label="{ns3::Ptr\< ns3::WifiTxCurrent\lModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node18 [label="{ns3::WifiTxCurrentModel\n||+ WifiTxCurrentModel()\l+ ~WifiTxCurrentModel()\l+ CalcTxCurrent()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/de0/classns3_1_1WifiTxCurrentModel.html",tooltip="Modelize the transmit current as a function of the transmit power and mode. "];
  Node3 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node19 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_listener" ,arrowhead="odiamond"];
  Node19 [label="{ns3::WifiRadioEnergyModel\lPhyListener\n||+ WifiRadioEnergyModelPhyListener()\l+ ~WifiRadioEnergyModelPhy\lListener()\l+ SetChangeStateCallback()\l+ SetUpdateTxCurrentCallback()\l+ NotifyRxStart()\l+ NotifyRxEndOk()\l+ NotifyRxEndError()\l+ NotifyTxStart()\l+ NotifyMaybeCcaBusyStart()\l+ NotifySwitchingStart()\l+ NotifySleep()\l+ NotifyWakeup()\l- SwitchToIdle()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d7d/classns3_1_1WifiRadioEnergyModelPhyListener.html"];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 [label="{ns3::WifiPhyListener\n||+ ~WifiPhyListener()\l+ NotifyRxStart()\l+ NotifyRxEndOk()\l+ NotifyRxEndError()\l+ NotifyTxStart()\l+ NotifyMaybeCcaBusyStart()\l+ NotifySwitchingStart()\l+ NotifySleep()\l+ NotifyWakeup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d8a/classns3_1_1WifiPhyListener.html",tooltip="receive notifications about phy events. "];
  Node21 -> Node19 [color="grey25",fontsize="10",style="solid",label=" -m_updateTxCurrentCallback" ,arrowhead="odiamond"];
  Node21 [label="{ns3::Callback\< void,\l double \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node12 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 -> Node19 [color="grey25",fontsize="10",style="solid",label=" -m_switchToIdleEvent" ,arrowhead="odiamond"];
  Node22 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node23 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node24 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node24 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node25 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node16 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node26 -> Node19 [color="grey25",fontsize="10",style="solid",label=" -m_changeStateCallback" ,arrowhead="odiamond"];
  Node26 [label="{ns3::Callback\< void,\l int \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node12 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node27 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_source" ,arrowhead="odiamond"];
  Node27 [label="{ns3::Ptr\< ns3::EnergySource \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node28 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node28 [label="{ns3::EnergySource\n|- m_harvesters\l|+ EnergySource()\l+ ~EnergySource()\l+ GetSupplyVoltage()\l+ GetInitialEnergy()\l+ GetRemainingEnergy()\l+ GetEnergyFraction()\l+ UpdateEnergySource()\l+ SetNode()\l+ GetNode()\l+ AppendDeviceEnergyModel()\l+ FindDeviceEnergyModels()\l+ FindDeviceEnergyModels()\l+ InitializeDeviceModels()\l+ DisposeDeviceModels()\l+ ConnectEnergyHarvester()\l+ GetTypeId()\l# CalculateTotalCurrent()\l# NotifyEnergyDrained()\l# NotifyEnergyRecharged()\l# BreakDeviceEnergyModelRef\lCycle()\l- DoDispose()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dab/classns3_1_1EnergySource.html"];
  Node3 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node29 -> Node28 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node29 [label="{ns3::Ptr\< ns3::Node \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node30 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node30 [label="{ns3::Node\n|- m_id\l- m_sid\l- m_devices\l- m_applications\l- m_handlers\l- m_deviceAdditionListeners\l|+ Node()\l+ Node()\l+ ~Node()\l+ GetId()\l+ GetLocalTime()\l+ GetSystemId()\l+ AddDevice()\l+ GetDevice()\l+ GetNDevices()\l+ AddApplication()\land 6 more...\l+ GetTypeId()\l+ ChecksumEnabled()\l# DoDispose()\l# DoInitialize()\l- NotifyDeviceAdded()\l- NonPromiscReceiveFromDevice()\l- PromiscReceiveFromDevice()\l- ReceiveFromDevice()\l- Construct()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/ded/classns3_1_1Node.html",tooltip="A network Node. "];
  Node3 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node31 -> Node28 [color="grey25",fontsize="10",style="solid",label=" -m_models" ,arrowhead="odiamond"];
  Node31 [label="{ns3::DeviceEnergyModelContainer\n|- m_models\l|+ DeviceEnergyModelContainer()\l+ DeviceEnergyModelContainer()\l+ DeviceEnergyModelContainer()\l+ DeviceEnergyModelContainer()\l+ Begin()\l+ End()\l+ GetN()\l+ Get()\l+ Add()\l+ Add()\l+ Add()\l+ Clear()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d4d/classns3_1_1DeviceEnergyModelContainer.html",tooltip="Holds a vector of ns3::DeviceEnergyModel pointers. "];
}
