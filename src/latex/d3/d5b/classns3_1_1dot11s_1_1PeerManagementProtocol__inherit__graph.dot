digraph "ns3::dot11s::PeerManagementProtocol"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::dot11s::PeerManagement\lProtocol\n||+ PeerManagementProtocol()\l+ ~PeerManagementProtocol()\l+ DoDispose()\l+ Install()\l+ Report()\l+ ResetStats()\l+ AssignStreams()\l+ GetBeaconTimingElement()\l+ ReceiveBeacon()\l+ ReceivePeerLinkFrame()\l+ ConfigurationMismatch()\l+ TransmissionFailure()\l+ TransmissionSuccess()\l+ IsActiveLink()\l+ SetPeerLinkStatusCallback()\l+ FindPeerLink()\l+ GetPeerLinks()\l+ GetPeers()\l+ GetAddress()\l+ GetNumberOfLinks()\l+ SetMeshId()\l+ GetMeshId()\l+ SetBeaconCollisionAvoidance()\l+ GetBeaconCollisionAvoidance()\l+ NotifyBeaconSent()\l+ GetTypeId()\l- DoInitialize()\l- operator=()\l- PeerManagementProtocol()\l- InitiateLink()\l- ShouldSendOpen()\l- ShouldAcceptOpen()\l- PeerLinkStatus()\l- CheckBeaconCollisions()\l- ShiftOwnBeacon()\l* LinkEventCallback\l* m_peerLinks\l* m_peerStatusCallback\l* m_linkOpenTraceSrc\l* m_linkCloseTraceSrc\l* m_stats\l* m_beaconShift\l* m_plugins\l* m_address\l* m_meshId\l* m_lastAssocId\l* m_lastLocalLinkId\l* m_maxNumberOfPeerLinks\l* m_enableBca\l* m_maxBeaconShift\l* m_lastBeacon\l* m_beaconInterval\l* TuToTime()\l* TimeToTu()\l* NotifyLinkOpen()\l* NotifyLinkClose()\l* GetBeaconTimingElement()\l* ReceiveBeacon()\l* ReceivePeerLinkFrame()\l* ConfigurationMismatch()\l* TransmissionFailure()\l* TransmissionSuccess()\l* IsActiveLink()\l* SetPeerLinkStatusCallback()\l* FindPeerLink()\l* GetPeerLinks()\l* GetPeers()\l* GetAddress()\l* GetNumberOfLinks()\l* SetMeshId()\l* GetMeshId()\l* SetBeaconCollisionAvoidance()\l* GetBeaconCollisionAvoidance()\l* NotifyBeaconSent()\l* ShouldSendOpen()\l* ShouldAcceptOpen()\l* PeerLinkStatus()\l* CheckBeaconCollisions()\l* ShiftOwnBeacon()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
}
