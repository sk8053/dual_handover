digraph "ns3::SimulatorImpl"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::SimulatorImpl\n||+ Destroy()\l+ IsFinished()\l+ Stop()\l+ Stop()\l+ Schedule()\l+ ScheduleWithContext()\l+ ScheduleNow()\l+ ScheduleDestroy()\l+ Remove()\l+ Cancel()\land 8 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::DefaultSimulatorImpl\n|- m_eventsWithContext\l- m_eventsWithContextEmpty\l- m_eventsWithContextMutex\l- m_destroyEvents\l- m_stop\l- m_events\l- m_uid\l- m_currentUid\l- m_currentTs\l- m_currentContext\l- m_unscheduledEvents\l- m_main\l|+ DefaultSimulatorImpl()\l+ ~DefaultSimulatorImpl()\l+ Destroy()\l+ IsFinished()\l+ Stop()\l+ Stop()\l+ Schedule()\l+ ScheduleWithContext()\l+ ScheduleNow()\l+ ScheduleDestroy()\land 10 more...\l+ GetTypeId()\l- DoDispose()\l- ProcessOneEvent()\l- ProcessEventsWithContext()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d04/classns3_1_1DefaultSimulatorImpl.html"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::DistributedSimulatorImpl\n|- m_destroyEvents\l- m_stop\l- m_globalFinished\l- m_events\l- m_uid\l- m_currentUid\l- m_currentTs\l- m_currentContext\l- m_unscheduledEvents\l- m_pLBTS\l- m_myId\l- m_systemCount\l- m_grantedTime\l- m_lookAhead\l|+ DistributedSimulatorImpl()\l+ ~DistributedSimulatorImpl()\l+ Destroy()\l+ IsFinished()\l+ Stop()\l+ Stop()\l+ Schedule()\l+ ScheduleWithContext()\l+ ScheduleNow()\l+ ScheduleDestroy()\land 11 more...\l+ GetTypeId()\l- DoDispose()\l- CalculateLookAhead()\l- IsLocalFinished()\l- ProcessOneEvent()\l- NextTs()\l- Next()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/df7/classns3_1_1DistributedSimulatorImpl.html",tooltip="Distributed simulator implementation using lookahead. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::NullMessageSimulatorImpl\n|- m_destroyEvents\l- m_stop\l- m_events\l- m_uid\l- m_currentUid\l- m_currentTs\l- m_currentContext\l- m_unscheduledEvents\l- m_myId\l- m_systemCount\l- m_safeTime\l- m_schedulerTune\l- g_instance\l|+ NullMessageSimulatorImpl()\l+ ~NullMessageSimulatorImpl()\l+ Destroy()\l+ IsFinished()\l+ Stop()\l+ Stop()\l+ Schedule()\l+ ScheduleWithContext()\l+ ScheduleNow()\l+ ScheduleDestroy()\land 11 more...\l+ GetTypeId()\l+ GetInstance()\l- HandleArrivingMessagesNon\lBlocking()\l- HandleArrivingMessagesBlocking()\l- DoDispose()\l- CalculateLookAhead()\l- ProcessOneEvent()\l- Next()\l- CalculateSafeTime()\l- GetSafeTime()\l- ScheduleNullMessageEvent()\l- RescheduleNullMessageEvent()\l- RescheduleNullMessageEvent()\l- CalculateGuaranteeTime()\l- NullMessageEventHandler()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dea/classns3_1_1NullMessageSimulatorImpl.html",tooltip="Simulator implementation using MPI and a Null Message algorithm. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::RealtimeSimulatorImpl\n|- m_destroyEvents\l- m_stop\l- m_running\l- m_mutex\l- m_synchronizer\l- m_synchronizationMode\l- m_hardLimit\l- m_main\l- m_events\l- m_unscheduledEvents\l- m_uid\l- m_currentUid\l- m_currentTs\l- m_currentContext\l|+ RealtimeSimulatorImpl()\l+ ~RealtimeSimulatorImpl()\l+ Destroy()\l+ IsFinished()\l+ Stop()\l+ Stop()\l+ Schedule()\l+ ScheduleWithContext()\l+ ScheduleNow()\l+ ScheduleDestroy()\land 19 more...\l+ GetTypeId()\l- Running()\l- Realtime()\l- NextTs()\l- ProcessOneEvent()\l- DoDispose()\l* m_events\l* m_unscheduledEvents\l* m_uid\l* m_currentUid\l* m_currentTs\l* m_currentContext\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d73/classns3_1_1RealtimeSimulatorImpl.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::VisualSimulatorImpl\n|- m_simulator\l- m_simulatorImplFactory\l|+ VisualSimulatorImpl()\l+ ~VisualSimulatorImpl()\l+ Destroy()\l+ IsFinished()\l+ Stop()\l+ Stop()\l+ Schedule()\l+ ScheduleWithContext()\l+ ScheduleNow()\l+ ScheduleDestroy()\land 11 more...\l+ GetTypeId()\l# DoDispose()\l# NotifyConstructionCompleted()\l- GetSim()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dca/classns3_1_1VisualSimulatorImpl.html",tooltip="A replacement simulator that starts the visualizer. "];
}
