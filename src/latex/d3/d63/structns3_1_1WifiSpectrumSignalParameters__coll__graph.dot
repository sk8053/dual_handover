digraph "ns3::WifiSpectrumSignalParameters"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::WifiSpectrumSignalParameters\n||+ Copy()\l+ WifiSpectrumSignalParameters()\l+ WifiSpectrumSignalParameters()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::SpectrumSignalParameters\n||+ SpectrumSignalParameters()\l+ ~SpectrumSignalParameters()\l+ SpectrumSignalParameters()\l+ Copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d7f/structns3_1_1SpectrumSignalParameters.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< SpectrumSignalParameters \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +txAntenna" ,arrowhead="odiamond"];
  Node5 [label="{ns3::Ptr\< ns3::AntennaModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node6 [label="{ns3::AntennaModel\n||+ AntennaModel()\l+ ~AntennaModel()\l+ GetGainDb()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d1c/classns3_1_1AntennaModel.html",tooltip="interface for antenna radiation pattern models "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node10 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node10 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node11 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node11 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node7 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node12 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +txPhy" ,arrowhead="odiamond"];
  Node12 [label="{ns3::Ptr\< ns3::SpectrumPhy \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node13 [label="{ns3::SpectrumPhy\n||+ SpectrumPhy()\l+ ~SpectrumPhy()\l+ SetDevice()\l+ GetDevice()\l+ SetMobility()\l+ GetMobility()\l+ SetChannel()\l+ GetRxSpectrumModel()\l+ GetRxAntenna()\l+ StartRx()\l+ GetTypeId()\l- SpectrumPhy()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d12/classns3_1_1SpectrumPhy.html"];
  Node7 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +duration" ,arrowhead="odiamond"];
  Node14 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* FromInteger()\l* FromDouble()\l* From()\l* ToInteger()\l* ToDouble()\l* To()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node15 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +psd" ,arrowhead="odiamond"];
  Node15 [label="{ns3::Ptr\< ns3::SpectrumValue \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node16 [label="{ns3::SpectrumValue\n|- m_values\l|+ SpectrumValue()\l+ SpectrumValue()\l+ operator[]()\l+ operator[]()\l+ GetSpectrumModelUid()\l+ GetSpectrumModel()\l+ ConstBandsBegin()\l+ ConstBandsEnd()\l+ ConstValuesBegin()\l+ ConstValuesEnd()\land 14 more...\l- Add()\l- Add()\l- Subtract()\l- Subtract()\l- Multiply()\l- Multiply()\l- Divide()\l- Divide()\l- ChangeSign()\l- ShiftLeft()\land 6 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6e/classns3_1_1SpectrumValue.html",tooltip="Set of values corresponding to a given SpectrumModel. "];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node17 [label="{ns3::SimpleRefCount\l\< SpectrumValue \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_spectrumModel" ,arrowhead="odiamond"];
  Node18 [label="{ns3::Ptr\< const ns3\l::SpectrumModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node19 [label="{ns3::SpectrumModel\n|- m_bands\l- m_uid\l- m_uidCount\l|+ SpectrumModel()\l+ SpectrumModel()\l+ GetNumBands()\l+ GetUid()\l+ Begin()\l+ End()\l+ IsOrthogonal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/da4/classns3_1_1SpectrumModel.html"];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 [label="{ns3::SimpleRefCount\l\< SpectrumModel \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +packet" ,arrowhead="odiamond"];
  Node21 [label="{ns3::Ptr\< ns3::Packet \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node22 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node22 [label="{ns3::Packet\n|- m_globalUid\l|+ Packet()\l+ Packet()\l+ operator=()\l+ Packet()\l+ Packet()\l+ Packet()\l+ CreateFragment()\l+ GetSize()\l+ AddHeader()\l+ RemoveHeader()\land 31 more...\l+ EnablePrinting()\l+ EnableChecking()\l- Packet()\l- Deserialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d7a/classns3_1_1Packet.html",tooltip="network packets "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node23 [label="{ns3::SimpleRefCount\l\< Packet \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node24 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_nixVector" ,arrowhead="odiamond"];
  Node24 [label="{ns3::Ptr\< ns3::NixVector \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node25 -> Node24 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node25 [label="{ns3::NixVector\n|- m_nixVector\l- m_used\l- m_currentVectorBitSize\l- m_totalBitSize\l|+ NixVector()\l+ ~NixVector()\l+ Copy()\l+ NixVector()\l+ operator=()\l+ AddNeighborIndex()\l+ ExtractNeighborIndex()\l+ GetRemainingBits()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ BitCount()\l- DumpNixVector()\l- PrintDec2BinNixFill()\l- PrintDec2BinNix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d44/classns3_1_1NixVector.html",tooltip="Neighbor-index data structure for nix-vector routing. "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node26 [label="{ns3::SimpleRefCount\l\< NixVector \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node27 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_metadata" ,arrowhead="odiamond"];
  Node27 [label="{ns3::PacketMetadata\n|- m_head\l- m_tail\l- m_used\l- m_packetUid\l- m_enable\l- m_enableChecking\l- m_metadataSkipped\l- m_maxSize\l- m_chunkUid\l|+ PacketMetadata()\l+ PacketMetadata()\l+ operator=()\l+ ~PacketMetadata()\l+ AddHeader()\l+ RemoveHeader()\l+ AddTrailer()\l+ RemoveTrailer()\l+ CreateFragment()\l+ AddAtEnd()\land 8 more...\l+ Enable()\l+ EnableChecking()\l- DataFreeList::~DataFreeList()\l- PacketMetadata()\l- AddSmall()\l- AddBig()\l- ReplaceTail()\l- UpdateHead()\l- UpdateTail()\l- GetUleb128Size()\l- ReadUleb128()\l- Append16()\land 11 more...\l- AddToRawU8()\l- AddToRawU16()\l- AddToRawU32()\l- AddToRawU64()\l- AddToRaw()\l- ReadFromRawU8()\l- ReadFromRawU16()\l- ReadFromRawU32()\l- ReadFromRawU64()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/db1/classns3_1_1PacketMetadata.html",tooltip="Handle packet metadata about packet headers and trailers. "];
  Node28 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node28 [label="{ns3::PacketMetadata\l::Data\n|+ m_count\l+ m_size\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d9c/structns3_1_1PacketMetadata_1_1Data.html"];
  Node29 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -m_freeList" ,arrowhead="odiamond"];
  Node29 [label="{ns3::PacketMetadata\l::DataFreeList\n||+ ~DataFreeList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/df8/classns3_1_1PacketMetadata_1_1DataFreeList.html",tooltip="Class to hold all the metadata. "];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node30 [label="{std::vector\< struct\l Data * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node31 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_byteTagList" ,arrowhead="odiamond"];
  Node31 [label="{ns3::ByteTagList\n|- m_minStart\l- m_maxEnd\l- m_adjustment\l- m_used\l|+ ByteTagList()\l+ ByteTagList()\l+ operator=()\l+ ~ByteTagList()\l+ Add()\l+ Add()\l+ RemoveAll()\l+ Begin()\l+ Adjust()\l+ AddAtEnd()\l+ AddAtStart()\l- BeginAll()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d64/classns3_1_1ByteTagList.html",tooltip="keep track of the byte tags stored in a packet. "];
  Node32 -> Node31 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node32 [label="{ns3::ByteTagListData\n|+ size\l+ count\l+ dirty\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d62/structns3_1_1ByteTagListData.html",tooltip="Internal representation of the byte tags stored in a packet. "];
  Node33 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_packetTagList" ,arrowhead="odiamond"];
  Node33 [label="{ns3::PacketTagList\n||+ PacketTagList()\l+ PacketTagList()\l+ operator=()\l+ ~PacketTagList()\l+ Add()\l+ Remove()\l+ Replace()\l+ Peek()\l+ RemoveAll()\l+ Head()\l- COWTraverse()\l- RemoveWriter()\l- ReplaceWriter()\l- CreateTagData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d19/classns3_1_1PacketTagList.html",tooltip="List of the packet tags stored in a packet. "];
  Node34 -> Node33 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
  Node34 [label="{ns3::PacketTagList\l::TagData\n|+ count\l+ size\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d03/structns3_1_1PacketTagList_1_1TagData.html"];
  Node34 -> Node34 [color="grey25",fontsize="10",style="solid",label=" +next" ,arrowhead="odiamond"];
  Node10 -> Node34 [color="grey25",fontsize="10",style="solid",label=" +tid" ,arrowhead="odiamond"];
  Node35 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_buffer" ,arrowhead="odiamond"];
  Node35 [label="{ns3::Buffer\n|- m_maxZeroAreaStart\l- m_zeroAreaStart\l- m_zeroAreaEnd\l- m_start\l- m_end\l- g_recommendedStart\l- g_maxSize\l- g_freeList\l|+ GetSize()\l+ PeekData()\l+ AddAtStart()\l+ AddAtEnd()\l+ AddAtEnd()\l+ RemoveAtStart()\l+ RemoveAtEnd()\l+ CreateFragment()\l+ Begin()\l+ End()\land 11 more...\l- CreateFullCopy()\l- TransformIntoRealBuffer()\l- CheckInternalState()\l- Initialize()\l- GetInternalSize()\l- GetInternalEnd()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d85/classns3_1_1Buffer.html",tooltip="automatically resized byte buffer "];
  Node36 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node36 [label="{ns3::Buffer::Data\n|+ m_count\l+ m_size\l+ m_dirtyStart\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dcc/structns3_1_1Buffer_1_1Data.html"];
  Node37 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -g_localStaticDestructor" ,arrowhead="odiamond"];
  Node37 [label="{ns3::Buffer::LocalStatic\lDestructor\n||+ ~LocalStaticDestructor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/de5/structns3_1_1Buffer_1_1LocalStaticDestructor.html",tooltip="Local static destructor structure. "];
}
