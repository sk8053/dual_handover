digraph "ns3::BuildingsPropagationLossModel"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::BuildingsPropagation\lLossModel\n|# m_lossInternalWall\l# m_shadowingLossMap\l# m_shadowingSigmaExtWalls\l# m_shadowingSigmaOutdoor\l# m_shadowingSigmaIndoor\l# m_randVariable\l|+ BuildingsPropagationLoss\lModel()\l+ GetLoss()\l+ DoCalcRxPower()\l+ GetTypeId()\l# ExternalWallLoss()\l# HeightLoss()\l# InternalWallsLoss()\l# GetShadowing()\l# EvaluateSigma()\l# DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::PropagationLossModel\n|- m_next\l|+ PropagationLossModel()\l+ ~PropagationLossModel()\l+ SetNext()\l+ GetNext()\l+ CalcRxPower()\l+ AssignStreams()\l+ GetTypeId()\l- PropagationLossModel()\l- operator=()\l- DoCalcRxPower()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/df9/classns3_1_1PropagationLossModel.html",tooltip="Models the propagation loss through a transmission medium. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::BuildingsObstaclePropagation\lLossModel\n|+ additionalPath\l- m_frequency\l- m_lambda\l- m_beamforming\l- m_beamforming_2\l- m_losTracker\l- m_phyMacConfig\l|+ BuildingsObstaclePropagation\lLossModel()\l+ ~BuildingsObstaclePropagation\lLossModel()\l+ GetLoss()\l+ DoCalcRxPower()\l+ SetConfigurationParameters()\l+ SetBeamforming()\l+ SetBeamforming_2()\l+ SetLosTracker()\l+ GetTypeId()\l- mmWaveLosLoss()\l- mmWaveNlosLoss()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d0d/classns3_1_1BuildingsObstaclePropagationLossModel.html"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::HybridBuildingsPropagation\lLossModel\n|- m_okumuraHata\l- m_ituR1411Los\l- m_ituR1411NlosOverRooftop\l- m_ituR1238\l- m_kun2600Mhz\l- m_itu1411NlosThreshold\l- m_rooftopHeight\l- m_frequency\l|+ HybridBuildingsPropagation\lLossModel()\l+ ~HybridBuildingsPropagation\lLossModel()\l+ SetEnvironment()\l+ SetCitySize()\l+ SetFrequency()\l+ SetRooftopHeight()\l+ GetLoss()\l+ GetTypeId()\l- OkumuraHata()\l- ItuR1411()\l- ItuR1238()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/df8/classns3_1_1HybridBuildingsPropagationLossModel.html",tooltip="The HybridBuildingsPropagationModel is a compound of different models able to evaluate the pathloss f..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::MmWave3gppBuildings\lPropagationLossModel\n|- m_frequency\l- m_lambda\l- m_3gppLos\l- m_3gppNlos\l- m_conditionMap\l- m_updateCondition\l- m_prevTime\l- m_phyMacConfig\l- m_enbUeLocTrace\l|+ MmWave3gppBuildingsPropagation\lLossModel()\l+ ~MmWave3gppBuildingsPropagation\lLossModel()\l+ GetLoss()\l+ DoCalcRxPower()\l+ SetConfigurationParameters()\l+ GetScenario()\l+ GetChannelCondition()\l+ GetTypeId()\l- IsLineIntersectBuildings()\l- LocationTrace()\l- mmWaveLosLoss()\l- mmWaveNlosLoss()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d89/classns3_1_1MmWave3gppBuildingsPropagationLossModel.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::OhBuildingsPropagation\lLossModel\n|- m_okumuraHata\l|+ OhBuildingsPropagationLoss\lModel()\l+ ~OhBuildingsPropagationLoss\lModel()\l+ GetLoss()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d0d/classns3_1_1OhBuildingsPropagationLossModel.html"];
}
