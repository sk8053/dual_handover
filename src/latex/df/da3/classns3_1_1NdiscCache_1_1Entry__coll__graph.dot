digraph "ns3::NdiscCache::Entry"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::NdiscCache::Entry\n|- m_state\l- m_waiting\l- m_router\l- m_nsRetransmit\l|+ Entry()\l+ MarkIncomplete()\l+ MarkReachable()\l+ MarkProbe()\l+ MarkStale()\l+ MarkStale()\l+ MarkReachable()\l+ MarkDelay()\l+ MarkPermanent()\l+ AddWaitingPacket()\land 23 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_macAddress" ,arrowhead="odiamond"];
  Node2 [label="{ns3::Address\n|- m_type\l- m_len\l- m_data\l|+ Address()\l+ Address()\l+ Address()\l+ operator=()\l+ IsInvalid()\l+ GetLength()\l+ CopyTo()\l+ CopyAllTo()\l+ CopyFrom()\l+ CopyAllFrom()\l+ CheckCompatible()\l+ IsMatchingType()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Register()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d5f/classns3_1_1Address.html",tooltip="a polymophic address class "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_lastReachabilityConfirmation" ,arrowhead="odiamond"];
  Node3 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_ipv6Address" ,arrowhead="odiamond"];
  Node4 [label="{ns3::Ipv6Address\n|- m_address\l|+ Ipv6Address()\l+ Ipv6Address()\l+ Ipv6Address()\l+ Ipv6Address()\l+ Ipv6Address()\l+ ~Ipv6Address()\l+ Set()\l+ Set()\l+ IsEqual()\l+ Serialize()\land 16 more...\l+ Deserialize()\l+ MakeSolicitedAddress()\l+ MakeIpv4MappedAddress()\l+ MakeAutoconfiguredAddress()\l+ MakeAutoconfiguredAddress()\l+ MakeAutoconfiguredAddress()\l+ MakeAutoconfiguredLinkLocal\lAddress()\l+ MakeAutoconfiguredLinkLocal\lAddress()\l+ MakeAutoconfiguredLinkLocal\lAddress()\l+ IsMatchingType()\land 8 more...\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de6/classns3_1_1Ipv6Address.html",tooltip="Describes an IPv6 address. "];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_nudTimer" ,arrowhead="odiamond"];
  Node5 [label="{ns3::Timer\n|- m_flags\l|+ Timer()\l+ Timer()\l+ ~Timer()\l+ SetFunction()\l+ SetFunction()\l+ SetArguments()\l+ SetArguments()\l+ SetArguments()\l+ SetArguments()\l+ SetArguments()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d3e/classns3_1_1Timer.html",tooltip="A simple Timer class. "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_event" ,arrowhead="odiamond"];
  Node6 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node8 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node3 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_delayLeft\n-m_delay" ,arrowhead="odiamond"];
  Node11 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_impl" ,arrowhead="odiamond"];
  Node11 [label="{ns3::TimerImpl\n||+ ~TimerImpl()\l+ Schedule()\l+ Invoke()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d2f/classns3_1_1TimerImpl.html"];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_ndCache" ,arrowhead="odiamond"];
  Node12 [label="{ns3::NdiscCache\n|+ DEFAULT_UNRES_QLEN\l- m_ndCache\l- m_unresQlen\l|+ NdiscCache()\l+ ~NdiscCache()\l+ GetDevice()\l+ GetInterface()\l+ Lookup()\l+ LookupInverse()\l+ Add()\l+ Remove()\l+ Flush()\l+ SetUnresQlen()\l+ GetUnresQlen()\l+ SetDevice()\l+ PrintNdiscCache()\l+ GetTypeId()\l- NdiscCache()\l- operator=()\l- DoDispose()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/de7/classns3_1_1NdiscCache.html",tooltip="IPv6 Neighbor Discovery cache. "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node16 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node16 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node17 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node17 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node13 -> Node17 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node18 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node18 [label="{ns3::Ptr\< ns3::NetDevice \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node19 [label="{ns3::NetDevice\n|+ isEnbTypeForDc\l|+ ~NetDevice()\l+ SetIfIndex()\l+ GetIfIndex()\l+ GetChannel()\l+ SetAddress()\l+ GetAddress()\l+ SetMtu()\l+ GetMtu()\l+ IsLinkUp()\l+ AddLinkChangeCallback()\land 15 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dac/classns3_1_1NetDevice.html",tooltip="Network layer to device interface. "];
  Node13 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_interface" ,arrowhead="odiamond"];
  Node20 [label="{ns3::Ptr\< ns3::Ipv6Interface \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node21 [label="{ns3::Ipv6Interface\n|- m_addresses\l- m_ifup\l- m_forwarding\l- m_metric\l- m_curHopLimit\l- m_baseReachableTime\l- m_reachableTime\l- m_retransTimer\l|+ Ipv6Interface()\l+ ~Ipv6Interface()\l+ SetNode()\l+ SetDevice()\l+ SetTrafficControl()\l+ GetDevice()\l+ SetMetric()\l+ GetMetric()\l+ IsUp()\l+ IsDown()\land 24 more...\l+ GetTypeId()\l# DoDispose()\l- Ipv6Interface()\l- operator=()\l- DoSetup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d70/classns3_1_1Ipv6Interface.html",tooltip="The IPv6 representation of a network interface. "];
  Node13 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node22 [label="{ns3::Ptr\< ns3::Node \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node23 [label="{ns3::Node\n|- m_id\l- m_sid\l- m_devices\l- m_applications\l- m_handlers\l- m_deviceAdditionListeners\l|+ Node()\l+ Node()\l+ ~Node()\l+ GetId()\l+ GetLocalTime()\l+ GetSystemId()\l+ AddDevice()\l+ GetDevice()\l+ GetNDevices()\l+ AddApplication()\land 6 more...\l+ GetTypeId()\l+ ChecksumEnabled()\l# DoDispose()\l# DoInitialize()\l- NotifyDeviceAdded()\l- NonPromiscReceiveFromDevice()\l- PromiscReceiveFromDevice()\l- ReceiveFromDevice()\l- Construct()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/ded/classns3_1_1Node.html",tooltip="A network Node. "];
  Node13 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node24 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_tc" ,arrowhead="odiamond"];
  Node24 [label="{ns3::Ptr\< ns3::TrafficControl\lLayer \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node25 -> Node24 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node25 [label="{ns3::TrafficControlLayer\n|- m_netDevices\l- m_handlers\l|+ GetInstanceTypeId()\l+ TrafficControlLayer()\l+ ~TrafficControlLayer()\l+ RegisterProtocolHandler()\l+ SetupDevice()\l+ SetRootQueueDiscOnDevice()\l+ GetRootQueueDiscOnDevice()\l+ DeleteRootQueueDiscOnDevice()\l+ SetNode()\l+ Receive()\l+ Send()\l+ GetTypeId()\l# DoDispose()\l# DoInitialize()\l# NotifyNewAggregate()\l- TrafficControlLayer()\l- operator=()\l- GetNDevices()\l- GetRootQueueDiscOnDevice\lByIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d25/classns3_1_1TrafficControlLayer.html"];
  Node13 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node26 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_ndCache" ,arrowhead="odiamond"];
  Node26 [label="{ns3::Ptr\< ns3::NdiscCache \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node12 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node27 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_linkLocalAddress" ,arrowhead="odiamond"];
  Node27 [label="{ns3::Ipv6InterfaceAddress\n|- m_state\l- m_scope\l- m_nsDadUid\l|+ Ipv6InterfaceAddress()\l+ Ipv6InterfaceAddress()\l+ Ipv6InterfaceAddress()\l+ Ipv6InterfaceAddress()\l+ ~Ipv6InterfaceAddress()\l+ SetAddress()\l+ GetAddress()\l+ GetPrefix()\l+ SetState()\l+ GetState()\l+ SetScope()\l+ GetScope()\l+ IsInSameSubnet()\l+ SetNsDadUid()\l+ GetNsDadUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d62/classns3_1_1Ipv6InterfaceAddress.html",tooltip="IPv6 address associated with an interface. "];
  Node28 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -m_prefix" ,arrowhead="odiamond"];
  Node28 [label="{ns3::Ipv6Prefix\n|- m_prefix\l|+ Ipv6Prefix()\l+ Ipv6Prefix()\l+ Ipv6Prefix()\l+ Ipv6Prefix()\l+ Ipv6Prefix()\l+ Ipv6Prefix()\l+ ~Ipv6Prefix()\l+ IsMatch()\l+ GetBytes()\l+ GetPrefixLength()\l+ IsEqual()\l+ Print()\l+ GetLoopback()\l+ GetOnes()\l+ GetZero()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0a/classns3_1_1Ipv6Prefix.html",tooltip="Describes an IPv6 prefix. It is just a bitmask like Ipv4Mask. "];
  Node4 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -m_address" ,arrowhead="odiamond"];
  Node29 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_icmpv6" ,arrowhead="odiamond"];
  Node29 [label="{ns3::Ptr\< ns3::Icmpv6L4Protocol \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node30 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node30 [label="{ns3::Icmpv6L4Protocol\n|+ PROT_NUMBER\l- m_maxMulticastSolicit\l- m_maxUnicastSolicit\l- m_cacheList\l- m_alwaysDad\l|+ GetMaxMulticastSolicit()\l+ GetMaxUnicastSolicit()\l+ GetReachableTime()\l+ GetRetransmissionTime()\l+ GetDelayFirstProbe()\l+ Icmpv6L4Protocol()\l+ ~Icmpv6L4Protocol()\l+ SetNode()\l+ NotifyNewAggregate()\l+ GetProtocolNumber()\land 25 more...\l+ GetTypeId()\l+ GetStaticProtocolNumber()\l+ FunctionDadTimeout()\l# DoDispose()\l- Forward()\l- HandleNS()\l- HandleRS()\l- HandleRA()\l- HandleEchoRequest()\l- HandleNA()\l- HandleRedirection()\l- HandleDestinationUnreachable()\l- HandleTimeExceeded()\l- HandlePacketTooBig()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d1d/classns3_1_1Icmpv6L4Protocol.html",tooltip="An implementation of the ICMPv6 protocol. "];
  Node31 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node31 [label="{ns3::IpL4Protocol\n||+ ~IpL4Protocol()\l+ GetProtocolNumber()\l+ Receive()\l+ Receive()\l+ ReceiveIcmp()\l+ ReceiveIcmp()\l+ SetDownTarget()\l+ SetDownTarget6()\l+ GetDownTarget()\l+ GetDownTarget6()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/da5/classns3_1_1IpL4Protocol.html",tooltip="L4 Protocol abstract base class. "];
  Node13 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node32 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_downTarget" ,arrowhead="odiamond"];
  Node32 [label="{ns3::Callback\< void,\l Ptr\< Packet \>, Ipv6Address,\l Ipv6Address, uint8_t, Ptr\l\< Ipv6Route \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node33 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node33 [label="{ns3::CallbackBase\n||+ CallbackBase()\l+ GetImpl()\l# CallbackBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1CallbackBase.html"];
  Node34 -> Node33 [color="grey25",fontsize="10",style="solid",label=" #m_impl" ,arrowhead="odiamond"];
  Node34 [label="{ns3::Ptr\< ns3::CallbackImpl\lBase \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node35 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node35 [label="{ns3::CallbackImplBase\n||+ ~CallbackImplBase()\l+ IsEqual()\l+ GetTypeid()\l# Demangle()\l# GetCppTypeid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dfa/classns3_1_1CallbackImplBase.html"];
  Node36 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node36 [label="{ns3::SimpleRefCount\l\< CallbackImplBase \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node10 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node3 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_delayFirstProbe\n-m_reachableTime\n-m_retransmissionTime" ,arrowhead="odiamond"];
  Node37 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_solicitationJitter" ,arrowhead="odiamond"];
  Node37 [label="{ns3::Ptr\< ns3::RandomVariable\lStream \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node38 -> Node37 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node38 [label="{ns3::RandomVariableStream\n|- m_isAntithetic\l- m_stream\l|+ RandomVariableStream()\l+ ~RandomVariableStream()\l+ SetStream()\l+ GetStream()\l+ SetAntithetic()\l+ IsAntithetic()\l+ GetValue()\l+ GetInteger()\l+ GetTypeId()\l# Peek()\l- RandomVariableStream()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/daa/classns3_1_1RandomVariableStream.html",tooltip="The basic uniform Random Number Generator (RNG). "];
  Node13 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node39 -> Node38 [color="grey25",fontsize="10",style="solid",label=" -m_rng" ,arrowhead="odiamond"];
  Node39 [label="{ns3::RngStream\n|- m_currentState\l|+ RngStream()\l+ RngStream()\l+ RandU01()\l- AdvanceNthBy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d35/classns3_1_1RngStream.html",tooltip="Combined Multiple-Recursive Generator MRG32k3a. "];
}
