digraph "ns3::SsServiceFlowManager"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::SsServiceFlowManager\n|- m_maxDsaReqRetries\l- m_currentTransactionId\l- m_transactionIdIndex\l- m_dsaReqRetries\l|+ SsServiceFlowManager()\l+ ~SsServiceFlowManager()\l+ DoDispose()\l+ AddServiceFlow()\l+ AddServiceFlow()\l+ SetMaxDsaReqRetries()\l+ GetMaxDsaReqRetries()\l+ GetDsaRspTimeoutEvent()\l+ GetDsaAckTimeoutEvent()\l+ InitiateServiceFlows()\l+ CreateDsaReq()\l+ CreateDsaAck()\l+ ScheduleDsaReq()\l+ ProcessDsaRsp()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::ServiceFlowManager\n|- m_serviceFlows\l|+ ServiceFlowManager()\l+ ~ServiceFlowManager()\l+ DoDispose()\l+ AddServiceFlow()\l+ GetServiceFlow()\l+ GetServiceFlow()\l+ GetServiceFlows()\l+ AreServiceFlowsAllocated()\l+ AreServiceFlowsAllocated()\l+ AreServiceFlowsAllocated()\l+ GetNextServiceFlowToAllocate()\l+ GetNrServiceFlows()\l+ DoClassify()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d56/classns3_1_1ServiceFlowManager.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node6 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node3 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_dsaAck" ,arrowhead="odiamond"];
  Node8 [label="{ns3::DsaAck\n|- m_transactionId\l- m_confirmationCode\l|+ DsaAck()\l+ ~DsaAck()\l+ SetTransactionId()\l+ GetTransactionId()\l+ SetConfirmationCode()\l+ GetConfirmationCode()\l+ GetName()\l+ GetInstanceTypeId()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/da6/classns3_1_1DsaAck.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::Header\n||+ ~Header()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dae/classns3_1_1Header.html",tooltip="Protocol header serialization and deserialization. "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::Chunk\n||+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9b/classns3_1_1Chunk.html",tooltip="abstract base class for ns3::Header and ns3::Trailer "];
  Node5 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_dsaAckTimeoutEvent\n-m_dsaRspTimeoutEvent" ,arrowhead="odiamond"];
  Node11 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node12 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node13 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_pendingServiceFlow" ,arrowhead="odiamond"];
  Node16 [label="{ns3::ServiceFlow\n|- m_sfid\l- m_serviceClassName\l- m_qosParamSetType\l- m_trafficPriority\l- m_maxSustainedTrafficRate\l- m_maxTrafficBurst\l- m_minReservedTrafficRate\l- m_minTolerableTrafficRate\l- m_schedulingType\l- m_requestTransmissionPolicy\land 22 more...\l|+ ToTlv()\l+ ServiceFlow()\l+ CheckClassifierMatch()\l+ ServiceFlow()\l+ ServiceFlow()\l+ ServiceFlow()\l+ ServiceFlow()\l+ ~ServiceFlow()\l+ operator=()\l+ InitValues()\land 79 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/ded/classns3_1_1ServiceFlow.html"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_connection" ,arrowhead="odiamond"];
  Node17 [label="{ns3::Ptr\< ns3::WimaxConnection \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node18 [label="{ns3::WimaxConnection\n|- m_cidType\l- m_fragmentsQueue\l|+ WimaxConnection()\l+ ~WimaxConnection()\l+ GetCid()\l+ GetType()\l+ GetQueue()\l+ SetServiceFlow()\l+ GetServiceFlow()\l+ GetSchedulingType()\l+ Enqueue()\l+ Dequeue()\land 7 more...\l+ GetTypeId()\l- DoDispose()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/db1/classns3_1_1WimaxConnection.html"];
  Node3 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_serviceFlow" ,arrowhead="odiamond"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_cid" ,arrowhead="odiamond"];
  Node19 [label="{ns3::Cid\n|- m_identifier\l|+ Cid()\l+ Cid()\l+ ~Cid()\l+ GetIdentifier()\l+ IsMulticast()\l+ IsBroadcast()\l+ IsPadding()\l+ IsInitialRanging()\l+ Broadcast()\l+ Padding()\l+ InitialRanging()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d5c/classns3_1_1Cid.html",tooltip="Cid class. "];
  Node20 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_queue" ,arrowhead="odiamond"];
  Node20 [label="{ns3::Ptr\< ns3::WimaxMacQueue \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node21 [label="{ns3::WimaxMacQueue\n|- m_queue\l- m_maxSize\l- m_bytes\l- m_nrDataPackets\l- m_nrRequestPackets\l|+ WimaxMacQueue()\l+ WimaxMacQueue()\l+ ~WimaxMacQueue()\l+ SetMaxSize()\l+ GetMaxSize()\l+ Enqueue()\l+ Dequeue()\l+ Dequeue()\l+ Peek()\l+ Peek()\land 15 more...\l+ GetTypeId()\l- Front()\l- Pop()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/db1/classns3_1_1WimaxMacQueue.html"];
  Node3 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_traceEnqueue\n-m_traceDrop\n-m_traceDequeue" ,arrowhead="odiamond"];
  Node22 [label="{ns3::TracedCallback\l\< ns3::Ptr\< const ns3\l::Packet \> \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node23 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_record" ,arrowhead="odiamond"];
  Node23 [label="{ns3::ServiceFlowRecord\n|- m_grantSize\l- m_pktsSent\l- m_pktsRcvd\l- m_bytesSent\l- m_bytesRcvd\l- m_requestedBandwidth\l- m_grantedBandwidth\l- m_grantedBandwidthTemp\l- m_bwSinceLastExpiry\l- m_backlogged\l- m_backloggedTemp\l|+ ServiceFlowRecord()\l+ ~ServiceFlowRecord()\l+ SetGrantSize()\l+ GetGrantSize()\l+ SetGrantTimeStamp()\l+ GetGrantTimeStamp()\l+ SetDlTimeStamp()\l+ GetDlTimeStamp()\l+ SetPktsSent()\l+ UpdatePktsSent()\land 30 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d39/classns3_1_1ServiceFlowRecord.html",tooltip="this class implements a structure to manage some parameters and statistics related to a service flow ..."];
  Node24 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -m_grantTimeStamp\n-m_lastGrantTime\n-m_dlTimeStamp" ,arrowhead="odiamond"];
  Node24 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node25 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_convergenceSublayerParam" ,arrowhead="odiamond"];
  Node25 [label="{ns3::CsParameters\n|- m_classifierDscAction\l|+ CsParameters()\l+ ~CsParameters()\l+ CsParameters()\l+ CsParameters()\l+ SetClassifierDscAction()\l+ SetPacketClassifierRule()\l+ GetClassifierDscAction()\l+ GetPacketClassifierRule()\l+ ToTlv()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dfc/classns3_1_1CsParameters.html",tooltip="CsParameters class. "];
  Node26 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_packetClassifierRule" ,arrowhead="odiamond"];
  Node26 [label="{ns3::IpcsClassifierRecord\n|- m_priority\l- m_index\l- m_tosLow\l- m_tosHigh\l- m_tosMask\l- m_protocol\l- m_srcAddr\l- m_dstAddr\l- m_srcPortRange\l- m_dstPortRange\l- m_cid\l|+ IpcsClassifierRecord()\l+ ~IpcsClassifierRecord()\l+ IpcsClassifierRecord()\l+ IpcsClassifierRecord()\l+ ToTlv()\l+ AddSrcAddr()\l+ AddDstAddr()\l+ AddSrcPortRange()\l+ AddDstPortRange()\l+ AddProtocol()\land 7 more...\l- CheckMatchSrcAddr()\l- CheckMatchDstAddr()\l- CheckMatchSrcPort()\l- CheckMatchDstPort()\l- CheckMatchProtocol()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d4e/classns3_1_1IpcsClassifierRecord.html",tooltip="IpcsClassifierRecord class. "];
  Node27 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_dsaReq" ,arrowhead="odiamond"];
  Node27 [label="{ns3::DsaReq\n|- m_transactionId\l- m_sfid\l|+ DsaReq()\l+ ~DsaReq()\l+ DsaReq()\l+ SetTransactionId()\l+ SetSfid()\l+ SetCid()\l+ SetServiceFlow()\l+ GetServiceFlow()\l+ GetTransactionId()\l+ GetSfid()\land 7 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/ddb/classns3_1_1DsaReq.html"];
  Node9 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -m_serviceFlow" ,arrowhead="odiamond"];
  Node19 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -m_cid" ,arrowhead="odiamond"];
  Node28 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node28 [label="{ns3::Ptr\< ns3::Subscriber\lStationNetDevice \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node29 -> Node28 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node29 [label="{ns3::SubscriberStationNet\lDevice\n|- m_intervalT7\l- m_maxContentionRangingRetries\l- m_dcdCount\l- m_ucdCount\l- m_allocationStartTime\l- m_nrDlMapElements\l- m_nrUlMapElements\l- m_nrDlMapRecvd\l- m_nrUlMapRecvd\l- m_nrDcdRecvd\l- m_nrUcdRecvd\l- m_modulationType\l- m_areManagementConnections\lAllocated\l- m_areServiceFlowsAllocated\l|+ SubscriberStationNetDevice()\l+ SubscriberStationNetDevice()\l+ ~SubscriberStationNetDevice()\l+ InitSubscriberStationNet\lDevice()\l+ SetLostDlMapInterval()\l+ GetLostDlMapInterval()\l+ SetLostUlMapInterval()\l+ GetLostUlMapInterval()\l+ SetMaxDcdInterval()\l+ GetMaxDcdInterval()\land 48 more...\l+ GetTypeId()\l- DoDispose()\l- DoSend()\l- DoReceive()\l- ProcessDlMap()\l- ProcessUlMap()\l- ProcessDcd()\l- ProcessUcd()\l- GetDefaultLostDlMapInterval()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/de5/classns3_1_1SubscriberStationNetDevice.html"];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node30 [label="{ns3::WimaxNetDevice\n|+ m_direction\l- m_ifIndex\l- m_name\l- m_linkUp\l- m_mtu\l- m_dlChannels\l- m_state\l- m_symbolIndex\l- m_ttg\l- m_rtg\l- MAX_MSDU_SIZE\l- DEFAULT_MSDU_SIZE\l- m_nrFrames\l|+ WimaxNetDevice()\l+ ~WimaxNetDevice()\l+ SetTtg()\l+ GetTtg()\l+ SetRtg()\l+ GetRtg()\l+ Attach()\l+ SetPhy()\l+ GetPhy()\l+ SetChannel()\land 60 more...\l+ GetTypeId()\l- WimaxNetDevice()\l- operator=()\l- DoSend()\l- DoReceive()\l- DoGetChannel()\l- Receive()\l- InitializeChannels()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d52/classns3_1_1WimaxNetDevice.html",tooltip="Hold together all WiMAX-related objects in a NetDevice.This class holds together ns3::WimaxPhy, ns3::WimaxConnection, ns3::ConectionManager, ns3::BurstProfileManager, and ns3::BandwidthManager. "];
  Node31 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node31 [label="{ns3::NetDevice\n|+ isEnbTypeForDc\l|+ ~NetDevice()\l+ SetIfIndex()\l+ GetIfIndex()\l+ GetChannel()\l+ SetAddress()\l+ GetAddress()\l+ SetMtu()\l+ GetMtu()\l+ IsLinkUp()\l+ AddLinkChangeCallback()\land 15 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dac/classns3_1_1NetDevice.html",tooltip="Network layer to device interface. "];
  Node3 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node32 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_address" ,arrowhead="odiamond"];
  Node32 [label="{ns3::Mac48Address\n|- m_address\l|+ Mac48Address()\l+ Mac48Address()\l+ CopyFrom()\l+ CopyTo()\l+ operator Address()\l+ IsBroadcast()\l+ IsGroup()\l+ ConvertFrom()\l+ IsMatchingType()\l+ Allocate()\l+ GetBroadcast()\l+ GetMulticast()\l+ GetMulticast()\l+ GetMulticastPrefix()\l+ GetMulticast6Prefix()\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dee/classns3_1_1Mac48Address.html",tooltip="an EUI-48 address "];
  Node17 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_broadcastConnection\n-m_initialRangingConnection" ,arrowhead="odiamond"];
  Node33 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_promiscRx" ,arrowhead="odiamond"];
  Node33 [label="{ns3::Callback\< bool,\l Ptr\< NetDevice \>, Ptr\l\< const Packet \>, uint16\l_t, const Address &, const\l Address &, enum PacketType \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node34 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node34 [label="{ns3::CallbackBase\n||+ CallbackBase()\l+ GetImpl()\l# CallbackBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1CallbackBase.html"];
  Node35 -> Node34 [color="grey25",fontsize="10",style="solid",label=" #m_impl" ,arrowhead="odiamond"];
  Node35 [label="{ns3::Ptr\< ns3::CallbackImpl\lBase \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node36 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node36 [label="{ns3::CallbackImplBase\n||+ ~CallbackImplBase()\l+ IsEqual()\l+ GetTypeid()\l# Demangle()\l# GetCppTypeid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dfa/classns3_1_1CallbackImplBase.html"];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node37 [label="{ns3::SimpleRefCount\l\< CallbackImplBase \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node15 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node38 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_connectionManager" ,arrowhead="odiamond"];
  Node38 [label="{ns3::Ptr\< ns3::Connection\lManager \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node39 -> Node38 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node39 [label="{ns3::ConnectionManager\n|- m_basicConnections\l- m_primaryConnections\l- m_transportConnections\l- m_multicastConnections\l|+ ConnectionManager()\l+ ~ConnectionManager()\l+ DoDispose()\l+ SetCidFactory()\l+ AllocateManagementConnections()\l+ CreateConnection()\l+ AddConnection()\l+ GetConnection()\l+ GetConnections()\l+ GetNPackets()\l+ HasPackets()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/df6/classns3_1_1ConnectionManager.html"];
  Node3 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node40 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -m_cidFactory" ,arrowhead="odiamond"];
  Node40 [label="{ns3::CidFactory\n|- m_m\l- m_basicIdentifier\l- m_primaryIdentifier\l- m_transportOrSecondaryIdentifier\l- m_multicastPollingIdentifier\l|+ CidFactory()\l+ AllocateBasic()\l+ AllocatePrimary()\l+ AllocateTransportOrSecondary()\l+ AllocateMulticast()\l+ Allocate()\l+ IsTransport()\l+ IsPrimary()\l+ IsBasic()\l+ FreeCid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d51/classns3_1_1CidFactory.html"];
  Node41 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_currentUcd" ,arrowhead="odiamond"];
  Node41 [label="{ns3::Ucd\n|- m_configurationChangeCount\l- m_rangingBackoffStart\l- m_rangingBackoffEnd\l- m_requestBackoffStart\l- m_requestBackoffEnd\l- m_ulBurstProfiles\l- m_nrUlBurstProfiles\l|+ Ucd()\l+ ~Ucd()\l+ SetConfigurationChangeCount()\l+ SetRangingBackoffStart()\l+ SetRangingBackoffEnd()\l+ SetRequestBackoffStart()\l+ SetRequestBackoffEnd()\l+ SetChannelEncodings()\l+ AddUlBurstProfile()\l+ SetNrUlBurstProfiles()\land 14 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dda/classns3_1_1Ucd.html"];
  Node9 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node42 -> Node41 [color="grey25",fontsize="10",style="solid",label=" -m_channelEncodings" ,arrowhead="odiamond"];
  Node42 [label="{ns3::OfdmUcdChannelEncodings\n|- m_sbchnlReqRegionFullParams\l- m_sbchnlFocContCodes\l|+ OfdmUcdChannelEncodings()\l+ ~OfdmUcdChannelEncodings()\l+ SetSbchnlReqRegionFullParams()\l+ SetSbchnlFocContCodes()\l+ GetSbchnlReqRegionFullParams()\l+ GetSbchnlFocContCodes()\l+ GetSize()\l- DoWrite()\l- DoRead()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d27/classns3_1_1OfdmUcdChannelEncodings.html"];
  Node43 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node43 [label="{ns3::UcdChannelEncodings\n|- m_bwReqOppSize\l- m_rangReqOppSize\l- m_frequency\l|+ UcdChannelEncodings()\l+ ~UcdChannelEncodings()\l+ SetBwReqOppSize()\l+ SetRangReqOppSize()\l+ SetFrequency()\l+ GetBwReqOppSize()\l+ GetRangReqOppSize()\l+ GetFrequency()\l+ GetSize()\l+ Write()\l+ Read()\l- DoWrite()\l- DoRead()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d44/classns3_1_1UcdChannelEncodings.html"];
  Node44 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_currentDcd" ,arrowhead="odiamond"];
  Node44 [label="{ns3::Dcd\n|- m_reserved\l- m_configurationChangeCount\l- m_dlBurstProfiles\l- m_nrDlBurstProfiles\l|+ Dcd()\l+ ~Dcd()\l+ SetConfigurationChangeCount()\l+ SetChannelEncodings()\l+ AddDlBurstProfile()\l+ SetNrDlBurstProfiles()\l+ GetConfigurationChangeCount()\l+ GetChannelEncodings()\l+ GetDlBurstProfiles()\l+ GetNrDlBurstProfiles()\land 6 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dcc/classns3_1_1Dcd.html"];
  Node9 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node45 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -m_channelEncodings" ,arrowhead="odiamond"];
  Node45 [label="{ns3::OfdmDcdChannelEncodings\n|- m_channelNr\l- m_ttg\l- m_rtg\l- m_chnlSwitchFrameNr\l- m_frameDurationCode\l- m_frameNumber\l|+ OfdmDcdChannelEncodings()\l+ ~OfdmDcdChannelEncodings()\l+ SetChannelNr()\l+ SetTtg()\l+ SetRtg()\l+ SetBaseStationId()\l+ SetFrameDurationCode()\l+ SetFrameNumber()\l+ GetChannelNr()\l+ GetTtg()\l+ GetRtg()\l+ GetBaseStationId()\l+ GetFrameDurationCode()\l+ GetFrameNumber()\l+ GetSize()\l- DoWrite()\l- DoRead()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dc3/classns3_1_1OfdmDcdChannelEncodings.html"];
  Node46 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node46 [label="{ns3::DcdChannelEncodings\n|- m_bsEirp\l- m_eirXPIrMax\l- m_frequency\l|+ DcdChannelEncodings()\l+ ~DcdChannelEncodings()\l+ SetBsEirp()\l+ SetEirxPIrMax()\l+ SetFrequency()\l+ GetBsEirp()\l+ GetEirxPIrMax()\l+ GetFrequency()\l+ GetSize()\l+ Write()\l+ Read()\l- DoWrite()\l- DoRead()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/de0/classns3_1_1DcdChannelEncodings.html"];
  Node32 -> Node45 [color="grey25",fontsize="10",style="solid",label=" -m_baseStationId" ,arrowhead="odiamond"];
  Node47 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node47 [label="{ns3::Ptr\< ns3::Node \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node48 -> Node47 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node48 [label="{ns3::Node\n|- m_id\l- m_sid\l- m_devices\l- m_applications\l- m_handlers\l- m_deviceAdditionListeners\l|+ Node()\l+ Node()\l+ ~Node()\l+ GetId()\l+ GetLocalTime()\l+ GetSystemId()\l+ AddDevice()\l+ GetDevice()\l+ GetNDevices()\l+ AddApplication()\land 6 more...\l+ GetTypeId()\l+ ChecksumEnabled()\l# DoDispose()\l# DoInitialize()\l- NotifyDeviceAdded()\l- NonPromiscReceiveFromDevice()\l- PromiscReceiveFromDevice()\l- ReceiveFromDevice()\l- Construct()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/ded/classns3_1_1Node.html",tooltip="A network Node. "];
  Node3 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node49 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_forwardUp" ,arrowhead="odiamond"];
  Node49 [label="{ns3::Callback\< bool,\l Ptr\< NetDevice \>, Ptr\l\< const Packet \>, uint16\l_t, const Address & \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node34 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node24 -> Node30 [color="grey25",fontsize="10",style="solid",label=" +m_frameStartTime" ,arrowhead="odiamond"];
  Node50 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_linkChange" ,arrowhead="odiamond"];
  Node50 [label="{ns3::Callback\< void \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node34 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node51 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_phy" ,arrowhead="odiamond"];
  Node51 [label="{ns3::Ptr\< ns3::WimaxPhy \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node52 -> Node51 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node52 [label="{ns3::WimaxPhy\n|- m_txFrequency\l- m_rxFrequency\l- m_scanningFrequency\l- m_duplex\l- m_state\l- m_nrCarriers\l- m_frequency\l- m_channelBandwidth\l- m_psPerSymbol\l- m_psPerFrame\l- m_symbolsPerFrame\l|+ WimaxPhy()\l+ ~WimaxPhy()\l+ Attach()\l+ GetChannel()\l+ SetDevice()\l+ GetDevice()\l+ SetReceiveCallback()\l+ GetReceiveCallback()\l+ Send()\l+ GetPhyType()\land 48 more...\l+ GetTypeId()\l- GetModulationFecParams()\l- EndScanning()\l- DoGetTransmissionTime()\l- DoAttach()\l- DoSetDataRates()\l- DoGetDataRate()\l- DoGetNrSymbols()\l- DoGetNrBytes()\l- DoGetTtg()\l- DoGetRtg()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dc8/classns3_1_1WimaxPhy.html"];
  Node3 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node53 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_channel" ,arrowhead="odiamond"];
  Node53 [label="{ns3::Ptr\< ns3::WimaxChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node54 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node54 [label="{ns3::WimaxChannel\n||+ WimaxChannel()\l+ ~WimaxChannel()\l+ Attach()\l+ GetNDevices()\l+ GetDevice()\l+ AssignStreams()\l+ GetTypeId()\l- DoAttach()\l- DoGetNDevices()\l- DoGetDevice()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d3a/classns3_1_1WimaxChannel.html"];
  Node55 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node55 [label="{ns3::Channel\n|- m_id\l|+ Channel()\l+ ~Channel()\l+ GetId()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d67/classns3_1_1Channel.html",tooltip="Abstract Channel Base Class. "];
  Node3 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node56 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_rxCallback" ,arrowhead="odiamond"];
  Node56 [label="{ns3::Callback\< void,\l ns3::Ptr\< const ns3\l::PacketBurst \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node34 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_dlChnlSrchTimeoutEvent" ,arrowhead="odiamond"];
  Node24 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_psDuration\n-m_frameDuration\n-m_symbolDuration" ,arrowhead="odiamond"];
  Node57 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_scanningCallback" ,arrowhead="odiamond"];
  Node57 [label="{ns3::Callback\< void,\l bool, uint64_t \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node34 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node58 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node58 [label="{ns3::Ptr\< ns3::WimaxNetDevice \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node30 -> Node58 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node59 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_mobility" ,arrowhead="odiamond"];
  Node59 [label="{ns3::Ptr\< ns3::Object \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node3 -> Node59 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node60 -> Node30 [color="grey25",fontsize="10",style="solid",label=" +m_traceTx\n+m_traceRx" ,arrowhead="odiamond"];
  Node60 [label="{ns3::TracedCallback\l\< ns3::Ptr\< const ns3\l::Packet \>, const ns3\l::Mac48Address & \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node59 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_mobility" ,arrowhead="odiamond"];
  Node61 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_bandwidthManager" ,arrowhead="odiamond"];
  Node61 [label="{ns3::Ptr\< ns3::Bandwidth\lManager \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node62 -> Node61 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node62 [label="{ns3::BandwidthManager\n|- m_nrBwReqsSent\l|+ BandwidthManager()\l+ ~BandwidthManager()\l+ DoDispose()\l+ CalculateAllocationSize()\l+ SelectFlowForRequest()\l+ SendBandwidthRequest()\l+ ProcessBandwidthRequest()\l+ SetSubframeRatio()\l+ GetSymbolsPerFrameAllocated()\l+ GetTypeId()\l- BandwidthManager()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d7f/classns3_1_1BandwidthManager.html",tooltip="This class manage the bandwidth request and grant mechanism. The bandwidth request and grant mechanis..."];
  Node3 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node58 -> Node62 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node63 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_burstProfileManager" ,arrowhead="odiamond"];
  Node63 [label="{ns3::Ptr\< ns3::BurstProfile\lManager \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node64 -> Node63 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node64 [label="{ns3::BurstProfileManager\n||+ BurstProfileManager()\l+ ~BurstProfileManager()\l+ DoDispose()\l+ GetNrBurstProfilesToDefine()\l+ GetModulationType()\l+ GetBurstProfile()\l+ GetBurstProfileForSS()\l+ GetModulationTypeForSS()\l+ GetBurstProfileToRequest()\l+ GetTypeId()\l- BurstProfileManager()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d94/classns3_1_1BurstProfileManager.html"];
  Node3 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node58 -> Node64 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node22 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_ssTxTrace\n-m_ssPromiscRxTrace\n-m_ssRxTrace\n-m_ssRxDropTrace\n-m_ssTxDropTrace" ,arrowhead="odiamond"];
  Node32 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_baseStationId" ,arrowhead="odiamond"];
  Node65 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_dlBurstProfile" ,arrowhead="odiamond"];
  Node65 [label="{ns3::OfdmDlBurstProfile\n|- m_type\l- m_length\l- m_diuc\l- m_fecCodeType\l|+ OfdmDlBurstProfile()\l+ ~OfdmDlBurstProfile()\l+ SetType()\l+ SetLength()\l+ SetDiuc()\l+ SetFecCodeType()\l+ GetType()\l+ GetLength()\l+ GetDiuc()\l+ GetFecCodeType()\l+ GetSize()\l+ Write()\l+ Read()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/da9/classns3_1_1OfdmDlBurstProfile.html"];
  Node17 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_primaryConnection\n-m_basicConnection" ,arrowhead="odiamond"];
  Node66 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_traceSSRx" ,arrowhead="odiamond"];
  Node66 [label="{ns3::TracedCallback\l\< ns3::Ptr\< const ns3\l::Packet \>, ns3::Mac48Address,\l const ns3::Cid & \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node67 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_classifier" ,arrowhead="odiamond"];
  Node67 [label="{ns3::Ptr\< ns3::IpcsClassifier \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node68 -> Node67 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node68 [label="{ns3::IpcsClassifier\n||+ IpcsClassifier()\l+ ~IpcsClassifier()\l+ Classify()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d54/classns3_1_1IpcsClassifier.html"];
  Node3 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_lostDlMapEvent\n-m_lostUlMapEvent\n-m_ucdWaitTimeoutEvent\n-m_dcdWaitTimeoutEvent\n-m_rangOppWaitTimeoutEvent" ,arrowhead="odiamond"];
  Node69 -> Node29 [color="grey25",fontsize="10",style="solid",label=" +m_linkManager" ,arrowhead="odiamond"];
  Node69 [label="{ns3::Ptr\< ns3::SSLinkManager \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node70 -> Node69 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node70 [label="{ns3::SSLinkManager\n|- m_rangingStatus\l- m_bsEirp\l- m_eirXPIrMax\l- m_pTxIrMax\l- m_initRangOppNumber\l- m_contentionRangingRetries\l- m_rngReqFrameNumber\l- m_dlChnlNr\l- m_frequency\l- m_rangingIntervalFound\land 8 more...\l|+ SSLinkManager()\l+ ~SSLinkManager()\l+ DoDispose()\l+ SetBsEirp()\l+ SetEirXPIrMax()\l+ SetRangingIntervalFound()\l+ GetRangingIntervalFound()\l+ SetNrRangingTransOpps()\l+ SetRangingCW()\l+ IncrementNrInvitedPollsRecvd()\land 8 more...\l+ GetTypeId()\l- SSLinkManager()\l- operator=()\l- EndScanning()\l- StartSynchronizing()\l- SearchForDlChannel()\l- SelectRandomBackoff()\l- IncreaseRangingRequestCW()\l- ResetRangingRequestCW()\l- DeleteUplinkParameters()\l- AdjustRangingParameters()\l- NegotiateBasicCapabilities()\l- CalculateMaxIRSignalStrength()\l- GetMinTransmitPowerLevel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d41/classns3_1_1SSLinkManager.html",tooltip="this class implements the link manager of subscriber station net device. An ss link manager is respon..."];
  Node3 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 -> Node70 [color="grey25",fontsize="10",style="solid",label=" -m_waitForRngRspEvent\n-m_dlMapSyncTimeoutEvent" ,arrowhead="odiamond"];
  Node71 -> Node70 [color="grey25",fontsize="10",style="solid",label=" -m_rngreq" ,arrowhead="odiamond"];
  Node71 [label="{ns3::RngReq\n|- m_reserved\l- m_reqDlBurstProfile\l- m_rangingAnomalies\l|+ RngReq()\l+ ~RngReq()\l+ SetReqDlBurstProfile()\l+ SetMacAddress()\l+ SetRangingAnomalies()\l+ GetReqDlBurstProfile()\l+ GetMacAddress()\l+ GetRangingAnomalies()\l+ GetName()\l+ GetInstanceTypeId()\l+ Print()\l+ PrintDebug()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d81/classns3_1_1RngReq.html"];
  Node9 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node32 -> Node71 [color="grey25",fontsize="10",style="solid",label=" -m_macAddress" ,arrowhead="odiamond"];
  Node28 -> Node70 [color="grey25",fontsize="10",style="solid",label=" -m_ss" ,arrowhead="odiamond"];
  Node72 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_serviceFlowManager" ,arrowhead="odiamond"];
  Node72 [label="{ns3::Ptr\< ns3::SsService\lFlowManager \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node1 -> Node72 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node24 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_lostDlMapInterval\n-m_intervalT20\n-m_intervalT21\n-m_intervalT12\n-m_intervalT1\n-m_intervalT2\n-m_intervalT3\n-m_maxDcdInterval\n-m_maxUcdInterval\n-m_lostUlMapInterval\n..." ,arrowhead="odiamond"];
  Node73 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_ulBurstProfile" ,arrowhead="odiamond"];
  Node73 [label="{ns3::OfdmUlBurstProfile\n|- m_type\l- m_length\l- m_uiuc\l- m_fecCodeType\l|+ OfdmUlBurstProfile()\l+ ~OfdmUlBurstProfile()\l+ SetType()\l+ SetLength()\l+ SetUiuc()\l+ SetFecCodeType()\l+ GetType()\l+ GetLength()\l+ GetUiuc()\l+ GetFecCodeType()\l+ GetSize()\l+ Write()\l+ Read()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/db5/classns3_1_1OfdmUlBurstProfile.html"];
  Node74 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_scheduler" ,arrowhead="odiamond"];
  Node74 [label="{ns3::Ptr\< ns3::SSScheduler \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node75 -> Node74 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node75 [label="{ns3::SSScheduler\n|- m_pollMe\l|+ SSScheduler()\l+ ~SSScheduler()\l+ SetPollMe()\l+ GetPollMe()\l+ Schedule()\l+ DoDispose()\l+ GetTypeId()\l- SSScheduler()\l- operator=()\l- SelectConnection()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d78/classns3_1_1SSScheduler.html"];
  Node3 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node28 -> Node75 [color="grey25",fontsize="10",style="solid",label=" -m_ss" ,arrowhead="odiamond"];
}
