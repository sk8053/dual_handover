digraph "ns3::MmWavePhy"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::MmWavePhy\n|# m_txPower\l# m_noiseFigure\l# m_cellId\l# m_packetBurstMap\l# m_controlMessageQueue\l# m_currTddMap\l# m_sfAllocInfo\l# m_frameNum\l# m_sfNum\l# m_slotNum\l# m_tddPatternForSlotMap\l# m_slotAllocInfoMap\l# m_raPreambleId\l# m_sfAllocInfoUpdated\l|+ MmWavePhy()\l+ MmWavePhy()\l+ ~MmWavePhy()\l+ SetDevice()\l+ GetDevice()\l+ SetChannel()\l+ CreateTxPowerSpectralDensity()\l+ DoDispose()\l+ DoInitialize()\l+ GetTti()\land 18 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node5 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node6 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node2 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_downlinkSpectrumPhy\n#m_spectrumPhy\n#m_uplinkSpectrumPhy" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Ptr\< ns3::MmWaveSpectrum\lPhy \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node8 [label="{ns3::MmWaveSpectrumPhy\n|+ isAdditionalMmWave\l- m_rxPacketBurstList\l- m_rxControlMessageList\l- m_cellId\l- m_state\l- m_expectedTbs\l- m_dataErrorModelEnabled\l- m_ctrlErrorModelEnabled\l- m_isEnb\l- m_fileName\l|+ MmWaveSpectrumPhy()\l+ ~MmWaveSpectrumPhy()\l+ DoDispose()\l+ Reset()\l+ ResetSpectrumModel()\l+ SetDevice()\l+ GetDevice()\l+ SetMobility()\l+ GetMobility()\l+ SetChannel()\land 23 more...\l+ GetTypeId()\l- ChangeState()\l- EndTx()\l- EndRxData()\l- EndRxCtrl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d08/classns3_1_1MmWaveSpectrumPhy.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::SpectrumPhy\n||+ SpectrumPhy()\l+ ~SpectrumPhy()\l+ SetDevice()\l+ GetDevice()\l+ SetMobility()\l+ GetMobility()\l+ SetChannel()\l+ GetRxSpectrumModel()\l+ GetRxAntenna()\l+ StartRx()\l+ GetTypeId()\l- SpectrumPhy()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d12/classns3_1_1SpectrumPhy.html"];
  Node2 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_channel" ,arrowhead="odiamond"];
  Node10 [label="{ns3::Ptr\< ns3::SpectrumChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node11 [label="{ns3::SpectrumChannel\n||+ ~SpectrumChannel()\l+ AddPropagationLossModel()\l+ AddSpectrumPropagationLoss\lModel()\l+ SetPropagationDelayModel()\l+ StartTx()\l+ AddRx()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d59/classns3_1_1SpectrumChannel.html"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::Channel\n|- m_id\l|+ Channel()\l+ ~Channel()\l+ GetId()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d67/classns3_1_1Channel.html",tooltip="Abstract Channel Base Class. "];
  Node2 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_mobility" ,arrowhead="odiamond"];
  Node13 [label="{ns3::Ptr\< ns3::MobilityModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node14 [label="{ns3::MobilityModel\n||+ MobilityModel()\l+ ~MobilityModel()\l+ GetPosition()\l+ SetPosition()\l+ GetVelocity()\l+ GetDistanceFrom()\l+ GetRelativeSpeed()\l+ AssignStreams()\l+ GetTypeId()\l# NotifyCourseChange()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/dc5/classns3_1_1MobilityModel.html",tooltip="Keep track of the current position and velocity of an object. "];
  Node2 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -m_courseChangeTrace" ,arrowhead="odiamond"];
  Node15 [label="{ns3::TracedCallback\l\< ns3::Ptr\< const ns3\l::MobilityModel \> \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node16 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_antenna" ,arrowhead="odiamond"];
  Node16 [label="{ns3::Ptr\< ns3::AntennaModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node17 [label="{ns3::AntennaModel\n||+ AntennaModel()\l+ ~AntennaModel()\l+ GetGainDb()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d1c/classns3_1_1AntennaModel.html",tooltip="interface for antenna radiation pattern models "];
  Node2 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_harqPhyModule" ,arrowhead="odiamond"];
  Node18 [label="{ns3::Ptr\< ns3::MmWaveHarq\lPhy \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node19 [label="{ns3::MmWaveHarqPhy\n|- m_harqNum\l- m_miDlHarqProcessesInfoMap\l- m_miUlHarqProcessesInfoMap\l|+ MmWaveHarqPhy()\l+ ~MmWaveHarqPhy()\l+ SubframeIndication()\l+ GetAccumulatedMiDl()\l+ GetHarqProcessInfoDl()\l+ GetAccumulatedMiUl()\l+ GetHarqProcessInfoUl()\l+ UpdateDlHarqProcessStatus()\l+ ResetDlHarqProcessStatus()\l+ UpdateUlHarqProcessStatus()\l+ ResetUlHarqProcessStatus()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d53/classns3_1_1MmWaveHarqPhy.html",tooltip="The MmWaveHarqPhy class implements the HARQ functionalities related to PHY layer (i.e., decodification buffers for incremental redundancy managment) "];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 [label="{ns3::SimpleRefCount\l\< MmWaveHarqPhy \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node22 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_endRxDataEvent\n-m_endRxDlCtrlEvent\n-m_endTxEvent" ,arrowhead="odiamond"];
  Node22 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node23 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node24 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node24 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node25 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node21 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node26 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node26 [label="{ns3::Ptr\< ns3::NetDevice \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node27 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node27 [label="{ns3::NetDevice\n|+ isEnbTypeForDc\l|+ ~NetDevice()\l+ SetIfIndex()\l+ GetIfIndex()\l+ GetChannel()\l+ SetAddress()\l+ GetAddress()\l+ SetMtu()\l+ GetMtu()\l+ IsLinkUp()\l+ AddLinkChangeCallback()\land 15 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dac/classns3_1_1NetDevice.html",tooltip="Network layer to device interface. "];
  Node2 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node28 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_phyUlHarqFeedbackCallback" ,arrowhead="odiamond"];
  Node28 [label="{ns3::Callback\< void,\l UlHarqInfo \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node29 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node29 [label="{ns3::CallbackBase\n||+ CallbackBase()\l+ GetImpl()\l# CallbackBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1CallbackBase.html"];
  Node30 -> Node29 [color="grey25",fontsize="10",style="solid",label=" #m_impl" ,arrowhead="odiamond"];
  Node30 [label="{ns3::Ptr\< ns3::CallbackImpl\lBase \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node31 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node31 [label="{ns3::CallbackImplBase\n||+ ~CallbackImplBase()\l+ IsEqual()\l+ GetTypeid()\l# Demangle()\l# GetCppTypeid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dfa/classns3_1_1CallbackImplBase.html"];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node32 [label="{ns3::SimpleRefCount\l\< CallbackImplBase \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node21 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node33 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_firstRxDuration\n-m_firstRxStart" ,arrowhead="odiamond"];
  Node33 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node34 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_phyRxCtrlEndOkCallback" ,arrowhead="odiamond"];
  Node34 [label="{ns3::Callback\< void,\l std::list\< Ptr\< MmWaveControl\lMessage \> \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node29 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node35 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_sinrPerceived" ,arrowhead="odiamond"];
  Node35 [label="{ns3::SpectrumValue\n|- m_values\l|+ SpectrumValue()\l+ SpectrumValue()\l+ operator[]()\l+ operator[]()\l+ GetSpectrumModelUid()\l+ GetSpectrumModel()\l+ ConstBandsBegin()\l+ ConstBandsEnd()\l+ ConstValuesBegin()\l+ ConstValuesEnd()\land 14 more...\l- Add()\l- Add()\l- Subtract()\l- Subtract()\l- Multiply()\l- Multiply()\l- Divide()\l- Divide()\l- ChangeSign()\l- ShiftLeft()\land 6 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6e/classns3_1_1SpectrumValue.html",tooltip="Set of values corresponding to a given SpectrumModel. "];
  Node36 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node36 [label="{ns3::SimpleRefCount\l\< SpectrumValue \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node21 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node37 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -m_spectrumModel" ,arrowhead="odiamond"];
  Node37 [label="{ns3::Ptr\< const ns3\l::SpectrumModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node38 -> Node37 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node38 [label="{ns3::SpectrumModel\n|- m_bands\l- m_uid\l- m_uidCount\l|+ SpectrumModel()\l+ SpectrumModel()\l+ GetNumBands()\l+ GetUid()\l+ Begin()\l+ End()\l+ IsOrthogonal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/da4/classns3_1_1SpectrumModel.html"];
  Node39 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node39 [label="{ns3::SimpleRefCount\l\< SpectrumModel \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node21 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node40 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_txPsd" ,arrowhead="odiamond"];
  Node40 [label="{ns3::Ptr\< ns3::SpectrumValue \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node35 -> Node40 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node41 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_rxPacketTraceUe\n-m_rxPacketTraceEnb" ,arrowhead="odiamond"];
  Node41 [label="{ns3::TracedCallback\l\< ns3::RxPacketTraceParams \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node42 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_phyDlHarqFeedbackCallback" ,arrowhead="odiamond"];
  Node42 [label="{ns3::Callback\< void,\l DlHarqInfo \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node29 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node37 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_rxSpectrumModel" ,arrowhead="odiamond"];
  Node43 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_random" ,arrowhead="odiamond"];
  Node43 [label="{ns3::Ptr\< ns3::UniformRandom\lVariable \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node44 -> Node43 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node44 [label="{ns3::UniformRandomVariable\n||+ UniformRandomVariable()\l+ GetMin()\l+ GetMax()\l+ GetValue()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d5b/classns3_1_1UniformRandomVariable.html",tooltip="The uniform distribution Random Number Generator (RNG). "];
  Node45 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node45 [label="{ns3::RandomVariableStream\n|- m_isAntithetic\l- m_stream\l|+ RandomVariableStream()\l+ ~RandomVariableStream()\l+ SetStream()\l+ GetStream()\l+ SetAntithetic()\l+ IsAntithetic()\l+ GetValue()\l+ GetInteger()\l+ GetTypeId()\l# Peek()\l- RandomVariableStream()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/daa/classns3_1_1RandomVariableStream.html",tooltip="The basic uniform Random Number Generator (RNG). "];
  Node2 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node46 -> Node45 [color="grey25",fontsize="10",style="solid",label=" -m_rng" ,arrowhead="odiamond"];
  Node46 [label="{ns3::RngStream\n|- m_currentState\l|+ RngStream()\l+ RngStream()\l+ RandU01()\l- AdvanceNthBy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d35/classns3_1_1RngStream.html",tooltip="Combined Multiple-Recursive Generator MRG32k3a. "];
  Node47 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_phyRxDataEndOkCallback" ,arrowhead="odiamond"];
  Node47 [label="{ns3::Callback\< void,\l Ptr\< Packet \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node29 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node48 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_interferenceData" ,arrowhead="odiamond"];
  Node48 [label="{ns3::Ptr\< ns3::mmWaveInterference \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node49 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node49 [label="{ns3::mmWaveInterference\n|- m_PowerChunkProcessorList\l- m_sinrChunkProcessorList\l- m_receiving\l- m_lastSignalId\l- m_lastSignalIdBeforeReset\l|+ mmWaveInterference()\l+ ~mmWaveInterference()\l+ DoDispose()\l+ StartRx()\l+ EndRx()\l+ AddSignal()\l+ SetNoisePowerSpectralDensity()\l+ AddPowerChunkProcessor()\l+ AddSinrChunkProcessor()\l+ GetTypeId()\l- ConditionallyEvaluateChunk()\l- DoAddSignal()\l- DoSubtractSignal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df5/classns3_1_1mmWaveInterference.html"];
  Node2 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node33 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -m_lastChangeTime" ,arrowhead="odiamond"];
  Node50 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -m_noise" ,arrowhead="odiamond"];
  Node50 [label="{ns3::Ptr\< const ns3\l::SpectrumValue \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node35 -> Node50 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node40 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -m_allSignals\n-m_rxSignal" ,arrowhead="odiamond"];
  Node51 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_losTracker" ,arrowhead="odiamond"];
  Node51 [label="{ns3::Ptr\< ns3::MmWaveLos\lTracker \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node52 -> Node51 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node52 [label="{ns3::MmWaveLosTracker\n|- m_mapNlos\l- m_mapLos\l|+ MmWaveLosTracker()\l+ ~MmWaveLosTracker()\l+ UpdateLosNlosState()\l+ GetNlosSamples()\l+ GetLosSamples()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d4e/classns3_1_1MmWaveLosTracker.html"];
  Node2 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node53 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_spectrumPropagationLoss\lModel" ,arrowhead="odiamond"];
  Node53 [label="{ns3::Ptr\< ns3::SpectrumPropagation\lLossModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node54 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node54 [label="{ns3::SpectrumPropagation\lLossModel\n||+ SpectrumPropagationLossModel()\l+ ~SpectrumPropagationLoss\lModel()\l+ SetNext()\l+ CalcRxPowerSpectralDensity()\l+ GetTypeId()\l# DoDispose()\l- DoCalcRxPowerSpectralDensity()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dd7/classns3_1_1SpectrumPropagationLossModel.html",tooltip="spectrum-aware propagation loss model "];
  Node2 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node53 -> Node54 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
  Node26 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_netDevice" ,arrowhead="odiamond"];
  Node33 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_ctrlPeriod\n#m_dataPeriod" ,arrowhead="odiamond"];
  Node55 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_phySapProvider" ,arrowhead="odiamond"];
  Node55 [label="{ns3::MmWavePhySapProvider\n||+ ~MmWavePhySapProvider()\l+ SendMacPdu()\l+ SendControlMessage()\l+ SendRachPreamble()\l+ SetDlSfAllocInfo()\l+ SetUlSfAllocInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/db6/classns3_1_1MmWavePhySapProvider.html"];
  Node56 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_phyMacConfig" ,arrowhead="odiamond"];
  Node56 [label="{ns3::Ptr\< ns3::MmWavePhy\lMacCommon \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node57 -> Node56 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node57 [label="{ns3::MmWavePhyMacCommon\n|- m_symbolsPerSlot\l- m_symbolPeriod\l- m_symbolsPerSubframe\l- m_subframePeriod\l- m_ctrlSymbols\l- m_dlCtrlSymbols\l- m_ulCtrlSymbols\l- m_slotsPerSubframe\l- m_subframesPerFrame\l- m_numRefSymbols\land 18 more...\l|+ MmWavePhyMacCommon()\l+ ~MmWavePhyMacCommon()\l+ GetSymbPerSlot()\l+ GetSymbolPeriod()\l+ GetCtrlSymbols()\l+ GetDlCtrlSymbols()\l+ GetUlCtrlSymbols()\l+ GetSymbolsPerSubframe()\l+ GetSubframePeriod()\l+ GetTti()\land 52 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/df4/classns3_1_1MmWavePhyMacCommon.html"];
  Node2 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node58 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_currSfAllocInfo" ,arrowhead="odiamond"];
  Node58 [label="{ns3::SfAllocInfo\n|+ m_numSymAlloc\l+ m_ulSymStart\l+ m_dlSlotAllocInfo\l+ m_ulSlotAllocInfo\l+ m_slotAllocInfo\l|+ SfAllocInfo()\l+ SfAllocInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d3e/structns3_1_1SfAllocInfo.html"];
  Node59 -> Node58 [color="grey25",fontsize="10",style="solid",label=" +m_sfnSf" ,arrowhead="odiamond"];
  Node59 [label="{ns3::SfnSf\n|+ m_frameNum\l+ m_sfNum\l+ m_slotNum\l|+ SfnSf()\l+ SfnSf()\l+ Encode()\l+ Decode()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d81/structns3_1_1SfnSf.html"];
  Node60 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_propagationLoss" ,arrowhead="odiamond"];
  Node60 [label="{ns3::Ptr\< ns3::Propagation\lLossModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node61 -> Node60 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node61 [label="{ns3::PropagationLossModel\n||+ PropagationLossModel()\l+ ~PropagationLossModel()\l+ SetNext()\l+ GetNext()\l+ CalcRxPower()\l+ AssignStreams()\l+ GetTypeId()\l- PropagationLossModel()\l- operator=()\l- DoCalcRxPower()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/df9/classns3_1_1PropagationLossModel.html",tooltip="Models the propagation loss through a transmission medium. "];
  Node2 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node60 -> Node61 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
}
