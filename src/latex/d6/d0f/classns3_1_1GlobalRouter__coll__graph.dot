digraph "ns3::GlobalRouter"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::GlobalRouter\n|- m_LSAs\l- m_injectedRoutes\l- m_bridgesVisited\l|+ GlobalRouter()\l+ SetRoutingProtocol()\l+ GetRoutingProtocol()\l+ GetRouterId()\l+ DiscoverLSAs()\l+ GetNumLSAs()\l+ GetLSA()\l+ InjectRoute()\l+ GetNInjectedRoutes()\l+ GetInjectedRoute()\l+ RemoveInjectedRoute()\l+ WithdrawRoute()\l+ GetTypeId()\l- ~GlobalRouter()\l- ClearLSAs()\l- GetAdjacent()\l- FindInterfaceForDevice()\l- FindDesignatedRouterForLink()\l- AnotherRouterOnLink()\l- ProcessBroadcastLink()\l- ProcessSingleBroadcastLink()\l- ProcessBridgedBroadcastLink()\l- ProcessPointToPointLink()\land 9 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node5 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node6 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node2 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_routingProtocol" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Ptr\< ns3::Ipv4Global\lRouting \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node8 [label="{ns3::Ipv4GlobalRouting\n|- m_randomEcmpRouting\l- m_respondToInterfaceEvents\l- m_hostRoutes\l- m_networkRoutes\l- m_ASexternalRoutes\l|+ Ipv4GlobalRouting()\l+ ~Ipv4GlobalRouting()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\land 9 more...\l+ GetTypeId()\l# DoDispose()\l- LookupGlobal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dff/classns3_1_1Ipv4GlobalRouting.html",tooltip="Global routing protocol for IPv4 stacks. "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::Ipv4RoutingProtocol\n||+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d74/classns3_1_1Ipv4RoutingProtocol.html",tooltip="Abstract base class for IPv4 routing protocols. "];
  Node2 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_ipv4" ,arrowhead="odiamond"];
  Node10 [label="{ns3::Ptr\< ns3::Ipv4 \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node11 [label="{ns3::Ipv4\n|+ IF_ANY\l|+ Ipv4()\l+ ~Ipv4()\l+ SetRoutingProtocol()\l+ GetRoutingProtocol()\l+ AddInterface()\l+ GetNInterfaces()\l+ GetInterfaceForAddress()\l+ Send()\l+ SendWithHeader()\l+ Insert()\land 26 more...\l+ GetTypeId()\l- SetIpForward()\l- GetIpForward()\l- SetWeakEsModel()\l- GetWeakEsModel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d64/classns3_1_1Ipv4.html",tooltip="Access to the IPv4 forwarding table, interfaces, and configuration. "];
  Node2 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_rand" ,arrowhead="odiamond"];
  Node12 [label="{ns3::Ptr\< ns3::UniformRandom\lVariable \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node13 [label="{ns3::UniformRandomVariable\n||+ UniformRandomVariable()\l+ GetMin()\l+ GetMax()\l+ GetValue()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d5b/classns3_1_1UniformRandomVariable.html",tooltip="The uniform distribution Random Number Generator (RNG). "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::RandomVariableStream\n|- m_isAntithetic\l- m_stream\l|+ RandomVariableStream()\l+ ~RandomVariableStream()\l+ SetStream()\l+ GetStream()\l+ SetAntithetic()\l+ IsAntithetic()\l+ GetValue()\l+ GetInteger()\l+ GetTypeId()\l# Peek()\l- RandomVariableStream()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/daa/classns3_1_1RandomVariableStream.html",tooltip="The basic uniform Random Number Generator (RNG). "];
  Node2 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -m_rng" ,arrowhead="odiamond"];
  Node15 [label="{ns3::RngStream\n|- m_currentState\l|+ RngStream()\l+ RngStream()\l+ RandU01()\l- AdvanceNthBy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d35/classns3_1_1RngStream.html",tooltip="Combined Multiple-Recursive Generator MRG32k3a. "];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_routerId" ,arrowhead="odiamond"];
  Node16 [label="{ns3::Ipv4Address\n|- m_address\l|+ Ipv4Address()\l+ Ipv4Address()\l+ Ipv4Address()\l+ Get()\l+ Set()\l+ Set()\l+ IsEqual()\l+ Serialize()\l+ Print()\l+ IsAny()\land 8 more...\l+ Deserialize()\l+ IsMatchingType()\l+ ConvertFrom()\l+ GetZero()\l+ GetAny()\l+ GetBroadcast()\l+ GetLoopback()\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d55/classns3_1_1Ipv4Address.html",tooltip="Ipv4 addresses are stored in host order in this class. "];
}
