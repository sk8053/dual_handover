digraph "ns3::Ipv4RoutingProtocol"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::Ipv4RoutingProtocol\n||+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{Ipv4ARouting\n||+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dfd/classIpv4ARouting.html",tooltip="IPv4 dummy routing class (A) "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{Ipv4BRouting\n||+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d8e/classIpv4BRouting.html",tooltip="IPv4 dummy routing class (B) "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::aodv::RoutingProtocol\n|+ AODV_PORT\l- m_rreqRetries\l- m_ttlStart\l- m_ttlIncrement\l- m_ttlThreshold\l- m_timeoutBuffer\l- m_rreqRateLimit\l- m_rerrRateLimit\l- m_activeRouteTimeout\l- m_netDiameter\l- m_nodeTraversalTime\land 33 more...\l|+ RoutingProtocol()\l+ ~RoutingProtocol()\l+ DoDispose()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\land 14 more...\l+ GetTypeId()\l# DoInitialize()\l- Start()\l- DeferredRouteOutput()\l- Forwarding()\l- ScheduleRreqRetry()\l- UpdateRouteLifeTime()\l- UpdateRouteToNeighbor()\l- IsMyOwnAddress()\l- FindSocketWithInterfaceAddress()\l- FindSubnetBroadcastSocket\lWithInterfaceAddress()\l- ProcessHello()\land 7 more...\l- RecvAodv()\l- RecvRequest()\l- RecvReply()\l- RecvReplyAck()\l- RecvError()\l- SendPacketFromQueue()\l- SendHello()\l- SendRequest()\l- SendReply()\l- SendReplyByIntermediateNode()\l- SendReplyAck()\l- SendRerrWhenBreaksLinkTo\lNextHop()\l- SendRerrMessage()\l- SendRerrWhenNoRouteToForward()\l* RecvAodv()\l* RecvRequest()\l* RecvReply()\l* RecvReplyAck()\l* RecvError()\l* SendPacketFromQueue()\l* SendHello()\l* SendRequest()\l* SendReply()\l* SendReplyByIntermediateNode()\l* SendReplyAck()\l* SendRerrWhenBreaksLinkTo\lNextHop()\l* SendRerrMessage()\l* SendRerrWhenNoRouteToForward()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dd0/classns3_1_1aodv_1_1RoutingProtocol.html",tooltip="AODV routing protocol. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::dsdv::RoutingProtocol\n|+ DSDV_PORT\l- Holdtimes\l- m_periodicUpdateInterval\l- m_settlingTime\l- m_mainAddress\l- m_ipv4\l- m_socketAddresses\l- m_lo\l- m_routingTable\l- m_advRoutingTable\l- m_maxQueueLen\land 13 more...\l|+ RoutingProtocol()\l+ ~RoutingProtocol()\l+ DoDispose()\l+ RouteOutput()\l+ RouteInput()\l+ PrintRoutingTable()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\land 8 more...\l+ GetTypeId()\l- Start()\l- DeferredRouteOutput()\l- LookForQueuedPackets()\l- SendPacketFromQueue()\l- FindSocketWithInterfaceAddress()\l- RecvDsdv()\l- Send()\l- LoopbackRoute()\l- GetSettlingTime()\l- SendTriggeredUpdate()\l- SendPeriodicUpdate()\l- MergeTriggerPeriodicUpdates()\l- Drop()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/dca/classns3_1_1dsdv_1_1RoutingProtocol.html",tooltip="DSDV routing protocol. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::Ipv4ClickRouting\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d5a/classns3_1_1Ipv4ClickRouting.html",tooltip="Class to allow a node to use Click for external routing. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::Ipv4GlobalRouting\n|- m_randomEcmpRouting\l- m_respondToInterfaceEvents\l- m_rand\l- m_hostRoutes\l- m_networkRoutes\l- m_ASexternalRoutes\l- m_ipv4\l|+ Ipv4GlobalRouting()\l+ ~Ipv4GlobalRouting()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\land 9 more...\l+ GetTypeId()\l# DoDispose()\l- LookupGlobal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dff/classns3_1_1Ipv4GlobalRouting.html",tooltip="Global routing protocol for IPv4 stacks. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::Ipv4ListRouting\n|- m_routingProtocols\l- m_ipv4\l|+ Ipv4ListRouting()\l+ ~Ipv4ListRouting()\l+ AddRoutingProtocol()\l+ GetNRoutingProtocols()\l+ GetRoutingProtocol()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\l+ GetTypeId()\l# DoDispose()\l# DoInitialize()\l- Compare()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d8c/classns3_1_1Ipv4ListRouting.html",tooltip="IPv4 list routing. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::Ipv4NixVectorRouting\n|- m_nixCache\l- m_ipv4RouteCache\l- m_ipv4\l- m_node\l- m_totalNeighbors\l- g_isCacheDirty\l|+ Ipv4NixVectorRouting()\l+ ~Ipv4NixVectorRouting()\l+ SetNode()\l+ FlushGlobalNixRoutingCache()\l+ GetTypeId()\l- FlushNixCache()\l- FlushIpv4RouteCache()\l- ResetTotalNeighbors()\l- GetNixVector()\l- GetNixVectorInCache()\l- GetIpv4RouteInCache()\l- GetAdjacentNetDevices()\l- GetNodeByIp()\l- BuildNixVector()\l- BuildNixVectorLocal()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/db8/classns3_1_1Ipv4NixVectorRouting.html"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 [label="{ns3::Ipv4StaticRouting\n|- m_networkRoutes\l- m_multicastRoutes\l- m_ipv4\l|+ Ipv4StaticRouting()\l+ ~Ipv4StaticRouting()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\land 16 more...\l+ GetTypeId()\l# DoDispose()\l- LookupStatic()\l- LookupStatic()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d2d/classns3_1_1Ipv4StaticRouting.html",tooltip="Static routing protocol for IP version 4 stacks. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::olsr::RoutingProtocol\n|- m_interfaceExclusions\l- m_routingTableAssociation\l- m_table\l- m_hnaRoutingTable\l- m_events\l- m_packetSequenceNumber\l- m_messageSequenceNumber\l- m_ansn\l- m_helloInterval\l- m_tcInterval\land 18 more...\l|+ RoutingProtocol()\l+ ~RoutingProtocol()\l+ SetMainInterface()\l+ Dump()\l+ GetRoutingTableEntries()\l+ AssignStreams()\l+ GetInterfaceExclusions()\l+ SetInterfaceExclusions()\l+ AddHostNetworkAssociation()\l+ RemoveHostNetworkAssociation()\l+ SetRoutingTableAssociation()\l+ GetRoutingTableAssociation()\l+ GetTypeId()\l# DoInitialize()\l- Clear()\l- GetSize()\l- RemoveEntry()\l- AddEntry()\l- AddEntry()\l- Lookup()\l- FindSendEntry()\l- RouteOutput()\l- RouteInput()\l- NotifyInterfaceUp()\land 61 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dbb/classns3_1_1olsr_1_1RoutingProtocol.html",tooltip="OLSR routing protocol for IPv4. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 [label="{ns3::Rip\n|- m_routes\l- m_ipv4\l- m_startupDelay\l- m_minTriggeredUpdateDelay\l- m_maxTriggeredUpdateDelay\l- m_unsolicitedUpdate\l- m_timeoutDelay\l- m_garbageCollectionDelay\l- m_sendSocketList\l- m_recvSocket\land 8 more...\l|+ Rip()\l+ ~Rip()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ SetIpv4()\l+ PrintRoutingTable()\land 6 more...\l+ GetTypeId()\l# DoDispose()\l# DoInitialize()\l- Receive()\l- HandleRequests()\l- HandleResponses()\l- Lookup()\l- RecvUnicastRip()\l- RecvMulticastRip()\l- AddNetworkRouteTo()\l- AddNetworkRouteTo()\l- DoSendRouteUpdate()\l- SendRouteRequest()\l- SendTriggeredRouteUpdate()\l- SendUnsolicitedRouteUpdate()\l- InvalidateRoute()\l- DeleteRoute()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d2b/classns3_1_1Rip.html",tooltip="RIP Routing Protocol, defined in {2453}. "];
}
