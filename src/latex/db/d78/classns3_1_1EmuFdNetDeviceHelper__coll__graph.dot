digraph "ns3::EmuFdNetDeviceHelper"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::EmuFdNetDeviceHelper\n|# m_deviceName\l|+ EmuFdNetDeviceHelper()\l+ ~EmuFdNetDeviceHelper()\l+ GetDeviceName()\l+ SetDeviceName()\l# InstallPriv()\l# SetFileDescriptor()\l# CreateFileDescriptor()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::FdNetDeviceHelper\n||+ FdNetDeviceHelper()\l+ ~FdNetDeviceHelper()\l+ SetAttribute()\l+ Install()\l+ Install()\l+ Install()\l# InstallPriv()\l- EnablePcapInternal()\l- EnableAsciiInternal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/def/classns3_1_1FdNetDeviceHelper.html",tooltip="build a set of FdNetDevice objects Normally we eschew multiple inheritance, however, the classes PcapUserHelperForDevice and AsciiTraceUserHelperForDevice are treated as \"mixins\". A mixin is a self-contained class that encapsulates a general attribute or a set of functionality that may be of interest to many other classes. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::PcapHelperForDevice\n||+ PcapHelperForDevice()\l+ ~PcapHelperForDevice()\l+ EnablePcapInternal()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcapAll()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d03/classns3_1_1PcapHelperForDevice.html",tooltip="Base class providing common user-level pcap operations for helpers representing net devices..."];
  Node4 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::AsciiTraceHelperFor\lDevice\n||+ AsciiTraceHelperForDevice()\l+ ~AsciiTraceHelperForDevice()\l+ EnableAsciiInternal()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAsciiAll()\l+ EnableAsciiAll()\l+ EnableAscii()\l+ EnableAscii()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/daf/classns3_1_1AsciiTraceHelperForDevice.html",tooltip="Base class providing common user-level ascii trace operations for helpers representing net devices..."];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_deviceFactory" ,arrowhead="odiamond"];
  Node5 [label="{ns3::ObjectFactory\n||+ ObjectFactory()\l+ ObjectFactory()\l+ Set()\l+ GetTypeId()\l+ Create()\l+ Create()\l+ SetTypeId()\l+ SetTypeId()\l+ SetTypeId()\l* SetTypeId()\l* SetTypeId()\l* SetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d0d/classns3_1_1ObjectFactory.html",tooltip="Instantiate subclasses of ns3::Object. "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node6 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node7 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_parameters" ,arrowhead="odiamond"];
  Node7 [label="{ns3::AttributeConstructionList\n|- m_list\l|+ AttributeConstructionList()\l+ Add()\l+ Find()\l+ Begin()\l+ End()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df3/classns3_1_1AttributeConstructionList.html"];
}
