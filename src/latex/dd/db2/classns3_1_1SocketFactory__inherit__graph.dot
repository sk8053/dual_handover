digraph "ns3::SocketFactory"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::SocketFactory\n||+ SocketFactory()\l+ CreateSocket()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::Ipv4RawSocketFactory\n||+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d78/classns3_1_1Ipv4RawSocketFactory.html",tooltip="API to create RAW socket instances. "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::Ipv4RawSocketFactoryImpl\n||+ CreateSocket()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d6e/classns3_1_1Ipv4RawSocketFactoryImpl.html",tooltip="Implementation of IPv4 raw socket factory. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::Ipv6RawSocketFactory\n||+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dae/classns3_1_1Ipv6RawSocketFactory.html",tooltip="API to create IPv6 RAW socket instances. "];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::Ipv6RawSocketFactoryImpl\n||+ CreateSocket()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/dc4/classns3_1_1Ipv6RawSocketFactoryImpl.html",tooltip="Implementation of IPv6 raw socket factory. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::PacketSocketFactory\n||+ PacketSocketFactory()\l+ CreateSocket()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d4d/classns3_1_1PacketSocketFactory.html"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::TcpSocketFactory\n||+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5a/classns3_1_1TcpSocketFactory.html",tooltip="API to create TCP socket instances. "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::NscTcpSocketFactoryImpl\n|- m_tcp\l|+ NscTcpSocketFactoryImpl()\l+ ~NscTcpSocketFactoryImpl()\l+ SetTcp()\l+ CreateSocket()\l# DoDispose()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/dfc/classns3_1_1NscTcpSocketFactoryImpl.html",tooltip="socket factory implementation for creating instances of NSC TCP "];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::TcpSocketFactoryImpl\n|- m_tcp\l|+ TcpSocketFactoryImpl()\l+ ~TcpSocketFactoryImpl()\l+ SetTcp()\l+ CreateSocket()\l# DoDispose()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d71/classns3_1_1TcpSocketFactoryImpl.html",tooltip="socket factory implementation for native ns-3 TCP "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 [label="{ns3::UdpSocketFactory\n||+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d5a/classns3_1_1UdpSocketFactory.html",tooltip="API to create UDP socket instances. "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::UdpSocketFactoryImpl\n|- m_udp\l|+ UdpSocketFactoryImpl()\l+ ~UdpSocketFactoryImpl()\l+ SetUdp()\l+ CreateSocket()\l# DoDispose()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/def/classns3_1_1UdpSocketFactoryImpl.html",tooltip="Object to create UDP socket instances. "];
}
