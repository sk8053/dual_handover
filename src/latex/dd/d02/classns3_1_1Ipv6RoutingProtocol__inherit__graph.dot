digraph "ns3::Ipv6RoutingProtocol"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::Ipv6RoutingProtocol\n||+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ NotifyAddRoute()\l+ NotifyRemoveRoute()\l+ SetIpv6()\l+ PrintRoutingTable()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{Ipv6ARouting\n||+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ NotifyAddRoute()\l+ NotifyRemoveRoute()\l+ SetIpv6()\l+ PrintRoutingTable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/def/classIpv6ARouting.html",tooltip="IPv6 dummy routing class (A) "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{Ipv6BRouting\n||+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ NotifyAddRoute()\l+ NotifyRemoveRoute()\l+ SetIpv6()\l+ PrintRoutingTable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d3a/classIpv6BRouting.html",tooltip="IPv6 dummy routing class (B) "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::Ipv6ListRouting\n|- m_routingProtocols\l- m_ipv6\l|+ Ipv6ListRouting()\l+ ~Ipv6ListRouting()\l+ AddRoutingProtocol()\l+ GetNRoutingProtocols()\l+ GetRoutingProtocol()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ NotifyAddRoute()\l+ NotifyRemoveRoute()\l+ SetIpv6()\l+ PrintRoutingTable()\l+ GetTypeId()\l# DoDispose()\l- Compare()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dc7/classns3_1_1Ipv6ListRouting.html",tooltip="Hold list of Ipv6RoutingProtocol objects. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::Ipv6StaticRouting\n|- m_networkRoutes\l- m_multicastRoutes\l- m_ipv6\l|+ Ipv6StaticRouting()\l+ ~Ipv6StaticRouting()\l+ AddHostRouteTo()\l+ AddHostRouteTo()\l+ AddNetworkRouteTo()\l+ AddNetworkRouteTo()\l+ AddNetworkRouteTo()\l+ SetDefaultRoute()\l+ GetNRoutes()\l+ GetDefaultRoute()\land 21 more...\l+ GetTypeId()\l# DoDispose()\l- LookupStatic()\l- LookupStatic()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/df9/classns3_1_1Ipv6StaticRouting.html",tooltip="Static routing protocol for IP version 6 stacks. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::RipNg\n|- m_routes\l- m_ipv6\l- m_startupDelay\l- m_minTriggeredUpdateDelay\l- m_maxTriggeredUpdateDelay\l- m_unsolicitedUpdate\l- m_timeoutDelay\l- m_garbageCollectionDelay\l- m_sendSocketList\l- m_recvSocket\land 8 more...\l|+ RipNg()\l+ ~RipNg()\l+ RouteOutput()\l+ RouteInput()\l+ NotifyInterfaceUp()\l+ NotifyInterfaceDown()\l+ NotifyAddAddress()\l+ NotifyRemoveAddress()\l+ NotifyAddRoute()\l+ NotifyRemoveRoute()\land 8 more...\l+ GetTypeId()\l# DoDispose()\l# DoInitialize()\l- Receive()\l- HandleRequests()\l- HandleResponses()\l- Lookup()\l- RecvUnicastRipng()\l- RecvMulticastRipng()\l- AddNetworkRouteTo()\l- AddNetworkRouteTo()\l- DoSendRouteUpdate()\l- SendRouteRequest()\l- SendTriggeredRouteUpdate()\l- SendUnsolicitedRouteUpdate()\l- InvalidateRoute()\l- DeleteRoute()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d75/classns3_1_1RipNg.html",tooltip="RIPng Routing Protocol, defined in {2080}. "];
}
