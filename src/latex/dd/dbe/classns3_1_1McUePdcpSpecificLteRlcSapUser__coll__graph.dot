digraph "ns3::McUePdcpSpecificLteRlcSapUser"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::McUePdcpSpecificLte\lRlcSapUser\n||+ McUePdcpSpecificLteRlcSapUser()\l+ ReceivePdcpPdu()\l+ SendLteAssi()\l+ McUePdcpSpecificLteRlcSapUser()\l+ ReceivePdcpPdu()\l- McUePdcpSpecificLteRlcSapUser()\l- McUePdcpSpecificLteRlcSapUser()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::LteRlcSapUser\n||+ ~LteRlcSapUser()\l+ SendLteAssi()\l+ ReceivePdcpPdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d10/classns3_1_1LteRlcSapUser.html"];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +info" ,arrowhead="odiamond"];
  Node3 [label="{ns3::EpcX2Sap::Assistant\lInformationForSplitting\n|+ targetCellId\l+ drbId\l+ sourceCellId\l+ rnti\l+ Re_TX_Q_Size\l+ Tx_On_Q_Size\l+ Txed_Q_Size\l+ Re_Tx_Q_Delay\l+ Tx_On_Q_Delay\l+ Txed_Q_Delay\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d2f/structns3_1_1EpcX2Sap_1_1AssistantInformationForSplitting.html"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_pdcp" ,arrowhead="odiamond"];
  Node4 [label="{ns3::McUePdcp\n|+ MAX_PDCP_SN\l# m_rnti\l# m_lcid\l# m_mmWaveRnti\l- m_txSequenceNumber\l- m_rxSequenceNumber\l- m_useMmWaveConnection\l- m_alwaysLteUplink\l- Last_Submitted_PDCP\l_RX_SN\l- temp\l- receivedPDCP_SN\l- Reordering_PDCP_RX\l_COUNT\l- Next_PDCP_RX_SN\l- PdcpBuffer\land 20 more...\l- m_maxPdcpSn\l- reorderingWindow\l|+ McUePdcp()\l+ ~McUePdcp()\l+ DoDispose()\l+ SetMmWaveRnti()\l+ SetRnti()\l+ BufferingAndReordering()\l+ printData()\l+ t_ReordringTimer_Expired()\l+ SetLcId()\l+ SetLtePdcpSapUser()\land 32 more...\l+ GetTypeId()\l+ GetTypeId()\l# DoTransmitPdcpSdu()\l# DoTransmitPdcpControlPacket()\l# sendControlMessage()\l# DoReceivePdu()\l# DoTransmitPdcpSdu()\l# DoTransmitPdcpControlPacket()\l# sendControlMessage()\l# DoReceivePdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d69/classns3_1_1McUePdcp.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::LtePdcp\n|+ MAX_PDCP_SN\l# m_rnti\l# m_lcid\l- m_txSequenceNumber\l- m_rxSequenceNumber\l- m_maxPdcpSn\l|+ LtePdcp()\l+ ~LtePdcp()\l+ DoDispose()\l+ SetRnti()\l+ SetLcId()\l+ SetLtePdcpSapUser()\l+ GetLtePdcpSapProvider()\l+ SetLteRlcSapProvider()\l+ DoReceiveLteAssistantInfo()\l+ GetLteRlcSapUser()\l+ GetStatus()\l+ SetStatus()\l+ GetTypeId()\l# DoTransmitPdcpSdu()\l# DoReceivePdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d88/classns3_1_1LtePdcp.html"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node9 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node9 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node10 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node10 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node6 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node11 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_rlcSapProvider" ,arrowhead="odiamond"];
  Node11 [label="{ns3::LteRlcSapProvider\n||+ ~LteRlcSapProvider()\l+ TransmitPdcpPdu()\l+ RequestAssistantInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/da8/classns3_1_1LteRlcSapProvider.html"];
  Node12 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_rxPdu" ,arrowhead="odiamond"];
  Node12 [label="{ns3::TracedCallback\l\< uint16_t, uint8_t,\l uint32_t, uint64_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node2 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_rlcSapUser" ,arrowhead="odiamond"];
  Node13 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_pdcpSapProvider" ,arrowhead="odiamond"];
  Node13 [label="{ns3::LtePdcpSapProvider\n||+ ~LtePdcpSapProvider()\l+ TransmitPdcpSdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/de3/classns3_1_1LtePdcpSapProvider.html"];
  Node14 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_txPdu" ,arrowhead="odiamond"];
  Node14 [label="{ns3::TracedCallback\l\< uint16_t, uint8_t,\l uint32_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node15 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_pdcpSapUser" ,arrowhead="odiamond"];
  Node15 [label="{ns3::LtePdcpSapUser\n||+ ~LtePdcpSapUser()\l+ ReceivePdcpSdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d1c/classns3_1_1LtePdcpSapUser.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_rlcSapProvider\n#m_mmWaveRlcSapProvider\n#m_mmWaveRlcSapProvider_2" ,arrowhead="odiamond"];
  Node16 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #t_ReorderingTimer" ,arrowhead="odiamond"];
  Node16 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node17 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node18 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node19 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node21 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -tempTime\n-previousTime\n-expiredTime" ,arrowhead="odiamond"];
  Node21 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node12 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_rxPdu" ,arrowhead="odiamond"];
  Node2 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_rlcSapUser" ,arrowhead="odiamond"];
  Node13 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_pdcpSapProvider" ,arrowhead="odiamond"];
  Node14 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_txPdu" ,arrowhead="odiamond"];
  Node15 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_pdcpSapUser" ,arrowhead="odiamond"];
}
