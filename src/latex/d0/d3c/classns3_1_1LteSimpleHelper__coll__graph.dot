digraph "ns3::LteSimpleHelper"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::LteSimpleHelper\n|- m_lteRlcEntityType\l|+ LteSimpleHelper()\l+ ~LteSimpleHelper()\l+ DoDispose()\l+ InstallEnbDevice()\l+ InstallUeDevice()\l+ EnableLogComponents()\l+ EnableTraces()\l+ EnableRlcTraces()\l+ EnableDlRlcTraces()\l+ EnableUlRlcTraces()\l+ EnablePdcpTraces()\l+ EnableDlPdcpTraces()\l+ EnableUlPdcpTraces()\l+ GetTypeId()\l# DoInitialize()\l- InstallSingleEnbDevice()\l- InstallSingleUeDevice()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node5 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node6 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node2 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_enbPdcp\n-m_uePdcp" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Ptr\< ns3::LtePdcp \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node8 [label="{ns3::LtePdcp\n|+ MAX_PDCP_SN\l# m_rnti\l# m_lcid\l- m_txSequenceNumber\l- m_rxSequenceNumber\l- m_maxPdcpSn\l|+ LtePdcp()\l+ ~LtePdcp()\l+ DoDispose()\l+ SetRnti()\l+ SetLcId()\l+ SetLtePdcpSapUser()\l+ GetLtePdcpSapProvider()\l+ SetLteRlcSapProvider()\l+ DoReceiveLteAssistantInfo()\l+ GetLteRlcSapUser()\l+ GetStatus()\l+ SetStatus()\l+ GetTypeId()\l# DoTransmitPdcpSdu()\l# DoReceivePdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d88/classns3_1_1LtePdcp.html"];
  Node2 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" #m_rlcSapProvider" ,arrowhead="odiamond"];
  Node9 [label="{ns3::LteRlcSapProvider\n||+ ~LteRlcSapProvider()\l+ TransmitPdcpPdu()\l+ RequestAssistantInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/da8/classns3_1_1LteRlcSapProvider.html"];
  Node10 -> Node8 [color="grey25",fontsize="10",style="solid",label=" #m_rxPdu" ,arrowhead="odiamond"];
  Node10 [label="{ns3::TracedCallback\l\< uint16_t, uint8_t,\l uint32_t, uint64_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node11 -> Node8 [color="grey25",fontsize="10",style="solid",label=" #m_rlcSapUser" ,arrowhead="odiamond"];
  Node11 [label="{ns3::LteRlcSapUser\n||+ ~LteRlcSapUser()\l+ SendLteAssi()\l+ ReceivePdcpPdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d10/classns3_1_1LteRlcSapUser.html"];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +info" ,arrowhead="odiamond"];
  Node12 [label="{ns3::EpcX2Sap::Assistant\lInformationForSplitting\n|+ targetCellId\l+ drbId\l+ sourceCellId\l+ rnti\l+ Re_TX_Q_Size\l+ Tx_On_Q_Size\l+ Txed_Q_Size\l+ Re_Tx_Q_Delay\l+ Tx_On_Q_Delay\l+ Txed_Q_Delay\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d2f/structns3_1_1EpcX2Sap_1_1AssistantInformationForSplitting.html"];
  Node13 -> Node8 [color="grey25",fontsize="10",style="solid",label=" #m_pdcpSapProvider" ,arrowhead="odiamond"];
  Node13 [label="{ns3::LtePdcpSapProvider\n||+ ~LtePdcpSapProvider()\l+ TransmitPdcpSdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/de3/classns3_1_1LtePdcpSapProvider.html"];
  Node14 -> Node8 [color="grey25",fontsize="10",style="solid",label=" #m_txPdu" ,arrowhead="odiamond"];
  Node14 [label="{ns3::TracedCallback\l\< uint16_t, uint8_t,\l uint32_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node15 -> Node8 [color="grey25",fontsize="10",style="solid",label=" #m_pdcpSapUser" ,arrowhead="odiamond"];
  Node15 [label="{ns3::LtePdcpSapUser\n||+ ~LtePdcpSapUser()\l+ ReceivePdcpSdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d1c/classns3_1_1LtePdcpSapUser.html"];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_enbMac\n+m_ueMac" ,arrowhead="odiamond"];
  Node16 [label="{ns3::Ptr\< ns3::LteTestMac \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node17 [label="{ns3::LteTestMac\n|- m_receivedData\l- m_rlcHeaderType\l- m_pdcpHeaderPresent\l- m_txOpportunityMode\l- m_txOppSize\l- m_nextTxOppList\l- m_txPdus\l- m_txBytes\l- m_rxPdus\l- m_rxBytes\l|+ LteTestMac()\l+ ~LteTestMac()\l+ DoDispose()\l+ SetDevice()\l+ SendTxOpportunity()\l+ GetDataReceived()\l+ Receive()\l+ SetLteMacSapUser()\l+ GetLteMacSapProvider()\l+ SetLteMacLoopback()\land 9 more...\l+ GetTypeId()\l- DoTransmitPdu()\l- DoReportBufferStatus()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/df9/classns3_1_1LteTestMac.html"];
  Node2 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_nextTxOpp" ,arrowhead="odiamond"];
  Node18 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node19 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node20 -> Node19 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node20 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node16 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_macLoopback" ,arrowhead="odiamond"];
  Node23 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node23 [label="{ns3::Ptr\< ns3::NetDevice \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node24 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node24 [label="{ns3::NetDevice\n|+ isEnbTypeForDc\l|+ ~NetDevice()\l+ SetIfIndex()\l+ GetIfIndex()\l+ GetChannel()\l+ SetAddress()\l+ GetAddress()\l+ SetMtu()\l+ GetMtu()\l+ IsLinkUp()\l+ AddLinkChangeCallback()\land 15 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dac/classns3_1_1NetDevice.html",tooltip="Network layer to device interface. "];
  Node2 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node25 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_txOppTime" ,arrowhead="odiamond"];
  Node25 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node26 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_macSapUser" ,arrowhead="odiamond"];
  Node26 [label="{ns3::LteMacSapUser\n||+ ~LteMacSapUser()\l+ NotifyTxOpportunity()\l+ NotifyHarqDeliveryFailure()\l+ NotifyDlHarqDeliveryFailure()\l+ NotifyUlHarqDeliveryFailure()\l+ ReceivePdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d25/classns3_1_1LteMacSapUser.html"];
  Node27 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_macSapProvider" ,arrowhead="odiamond"];
  Node27 [label="{ns3::LteMacSapProvider\n||+ ~LteMacSapProvider()\l+ TransmitPdu()\l+ ReportBufferStatus()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d1a/classns3_1_1LteMacSapProvider.html"];
  Node28 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_enbDeviceFactory\n-m_ueDeviceFactory" ,arrowhead="odiamond"];
  Node28 [label="{ns3::ObjectFactory\n||+ ObjectFactory()\l+ ObjectFactory()\l+ Set()\l+ GetTypeId()\l+ Create()\l+ Create()\l+ SetTypeId()\l+ SetTypeId()\l+ SetTypeId()\l* SetTypeId()\l* SetTypeId()\l* SetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d0d/classns3_1_1ObjectFactory.html",tooltip="Instantiate subclasses of ns3::Object. "];
  Node5 -> Node28 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node29 -> Node28 [color="grey25",fontsize="10",style="solid",label=" -m_parameters" ,arrowhead="odiamond"];
  Node29 [label="{ns3::AttributeConstructionList\n|- m_list\l|+ AttributeConstructionList()\l+ Add()\l+ Find()\l+ Begin()\l+ End()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df3/classns3_1_1AttributeConstructionList.html"];
  Node30 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_ueRlc\n-m_enbRlc" ,arrowhead="odiamond"];
  Node30 [label="{ns3::Ptr\< ns3::LteRlc \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node31 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node31 [label="{ns3::LteRlc\n|# m_rnti\l# m_lcid\l# m_drbId\l# measuringQusizeQueueDelay\lStream\l# isMc\l|+ LteRlc()\l+ ~LteRlc()\l+ DoDispose()\l+ SetRnti()\l+ SetDrbId()\l+ SetStreamForQueueStatistics()\l+ SetLcId()\l+ SetLteRlcSapUser()\l+ SetLteRlcAssistantSapUser()\l+ GetLteRlcSapProvider()\land 6 more...\l+ GetTypeId()\l# DoTransmitPdcpPdu()\l# DoNotifyTxOpportunity()\l# DoNotifyHarqDeliveryFailure()\l# DoNotifyHarqDeliveryFailure()\l# DoReceivePdu()\l# DoSendMcPdcpSdu()\l# DoRequestAssistantInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d7c/classns3_1_1LteRlc.html"];
  Node2 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_rlcSapProvider" ,arrowhead="odiamond"];
  Node32 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_epcX2RlcUser" ,arrowhead="odiamond"];
  Node32 [label="{ns3::EpcX2RlcUser\n||+ ~EpcX2RlcUser()\l+ SendMcPdcpSdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d48/classns3_1_1EpcX2RlcUser.html"];
  Node33 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node33 [label="{ns3::EpcX2Sap\n|+ m_maxPdcpSn\l|+ ~EpcX2Sap()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dc9/classns3_1_1EpcX2Sap.html",tooltip="Common structures for EpcX2SapProvider and EpcX2SapUser. "];
  Node34 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_ueDataParams" ,arrowhead="odiamond"];
  Node34 [label="{ns3::EpcX2Sap::UeDataParams\n|+ sourceCellId\l+ targetCellId\l+ gtpTeid\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dea/structns3_1_1EpcX2Sap_1_1UeDataParams.html",tooltip="Parameters of the UE DATA primitive. "];
  Node35 -> Node34 [color="grey25",fontsize="10",style="solid",label=" +ueData" ,arrowhead="odiamond"];
  Node35 [label="{ns3::Ptr\< ns3::Packet \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node36 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node36 [label="{ns3::Packet\n|- m_globalUid\l|+ Packet()\l+ Packet()\l+ operator=()\l+ Packet()\l+ Packet()\l+ Packet()\l+ CreateFragment()\l+ GetSize()\l+ AddHeader()\l+ RemoveHeader()\land 31 more...\l+ EnablePrinting()\l+ EnableChecking()\l- Packet()\l- Deserialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d7a/classns3_1_1Packet.html",tooltip="network packets "];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node37 [label="{ns3::SimpleRefCount\l\< Packet \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node22 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node38 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -m_nixVector" ,arrowhead="odiamond"];
  Node38 [label="{ns3::Ptr\< ns3::NixVector \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node39 -> Node38 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node39 [label="{ns3::NixVector\n|- m_nixVector\l- m_used\l- m_currentVectorBitSize\l- m_totalBitSize\l|+ NixVector()\l+ ~NixVector()\l+ Copy()\l+ NixVector()\l+ operator=()\l+ AddNeighborIndex()\l+ ExtractNeighborIndex()\l+ GetRemainingBits()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ BitCount()\l- DumpNixVector()\l- PrintDec2BinNixFill()\l- PrintDec2BinNix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d44/classns3_1_1NixVector.html",tooltip="Neighbor-index data structure for nix-vector routing. "];
  Node40 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node40 [label="{ns3::SimpleRefCount\l\< NixVector \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node22 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node41 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -m_metadata" ,arrowhead="odiamond"];
  Node41 [label="{ns3::PacketMetadata\n|- m_head\l- m_tail\l- m_used\l- m_packetUid\l- m_enable\l- m_enableChecking\l- m_metadataSkipped\l- m_maxSize\l- m_chunkUid\l|+ PacketMetadata()\l+ PacketMetadata()\l+ operator=()\l+ ~PacketMetadata()\l+ AddHeader()\l+ RemoveHeader()\l+ AddTrailer()\l+ RemoveTrailer()\l+ CreateFragment()\l+ AddAtEnd()\land 8 more...\l+ Enable()\l+ EnableChecking()\l- DataFreeList::~DataFreeList()\l- PacketMetadata()\l- AddSmall()\l- AddBig()\l- ReplaceTail()\l- UpdateHead()\l- UpdateTail()\l- GetUleb128Size()\l- ReadUleb128()\l- Append16()\land 11 more...\l- AddToRawU8()\l- AddToRawU16()\l- AddToRawU32()\l- AddToRawU64()\l- AddToRaw()\l- ReadFromRawU8()\l- ReadFromRawU16()\l- ReadFromRawU32()\l- ReadFromRawU64()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/db1/classns3_1_1PacketMetadata.html",tooltip="Handle packet metadata about packet headers and trailers. "];
  Node42 -> Node41 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node42 [label="{ns3::PacketMetadata\l::Data\n|+ m_count\l+ m_size\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d9c/structns3_1_1PacketMetadata_1_1Data.html"];
  Node43 -> Node41 [color="grey25",fontsize="10",style="solid",label=" -m_freeList" ,arrowhead="odiamond"];
  Node43 [label="{ns3::PacketMetadata\l::DataFreeList\n||+ ~DataFreeList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/df8/classns3_1_1PacketMetadata_1_1DataFreeList.html",tooltip="Class to hold all the metadata. "];
  Node44 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node44 [label="{std::vector\< struct\l Data * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node45 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -m_byteTagList" ,arrowhead="odiamond"];
  Node45 [label="{ns3::ByteTagList\n|- m_minStart\l- m_maxEnd\l- m_adjustment\l- m_used\l|+ ByteTagList()\l+ ByteTagList()\l+ operator=()\l+ ~ByteTagList()\l+ Add()\l+ Add()\l+ RemoveAll()\l+ Begin()\l+ Adjust()\l+ AddAtEnd()\l+ AddAtStart()\l- BeginAll()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d64/classns3_1_1ByteTagList.html",tooltip="keep track of the byte tags stored in a packet. "];
  Node46 -> Node45 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node46 [label="{ns3::ByteTagListData\n|+ size\l+ count\l+ dirty\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d62/structns3_1_1ByteTagListData.html",tooltip="Internal representation of the byte tags stored in a packet. "];
  Node47 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -m_packetTagList" ,arrowhead="odiamond"];
  Node47 [label="{ns3::PacketTagList\n||+ PacketTagList()\l+ PacketTagList()\l+ operator=()\l+ ~PacketTagList()\l+ Add()\l+ Remove()\l+ Replace()\l+ Peek()\l+ RemoveAll()\l+ Head()\l- COWTraverse()\l- RemoveWriter()\l- ReplaceWriter()\l- CreateTagData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d19/classns3_1_1PacketTagList.html",tooltip="List of the packet tags stored in a packet. "];
  Node48 -> Node47 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
  Node48 [label="{ns3::PacketTagList\l::TagData\n|+ count\l+ size\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d03/structns3_1_1PacketTagList_1_1TagData.html"];
  Node48 -> Node48 [color="grey25",fontsize="10",style="solid",label=" +next" ,arrowhead="odiamond"];
  Node5 -> Node48 [color="grey25",fontsize="10",style="solid",label=" +tid" ,arrowhead="odiamond"];
  Node49 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -m_buffer" ,arrowhead="odiamond"];
  Node49 [label="{ns3::Buffer\n|- m_maxZeroAreaStart\l- m_zeroAreaStart\l- m_zeroAreaEnd\l- m_start\l- m_end\l- g_recommendedStart\l- g_maxSize\l- g_freeList\l|+ GetSize()\l+ PeekData()\l+ AddAtStart()\l+ AddAtEnd()\l+ AddAtEnd()\l+ RemoveAtStart()\l+ RemoveAtEnd()\l+ CreateFragment()\l+ Begin()\l+ End()\land 11 more...\l- CreateFullCopy()\l- TransformIntoRealBuffer()\l- CheckInternalState()\l- Initialize()\l- GetInternalSize()\l- GetInternalEnd()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d85/classns3_1_1Buffer.html",tooltip="automatically resized byte buffer "];
  Node50 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node50 [label="{ns3::Buffer::Data\n|+ m_count\l+ m_size\l+ m_dirtyStart\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dcc/structns3_1_1Buffer_1_1Data.html"];
  Node51 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -g_localStaticDestructor" ,arrowhead="odiamond"];
  Node51 [label="{ns3::Buffer::LocalStatic\lDestructor\n||+ ~LocalStaticDestructor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/de5/structns3_1_1Buffer_1_1LocalStaticDestructor.html",tooltip="Local static destructor structure. "];
  Node10 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_rxPdu" ,arrowhead="odiamond"];
  Node11 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_rlc_Assistant_User\n#m_rlcSapUser" ,arrowhead="odiamond"];
  Node26 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_macSapUser" ,arrowhead="odiamond"];
  Node52 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_txCompletedCallback" ,arrowhead="odiamond"];
  Node52 [label="{ns3::TracedCallback\l\< uint16_t, uint8_t,\l uint32_t, uint32_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node14 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_txPdu" ,arrowhead="odiamond"];
  Node53 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_epcX2RlcProvider" ,arrowhead="odiamond"];
  Node53 [label="{ns3::EpcX2RlcProvider\n||+ ~EpcX2RlcProvider()\l+ ReceiveMcPdcpSdu()\l+ ReceiveAssistantInformation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d20/classns3_1_1EpcX2RlcProvider.html"];
  Node33 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node27 -> Node31 [color="grey25",fontsize="10",style="solid",label=" #m_macSapProvider" ,arrowhead="odiamond"];
  Node54 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_ueRrc\n+m_enbRrc" ,arrowhead="odiamond"];
  Node54 [label="{ns3::Ptr\< ns3::LteTestRrc \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node55 -> Node54 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node55 [label="{ns3::LteTestRrc\n|- m_receivedData\l- m_txPdus\l- m_txBytes\l- m_rxPdus\l- m_rxBytes\l- m_pduSize\l|+ LteTestRrc()\l+ ~LteTestRrc()\l+ DoDispose()\l+ SetLtePdcpSapProvider()\l+ GetLtePdcpSapUser()\l+ Start()\l+ Stop()\l+ SendData()\l+ GetDataReceived()\l+ GetTxPdus()\land 8 more...\l+ GetTypeId()\l- DoReceivePdcpSdu()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/db2/classns3_1_1LteTestRrc.html"];
  Node2 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 -> Node55 [color="grey25",fontsize="10",style="solid",label=" -m_nextPdu" ,arrowhead="odiamond"];
  Node23 -> Node55 [color="grey25",fontsize="10",style="solid",label=" -m_device" ,arrowhead="odiamond"];
  Node25 -> Node55 [color="grey25",fontsize="10",style="solid",label=" -m_arrivalTime\n-m_rxLastTime\n-m_txLastTime" ,arrowhead="odiamond"];
  Node13 -> Node55 [color="grey25",fontsize="10",style="solid",label=" -m_pdcpSapProvider" ,arrowhead="odiamond"];
  Node15 -> Node55 [color="grey25",fontsize="10",style="solid",label=" -m_pdcpSapUser" ,arrowhead="odiamond"];
  Node56 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_phyChannel" ,arrowhead="odiamond"];
  Node56 [label="{ns3::Ptr\< ns3::SimpleChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node57 -> Node56 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node57 [label="{ns3::SimpleChannel\n|- m_devices\l- m_blackListedDevices\l|+ SimpleChannel()\l+ Send()\l+ Add()\l+ BlackList()\l+ UnBlackList()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/db9/classns3_1_1SimpleChannel.html",tooltip="A simple channel, for simple things and testing. "];
  Node58 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node58 [label="{ns3::Channel\n|- m_id\l|+ Channel()\l+ ~Channel()\l+ GetId()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d67/classns3_1_1Channel.html",tooltip="Abstract Channel Base Class. "];
  Node2 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node25 -> Node57 [color="grey25",fontsize="10",style="solid",label=" -m_delay" ,arrowhead="odiamond"];
}
