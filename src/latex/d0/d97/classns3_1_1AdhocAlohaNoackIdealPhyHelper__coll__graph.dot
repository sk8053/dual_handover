digraph "ns3::AdhocAlohaNoackIdealPhyHelper"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::AdhocAlohaNoackIdeal\lPhyHelper\n||+ AdhocAlohaNoackIdealPhyHelper()\l+ ~AdhocAlohaNoackIdealPhy\lHelper()\l+ SetChannel()\l+ SetChannel()\l+ SetTxPowerSpectralDensity()\l+ SetNoisePowerSpectralDensity()\l+ SetPhyAttribute()\l+ SetDeviceAttribute()\l+ SetAntenna()\l+ Install()\l+ Install()\l+ Install()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_channel" ,arrowhead="odiamond"];
  Node2 [label="{ns3::Ptr\< ns3::SpectrumChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node3 [label="{ns3::SpectrumChannel\n||+ ~SpectrumChannel()\l+ AddPropagationLossModel()\l+ AddSpectrumPropagationLoss\lModel()\l+ SetPropagationDelayModel()\l+ StartTx()\l+ AddRx()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d59/classns3_1_1SpectrumChannel.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::Channel\n|- m_id\l|+ Channel()\l+ ~Channel()\l+ GetId()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d67/classns3_1_1Channel.html",tooltip="Abstract Channel Base Class. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node8 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node8 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node9 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node9 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node5 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_antenna\n#m_phy\n#m_device\n#m_queue" ,arrowhead="odiamond"];
  Node10 [label="{ns3::ObjectFactory\n||+ ObjectFactory()\l+ ObjectFactory()\l+ Set()\l+ GetTypeId()\l+ Create()\l+ Create()\l+ SetTypeId()\l+ SetTypeId()\l+ SetTypeId()\l* SetTypeId()\l* SetTypeId()\l* SetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d0d/classns3_1_1ObjectFactory.html",tooltip="Instantiate subclasses of ns3::Object. "];
  Node8 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -m_parameters" ,arrowhead="odiamond"];
  Node11 [label="{ns3::AttributeConstructionList\n|- m_list\l|+ AttributeConstructionList()\l+ Add()\l+ Find()\l+ Begin()\l+ End()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df3/classns3_1_1AttributeConstructionList.html"];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_txPsd\n#m_noisePsd" ,arrowhead="odiamond"];
  Node12 [label="{ns3::Ptr\< ns3::SpectrumValue \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node13 [label="{ns3::SpectrumValue\n|- m_values\l|+ SpectrumValue()\l+ SpectrumValue()\l+ operator[]()\l+ operator[]()\l+ GetSpectrumModelUid()\l+ GetSpectrumModel()\l+ ConstBandsBegin()\l+ ConstBandsEnd()\l+ ConstValuesBegin()\l+ ConstValuesEnd()\land 14 more...\l- Add()\l- Add()\l- Subtract()\l- Subtract()\l- Multiply()\l- Multiply()\l- Divide()\l- Divide()\l- ChangeSign()\l- ShiftLeft()\land 6 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d6e/classns3_1_1SpectrumValue.html",tooltip="Set of values corresponding to a given SpectrumModel. "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::SimpleRefCount\l\< SpectrumValue \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node16 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_spectrumModel" ,arrowhead="odiamond"];
  Node16 [label="{ns3::Ptr\< const ns3\l::SpectrumModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node17 [label="{ns3::SpectrumModel\n|- m_bands\l- m_uid\l- m_uidCount\l|+ SpectrumModel()\l+ SpectrumModel()\l+ GetNumBands()\l+ GetUid()\l+ Begin()\l+ End()\l+ IsOrthogonal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/da4/classns3_1_1SpectrumModel.html"];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 [label="{ns3::SimpleRefCount\l\< SpectrumModel \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node15 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
}
