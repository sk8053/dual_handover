digraph "ns3::WifiInformationElement"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::WifiInformationElement\n||+ ~WifiInformationElement()\l+ Serialize()\l+ Deserialize()\l+ DeserializeIfPresent()\l+ GetSerializedSize()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ operator\<()\l+ operator==()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::SimpleRefCount\l\< WifiInformationElement \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::dot11s::IeBeaconTiming\n|- m_neighbours\l- m_numOfUnits\l|+ IeBeaconTiming()\l+ GetNeighboursTimingElementsList()\l+ AddNeighboursTimingElementUnit()\l+ DelNeighboursTimingElementUnit()\l+ ClearTimingElement()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ operator==()\l- TimestampToU16()\l- BeaconIntervalToU16()\l- AidToU8()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d28/classns3_1_1dot11s_1_1IeBeaconTiming.html",tooltip="See 7.3.2.89 of 802.11s draft 2.07. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::dot11s::IeConfiguration\n|- m_APSPId\l- m_APSMId\l- m_CCMId\l- m_SPId\l- m_APId\l- m_meshCap\l- m_neighbors\l|+ IeConfiguration()\l+ SetRouting()\l+ SetMetric()\l+ IsHWMP()\l+ IsAirtime()\l+ SetNeighborCount()\l+ GetNeighborCount()\l+ MeshCapability()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d3e/classns3_1_1dot11s_1_1IeConfiguration.html",tooltip="Describes Mesh Configuration Element see 7.3.2.86 of 802.11s draft 3.0. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::dot11s::IeLinkMetric\lReport\n|- m_metric\l|+ IeLinkMetricReport()\l+ IeLinkMetricReport()\l+ SetMetric()\l+ GetMetric()\l+ ElementId()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ GetInformationFieldSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d8f/classns3_1_1dot11s_1_1IeLinkMetricReport.html",tooltip="a IEEE 802.11s Mesh ID 7.3.2.88 of 802.11s draft 3.0 "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::dot11s::IeMeshId\n|- m_meshId\l|+ IeMeshId()\l+ IeMeshId()\l+ IsEqual()\l+ IsBroadcast()\l+ PeekString()\l+ ElementId()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ GetInformationFieldSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d44/classns3_1_1dot11s_1_1IeMeshId.html",tooltip="a IEEE 802.11 Mesh ID element (Section 8.4.2.101 of IEEE 802.11-2012) "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::dot11s::IePeeringProtocol\n|- m_protocol\l|+ IePeeringProtocol()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dc0/classns3_1_1dot11s_1_1IePeeringProtocol.html",tooltip="Mesh Peering Protocol Identifier information element Note that it does not permit to set any value be..."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::dot11s::IePeerManagement\n|- m_length\l- m_subtype\l- m_localLinkId\l- m_peerLinkId\l- m_reasonCode\l|+ IePeerManagement()\l+ SetPeerOpen()\l+ SetPeerClose()\l+ SetPeerConfirm()\l+ GetReasonCode()\l+ GetLocalLinkId()\l+ GetPeerLinkId()\l+ SubtypeIsOpen()\l+ SubtypeIsClose()\l+ SubtypeIsConfirm()\land 6 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d50/classns3_1_1dot11s_1_1IePeerManagement.html",tooltip="according to IEEE 802.11 - 2012 "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::dot11s::IePerr\n|- m_addressUnits\l|+ IePerr()\l+ ~IePerr()\l+ GetNumOfDest()\l+ AddAddressUnit()\l+ IsFull()\l+ GetAddressUnitVector()\l+ DeleteAddressUnit()\l+ ResetPerr()\l+ ElementId()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ GetInformationFieldSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d39/classns3_1_1dot11s_1_1IePerr.html",tooltip="See 7.3.2.98 of 802.11s draft 2.07. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::dot11s::IePrep\n|- m_flags\l- m_hopcount\l- m_ttl\l- m_destinationAddress\l- m_destSeqNumber\l- m_lifetime\l- m_metric\l- m_originatorAddress\l- m_originatorSeqNumber\l|+ IePrep()\l+ ~IePrep()\l+ SetFlags()\l+ SetHopcount()\l+ SetTtl()\l+ SetDestinationAddress()\l+ SetDestinationSeqNumber()\l+ SetLifetime()\l+ SetMetric()\l+ SetOriginatorAddress()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d1f/classns3_1_1dot11s_1_1IePrep.html",tooltip="See 7.3.2.97 of 802.11s draft 2.07. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::dot11s::IePreq\n|- m_maxSize\l- m_flags\l- m_hopCount\l- m_ttl\l- m_preqId\l- m_originatorAddress\l- m_originatorSeqNumber\l- m_lifetime\l- m_metric\l- m_destCount\l- m_destinations\l|+ IePreq()\l+ ~IePreq()\l+ AddDestinationAddressElement()\l+ DelDestinationAddressElement()\l+ ClearDestinationAddressElements()\l+ GetDestinationList()\l+ SetUnicastPreq()\l+ SetNeedNotPrep()\l+ SetHopcount()\l+ SetTTL()\land 25 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d9b/classns3_1_1dot11s_1_1IePreq.html",tooltip="See 7.3.2.96 of 802.11s draft 2.07. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 [label="{ns3::dot11s::IeRann\n|- m_flags\l- m_hopcount\l- m_ttl\l- m_originatorAddress\l- m_destSeqNumber\l- m_metric\l|+ IeRann()\l+ ~IeRann()\l+ SetFlags()\l+ SetHopcount()\l+ SetTTL()\l+ SetOriginatorAddress()\l+ SetDestSeqNumber()\l+ SetMetric()\l+ GetFlags()\l+ GetHopcount()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d82/classns3_1_1dot11s_1_1IeRann.html",tooltip="Root announcement (RANN) element. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::DsssParameterSet\n|- m_currentChannel\l- m_dsssSupported\l|+ DsssParameterSet()\l+ SetDsssSupported()\l+ SetCurrentChannel()\l+ GetCurrentChannel()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Serialize()\l+ GetSerializedSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dc1/classns3_1_1DsssParameterSet.html",tooltip="The DSSS Parameter SetThis class knows how to serialise and deserialise the DSSS Parameter Set..."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 [label="{ns3::EdcaParameterSet\n|- m_qosInfo\l- m_reserved\l- m_acBE\l- m_acBK\l- m_acVI\l- m_acVO\l- m_qosSupported\l|+ EdcaParameterSet()\l+ SetQosSupported()\l+ IsQosSupported()\l+ SetQosInfo()\l+ SetBeAifsn()\l+ SetBeAcm()\l+ SetBeAci()\l+ SetBeCWmin()\l+ SetBeCWmax()\l+ SetBeTXOPLimit()\land 49 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d50/classns3_1_1EdcaParameterSet.html",tooltip="The EDCA Parameter SetThis class knows how to serialise and deserialise the EDCA Parameter Set..."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 [label="{ns3::ErpInformation\n|- m_erpInformation\l- m_erpSupported\l|+ ErpInformation()\l+ SetErpSupported()\l+ SetBarkerPreambleMode()\l+ SetUseProtection()\l+ SetNonErpPresent()\l+ GetBarkerPreambleMode()\l+ GetUseProtection()\l+ GetNonErpPresent()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Serialize()\l+ GetSerializedSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d32/classns3_1_1ErpInformation.html",tooltip="The ErpInformation Information ElementThis class knows how to serialise and deserialise the ErpInform..."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node17 [label="{ns3::ExtendedSupportedRatesIE\n|- m_supportedRates\l|+ ExtendedSupportedRatesIE()\l+ ExtendedSupportedRatesIE()\l+ SetSupportedRates()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Serialize()\l+ GetSerializedSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d48/classns3_1_1ExtendedSupportedRatesIE.html",tooltip="The Extended Supported Rates Information ElementThis class knows how to serialise and deserialise the..."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 [label="{ns3::HeCapabilities\n|- m_plusHtcHeSupport\l- m_twtRequesterSupport\l- m_twtResponderSupport\l- m_fragmentationSupport\l- m_maximumNumberOfFragmented\lMsdus\l- m_minimumFragmentSize\l- m_triggerFrameMacPadding\lDuration\l- m_multiTidAggregationSupport\l- m_heLinkAdaptation\l- m_allAckSupport\land 54 more...\l|+ HeCapabilities()\l+ SetHeSupported()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ SetHeMacCapabilitiesInfo()\l+ SetHePhyCapabilitiesInfo()\l+ SetSupportedMcsAndNss()\l+ GetHeMacCapabilitiesInfo1()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d41/classns3_1_1HeCapabilities.html"];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node19 [label="{ns3::HtCapabilities\n|- m_ldpc\l- m_supportedChannelWidth\l- m_smPowerSave\l- m_greenField\l- m_shortGuardInterval20\l- m_shortGuardInterval40\l- m_txStbc\l- m_rxStbc\l- m_htDelayedBlockAck\l- m_maxAmsduLength\land 52 more...\l|+ HtCapabilities()\l+ SetHtSupported()\l+ SetHtCapabilitiesInfo()\l+ SetAmpduParameters()\l+ SetSupportedMcsSet()\l+ SetExtendedHtCapabilities()\l+ SetTxBfCapabilities()\l+ SetAntennaSelectionCapabilities()\l+ SetLdpc()\l+ SetSupportedChannelWidth()\land 41 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/de7/classns3_1_1HtCapabilities.html",tooltip="The HT Capabilities Information ElementThis class knows how to serialise and deserialise the HT Capab..."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 [label="{ns3::HtOperation\n|- m_primaryChannel\l- m_secondaryChannelOffset\l- m_staChannelWidth\l- m_rifsMode\l- m_reservedInformationSubset1\l- m_htProtection\l- m_nonGfHtStasPresent\l- m_reservedInformationSubset2_1\l- m_obssNonHtStasPresent\l- m_reservedInformationSubset2_2\land 18 more...\l|+ HtOperation()\l+ SetHtSupported()\l+ SetPrimaryChannel()\l+ SetInformationSubset1()\l+ SetInformationSubset2()\l+ SetInformationSubset3()\l+ SetBasicMcsSet()\l+ SetSecondaryChannelOffset()\l+ SetStaChannelWidth()\l+ SetRifsMode()\land 45 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dc6/classns3_1_1HtOperation.html",tooltip="The HT Operation Information ElementThis class knows how to serialise and deserialise the HT Operatio..."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 [label="{ns3::Ssid\n|- m_ssid\l- m_length\l|+ Ssid()\l+ Ssid()\l+ Ssid()\l+ IsEqual()\l+ IsBroadcast()\l+ PeekString()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/da2/classns3_1_1Ssid.html"];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 [label="{ns3::SupportedRates\n|+ extended\l+ MAX_SUPPORTED_RATES\l- m_nRates\l- m_rates\l|+ SupportedRates()\l+ SupportedRates()\l+ operator=()\l+ AddSupportedRate()\l+ SetBasicRate()\l+ AddBssMembershipSelectorRate()\l+ IsSupportedRate()\l+ IsBasicRate()\l+ IsBssMembershipSelectorRate()\l+ GetNRates()\l+ GetRate()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/de8/classns3_1_1SupportedRates.html",tooltip="The Supported Rates Information ElementThis class knows how to serialise and deserialise the Supporte..."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node23 [label="{ns3::VhtCapabilities\n|- m_maxMpduLength\l- m_supportedChannelWidthSet\l- m_rxLdpc\l- m_shortGuardIntervalFor80Mhz\l- m_shortGuardIntervalFor160Mhz\l- m_txStbc\l- m_rxStbc\l- m_suBeamformerCapable\l- m_suBeamformeeCapable\l- m_beamformeeStsCapable\land 14 more...\l|+ VhtCapabilities()\l+ SetVhtSupported()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ SetVhtCapabilitiesInfo()\l+ SetSupportedMcsAndNssSet()\l+ GetVhtCapabilitiesInfo()\l+ GetSupportedMcsAndNssSet()\land 31 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/de4/classns3_1_1VhtCapabilities.html"];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node24 [label="{ns3::VhtOperation\n|- m_channelWidth\l- m_channelCenterFrequency\lSegment0\l- m_channelCenterFrequency\lSegment1\l- m_basicVhtMcsAndNssSet\l- m_vhtSupported\l|+ VhtOperation()\l+ SetVhtSupported()\l+ SetChannelWidth()\l+ SetChannelCenterFrequency\lSegment0()\l+ SetChannelCenterFrequency\lSegment1()\l+ SetBasicVhtMcsAndNssSet()\l+ SetMaxVhtMcsPerNss()\l+ GetChannelWidth()\l+ GetChannelCenterFrequency\lSegment0()\l+ GetChannelCenterFrequency\lSegment1()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d41/classns3_1_1VhtOperation.html",tooltip="The VHT Operation Information ElementThis class knows how to serialise and deserialise the VHT Operat..."];
}
