digraph "ns3::MeshWifiBeacon"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::MeshWifiBeacon\n||+ MeshWifiBeacon()\l+ BeaconHeader()\l+ AddInformationElement()\l+ CreateHeader()\l+ GetBeaconInterval()\l+ CreatePacket()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_elements" ,arrowhead="odiamond"];
  Node2 [label="{ns3::MeshInformationElement\lVector\n||+ MeshInformationElementVector()\l+ ~MeshInformationElementVector()\l+ GetInstanceTypeId()\l+ DeserializeSingleIe()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/classns3_1_1MeshInformationElementVector.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::WifiInformationElement\lVector\n|# m_elements\l# m_maxSize\l|+ WifiInformationElementVector()\l+ ~WifiInformationElementVector()\l+ GetInstanceTypeId()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ DeserializeSingleIe()\l+ SetMaxSize()\l+ Begin()\l+ End()\l+ AddInformationElement()\l+ FindFirst()\l+ operator==()\l+ GetTypeId()\l# GetSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1WifiInformationElementVector.html",tooltip="Information element vectorImplements a vector of WifiInformationElements. Information elements typica..."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::Header\n||+ ~Header()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dae/classns3_1_1Header.html",tooltip="Protocol header serialization and deserialization. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::Chunk\n||+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9b/classns3_1_1Chunk.html",tooltip="abstract base class for ns3::Header and ns3::Trailer "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_header" ,arrowhead="odiamond"];
  Node7 [label="{ns3::MgtBeaconHeader\n||+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d27/classns3_1_1MgtBeaconHeader.html"];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::MgtProbeResponseHeader\n|- m_timestamp\l- m_beaconInterval\l|+ MgtProbeResponseHeader()\l+ ~MgtProbeResponseHeader()\l+ GetSsid()\l+ GetBeaconIntervalUs()\l+ GetSupportedRates()\l+ GetCapabilities()\l+ GetDsssParameterSet()\l+ GetHtCapabilities()\l+ GetHtOperation()\l+ GetVhtCapabilities()\land 22 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d3c/classns3_1_1MgtProbeResponseHeader.html"];
  Node4 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_ssid" ,arrowhead="odiamond"];
  Node9 [label="{ns3::Ssid\n|- m_ssid\l- m_length\l|+ Ssid()\l+ Ssid()\l+ Ssid()\l+ IsEqual()\l+ IsBroadcast()\l+ PeekString()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/da2/classns3_1_1Ssid.html"];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::WifiInformationElement\n||+ ~WifiInformationElement()\l+ Serialize()\l+ Deserialize()\l+ DeserializeIfPresent()\l+ GetSerializedSize()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ operator\<()\l+ operator==()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/db6/classns3_1_1WifiInformationElement.html",tooltip="Information element, as defined in 802.11-2007 standardThe IEEE 802.11 standard includes the notion o..."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::SimpleRefCount\l\< WifiInformationElement \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node13 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_rates" ,arrowhead="odiamond"];
  Node13 [label="{ns3::SupportedRates\n|+ MAX_SUPPORTED_RATES\l- m_nRates\l- m_rates\l|+ SupportedRates()\l+ SupportedRates()\l+ operator=()\l+ AddSupportedRate()\l+ SetBasicRate()\l+ AddBssMembershipSelectorRate()\l+ IsSupportedRate()\l+ IsBasicRate()\l+ IsBssMembershipSelectorRate()\l+ GetNRates()\l+ GetRate()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/de8/classns3_1_1SupportedRates.html",tooltip="The Supported Rates Information ElementThis class knows how to serialise and deserialise the Supporte..."];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" +extended" ,arrowhead="odiamond"];
  Node14 [label="{ns3::ExtendedSupportedRatesIE\n||+ ExtendedSupportedRatesIE()\l+ ExtendedSupportedRatesIE()\l+ SetSupportedRates()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Serialize()\l+ GetSerializedSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d48/classns3_1_1ExtendedSupportedRatesIE.html",tooltip="The Extended Supported Rates Information ElementThis class knows how to serialise and deserialise the..."];
  Node10 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -m_supportedRates" ,arrowhead="odiamond"];
  Node15 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_edcaParameterSet" ,arrowhead="odiamond"];
  Node15 [label="{ns3::EdcaParameterSet\n|- m_qosInfo\l- m_reserved\l- m_acBE\l- m_acBK\l- m_acVI\l- m_acVO\l- m_qosSupported\l|+ EdcaParameterSet()\l+ SetQosSupported()\l+ IsQosSupported()\l+ SetQosInfo()\l+ SetBeAifsn()\l+ SetBeAcm()\l+ SetBeAci()\l+ SetBeCWmin()\l+ SetBeCWmax()\l+ SetBeTXOPLimit()\land 49 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d50/classns3_1_1EdcaParameterSet.html",tooltip="The EDCA Parameter SetThis class knows how to serialise and deserialise the EDCA Parameter Set..."];
  Node10 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_erpInformation" ,arrowhead="odiamond"];
  Node16 [label="{ns3::ErpInformation\n|- m_erpInformation\l- m_erpSupported\l|+ ErpInformation()\l+ SetErpSupported()\l+ SetBarkerPreambleMode()\l+ SetUseProtection()\l+ SetNonErpPresent()\l+ GetBarkerPreambleMode()\l+ GetUseProtection()\l+ GetNonErpPresent()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Serialize()\l+ GetSerializedSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d32/classns3_1_1ErpInformation.html",tooltip="The ErpInformation Information ElementThis class knows how to serialise and deserialise the ErpInform..."];
  Node10 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node17 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_dsssParameterSet" ,arrowhead="odiamond"];
  Node17 [label="{ns3::DsssParameterSet\n|- m_currentChannel\l- m_dsssSupported\l|+ DsssParameterSet()\l+ SetDsssSupported()\l+ SetCurrentChannel()\l+ GetCurrentChannel()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Serialize()\l+ GetSerializedSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dc1/classns3_1_1DsssParameterSet.html",tooltip="The DSSS Parameter SetThis class knows how to serialise and deserialise the DSSS Parameter Set..."];
  Node10 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_capability" ,arrowhead="odiamond"];
  Node18 [label="{ns3::CapabilityInformation\n|- m_capability\l|+ CapabilityInformation()\l+ SetEss()\l+ SetIbss()\l+ SetShortPreamble()\l+ SetShortSlotTime()\l+ IsEss()\l+ IsIbss()\l+ IsShortPreamble()\l+ IsShortSlotTime()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l- Is()\l- Set()\l- Clear()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d4d/classns3_1_1CapabilityInformation.html"];
  Node19 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_vhtOperation" ,arrowhead="odiamond"];
  Node19 [label="{ns3::VhtOperation\n|- m_channelWidth\l- m_channelCenterFrequency\lSegment0\l- m_channelCenterFrequency\lSegment1\l- m_basicVhtMcsAndNssSet\l- m_vhtSupported\l|+ VhtOperation()\l+ SetVhtSupported()\l+ SetChannelWidth()\l+ SetChannelCenterFrequency\lSegment0()\l+ SetChannelCenterFrequency\lSegment1()\l+ SetBasicVhtMcsAndNssSet()\l+ SetMaxVhtMcsPerNss()\l+ GetChannelWidth()\l+ GetChannelCenterFrequency\lSegment0()\l+ GetChannelCenterFrequency\lSegment1()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d41/classns3_1_1VhtOperation.html",tooltip="The VHT Operation Information ElementThis class knows how to serialise and deserialise the VHT Operat..."];
  Node10 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_heCapability" ,arrowhead="odiamond"];
  Node20 [label="{ns3::HeCapabilities\n|- m_plusHtcHeSupport\l- m_twtRequesterSupport\l- m_twtResponderSupport\l- m_fragmentationSupport\l- m_maximumNumberOfFragmented\lMsdus\l- m_minimumFragmentSize\l- m_triggerFrameMacPadding\lDuration\l- m_multiTidAggregationSupport\l- m_heLinkAdaptation\l- m_allAckSupport\land 54 more...\l|+ HeCapabilities()\l+ SetHeSupported()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ SetHeMacCapabilitiesInfo()\l+ SetHePhyCapabilitiesInfo()\l+ SetSupportedMcsAndNss()\l+ GetHeMacCapabilitiesInfo1()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d41/classns3_1_1HeCapabilities.html"];
  Node10 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_vhtCapability" ,arrowhead="odiamond"];
  Node21 [label="{ns3::VhtCapabilities\n|- m_maxMpduLength\l- m_supportedChannelWidthSet\l- m_rxLdpc\l- m_shortGuardIntervalFor80Mhz\l- m_shortGuardIntervalFor160Mhz\l- m_txStbc\l- m_rxStbc\l- m_suBeamformerCapable\l- m_suBeamformeeCapable\l- m_beamformeeStsCapable\land 14 more...\l|+ VhtCapabilities()\l+ SetVhtSupported()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ SetVhtCapabilitiesInfo()\l+ SetSupportedMcsAndNssSet()\l+ GetVhtCapabilitiesInfo()\l+ GetSupportedMcsAndNssSet()\land 31 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/de4/classns3_1_1VhtCapabilities.html"];
  Node10 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_htOperation" ,arrowhead="odiamond"];
  Node22 [label="{ns3::HtOperation\n|- m_primaryChannel\l- m_secondaryChannelOffset\l- m_staChannelWidth\l- m_rifsMode\l- m_reservedInformationSubset1\l- m_htProtection\l- m_nonGfHtStasPresent\l- m_reservedInformationSubset2_1\l- m_obssNonHtStasPresent\l- m_reservedInformationSubset2_2\land 18 more...\l|+ HtOperation()\l+ SetHtSupported()\l+ SetPrimaryChannel()\l+ SetInformationSubset1()\l+ SetInformationSubset2()\l+ SetInformationSubset3()\l+ SetBasicMcsSet()\l+ SetSecondaryChannelOffset()\l+ SetStaChannelWidth()\l+ SetRifsMode()\land 45 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dc6/classns3_1_1HtOperation.html",tooltip="The HT Operation Information ElementThis class knows how to serialise and deserialise the HT Operatio..."];
  Node10 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node23 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_htCapability" ,arrowhead="odiamond"];
  Node23 [label="{ns3::HtCapabilities\n|- m_ldpc\l- m_supportedChannelWidth\l- m_smPowerSave\l- m_greenField\l- m_shortGuardInterval20\l- m_shortGuardInterval40\l- m_txStbc\l- m_rxStbc\l- m_htDelayedBlockAck\l- m_maxAmsduLength\land 52 more...\l|+ HtCapabilities()\l+ SetHtSupported()\l+ SetHtCapabilitiesInfo()\l+ SetAmpduParameters()\l+ SetSupportedMcsSet()\l+ SetExtendedHtCapabilities()\l+ SetTxBfCapabilities()\l+ SetAntennaSelectionCapabilities()\l+ SetLdpc()\l+ SetSupportedChannelWidth()\land 41 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/de7/classns3_1_1HtCapabilities.html",tooltip="The HT Capabilities Information ElementThis class knows how to serialise and deserialise the HT Capab..."];
  Node10 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
}
