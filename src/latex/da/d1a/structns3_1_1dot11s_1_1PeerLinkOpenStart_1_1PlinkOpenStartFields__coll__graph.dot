digraph "ns3::dot11s::PeerLinkOpenStart::PlinkOpenStartFields"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::dot11s::PeerLinkOpen\lStart::PlinkOpenStartFields\n|+ capability\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +rates" ,arrowhead="odiamond"];
  Node2 [label="{ns3::SupportedRates\n|+ MAX_SUPPORTED_RATES\l- m_nRates\l- m_rates\l|+ SupportedRates()\l+ SupportedRates()\l+ operator=()\l+ AddSupportedRate()\l+ SetBasicRate()\l+ AddBssMembershipSelectorRate()\l+ IsSupportedRate()\l+ IsBasicRate()\l+ IsBssMembershipSelectorRate()\l+ GetNRates()\l+ GetRate()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/de8/classns3_1_1SupportedRates.html",tooltip="The Supported Rates Information ElementThis class knows how to serialise and deserialise the Supporte..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::WifiInformationElement\n||+ ~WifiInformationElement()\l+ Serialize()\l+ Deserialize()\l+ DeserializeIfPresent()\l+ GetSerializedSize()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ operator\<()\l+ operator==()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/db6/classns3_1_1WifiInformationElement.html",tooltip="Information element, as defined in 802.11-2007 standardThe IEEE 802.11 standard includes the notion o..."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< WifiInformationElement \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +extended" ,arrowhead="odiamond"];
  Node6 [label="{ns3::ExtendedSupportedRatesIE\n||+ ExtendedSupportedRatesIE()\l+ ExtendedSupportedRatesIE()\l+ SetSupportedRates()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Serialize()\l+ GetSerializedSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d48/classns3_1_1ExtendedSupportedRatesIE.html",tooltip="The Extended Supported Rates Information ElementThis class knows how to serialise and deserialise the..."];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_supportedRates" ,arrowhead="odiamond"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +protocol" ,arrowhead="odiamond"];
  Node7 [label="{ns3::dot11s::IePeeringProtocol\n|- m_protocol\l|+ IePeeringProtocol()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dc0/classns3_1_1dot11s_1_1IePeeringProtocol.html",tooltip="Mesh Peering Protocol Identifier information element Note that it does not permit to set any value be..."];
  Node3 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +config" ,arrowhead="odiamond"];
  Node8 [label="{ns3::dot11s::IeConfiguration\n|- m_APSPId\l- m_APSMId\l- m_CCMId\l- m_SPId\l- m_APId\l- m_neighbors\l|+ IeConfiguration()\l+ SetRouting()\l+ SetMetric()\l+ IsHWMP()\l+ IsAirtime()\l+ SetNeighborCount()\l+ GetNeighborCount()\l+ MeshCapability()\l+ ElementId()\l+ GetInformationFieldSize()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d3e/classns3_1_1dot11s_1_1IeConfiguration.html",tooltip="Describes Mesh Configuration Element see 7.3.2.86 of 802.11s draft 3.0. "];
  Node3 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_meshCap" ,arrowhead="odiamond"];
  Node9 [label="{ns3::dot11s::Dot11sMeshCapability\n|+ acceptPeerLinks\l+ MCCASupported\l+ MCCAEnabled\l+ forwarding\l+ beaconTimingReport\l+ TBTTAdjustment\l+ powerSaveLevel\l|+ Dot11sMeshCapability()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetUint8()\l+ Is()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/ded/classns3_1_1dot11s_1_1Dot11sMeshCapability.html"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +meshId" ,arrowhead="odiamond"];
  Node10 [label="{ns3::dot11s::IeMeshId\n|- m_meshId\l|+ IeMeshId()\l+ IeMeshId()\l+ IsEqual()\l+ IsBroadcast()\l+ PeekString()\l+ ElementId()\l+ SerializeInformationField()\l+ DeserializeInformationField()\l+ Print()\l+ GetInformationFieldSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d44/classns3_1_1dot11s_1_1IeMeshId.html",tooltip="a IEEE 802.11 Mesh ID element (Section 8.4.2.101 of IEEE 802.11-2012) "];
  Node3 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
}
