digraph "ns3::MmWaveUePhy"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::MmWaveUePhy\n|+ isAdditionalUePhy\l- m_phySapUser\l- m_ueCphySapProvider\l- m_ueCphySapUser\l- m_amc\l- m_subChannelsForTx\l- m_subChannelsforRx\l- m_numRbg\l- m_wbCqiPeriod\l- m_wbCqiLast\l- m_prevSlotDir\land 30 more...\l|+ MmWaveUePhy()\l+ MmWaveUePhy()\l+ ~MmWaveUePhy()\l+ DoInitialize()\l+ DoDispose()\l+ GetUeCphySapProvider()\l+ SetUeCphySapUser()\l+ SetTxPower()\l+ GetTxPower()\l+ SetNoiseFigure()\land 35 more...\l+ GetTypeId()\l- DoReset()\l- DoStartCellSearch()\l- DoSynchronizeWithEnb()\l- DoSynchronizeWithEnb()\l- DoSetPa()\l- DoSetDlBandwidth()\l- DoConfigureUplink()\l- DoConfigureReferenceSignal\lPower()\l- DoSetRnti()\l- DoSetTransmissionMode()\l- DoSetSrsConfigurationIndex()\l- ReceiveDataPeriod()\l- QueueUlTbAlloc()\l- DequeueUlTbAlloc()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::MmWavePhy\n|# m_netDevice\l# m_spectrumPhy\l# m_downlinkSpectrumPhy\l# m_uplinkSpectrumPhy\l# m_txPower\l# m_noiseFigure\l# m_cellId\l# m_phyMacConfig\l# m_packetBurstMap\l# m_controlMessageQueue\land 16 more...\l|+ MmWavePhy()\l+ MmWavePhy()\l+ ~MmWavePhy()\l+ SetDevice()\l+ GetDevice()\l+ SetChannel()\l+ CreateTxPowerSpectralDensity()\l+ DoDispose()\l+ DoInitialize()\l+ GetTti()\land 18 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d7b/classns3_1_1MmWavePhy.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
}
