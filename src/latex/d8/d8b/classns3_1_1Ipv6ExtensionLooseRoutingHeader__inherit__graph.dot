digraph "ns3::Ipv6ExtensionLooseRoutingHeader"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::Ipv6ExtensionLooseRouting\lHeader\n|- m_routersAddress\l|+ GetInstanceTypeId()\l+ Ipv6ExtensionLooseRouting\lHeader()\l+ ~Ipv6ExtensionLooseRouting\lHeader()\l+ SetNumberAddress()\l+ SetRoutersAddress()\l+ GetRoutersAddress()\l+ SetRouterAddress()\l+ GetRouterAddress()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Ipv6ExtensionRouting\lHeader\n|- m_typeRouting\l- m_segmentsLeft\l|+ GetInstanceTypeId()\l+ Ipv6ExtensionRoutingHeader()\l+ ~Ipv6ExtensionRoutingHeader()\l+ SetTypeRouting()\l+ GetTypeRouting()\l+ SetSegmentsLeft()\l+ GetSegmentsLeft()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d67/classns3_1_1Ipv6ExtensionRoutingHeader.html",tooltip="Header of IPv6 Extension Routing. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Ipv6ExtensionHeader\n|# m_length\l- m_nextHeader\l- m_data\l|+ GetInstanceTypeId()\l+ Ipv6ExtensionHeader()\l+ ~Ipv6ExtensionHeader()\l+ SetNextHeader()\l+ GetNextHeader()\l+ SetLength()\l+ GetLength()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d0e/classns3_1_1Ipv6ExtensionHeader.html",tooltip="Header for IPv6 Extension. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::Header\n||+ ~Header()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dae/classns3_1_1Header.html",tooltip="Protocol header serialization and deserialization. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::Chunk\n||+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9b/classns3_1_1Chunk.html",tooltip="abstract base class for ns3::Header and ns3::Trailer "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
}
