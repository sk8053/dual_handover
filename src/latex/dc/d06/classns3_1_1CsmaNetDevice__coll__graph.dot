digraph "ns3::CsmaNetDevice"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::CsmaNetDevice\n|- m_deviceId\l- m_sendEnable\l- m_receiveEnable\l- m_txMachineState\l- m_encapMode\l- m_macTxDropTrace\l- m_macPromiscRxTrace\l- m_macRxDropTrace\l- m_phyTxBeginTrace\l- m_ifIndex\l- m_linkUp\l- m_mtu\l- DEFAULT_MTU\l|+ CsmaNetDevice()\l+ ~CsmaNetDevice()\l+ SetInterframeGap()\l+ SetBackoffParams()\l+ Attach()\l+ SetQueue()\l+ GetQueue()\l+ SetReceiveErrorModel()\l+ Receive()\l+ IsSendEnabled()\land 30 more...\l+ GetTypeId()\l# DoDispose()\l# AddHeader()\l# DoInitialize()\l# NotifyNewAggregate()\l- operator=()\l- CsmaNetDevice()\l- Init()\l- TransmitStart()\l- TransmitCompleteEvent()\l- TransmitReadyEvent()\l- TransmitAbort()\l- NotifyLinkUp()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::NetDevice\n|+ isEnbTypeForDc\l|+ ~NetDevice()\l+ SetIfIndex()\l+ GetIfIndex()\l+ GetChannel()\l+ SetAddress()\l+ GetAddress()\l+ SetMtu()\l+ GetMtu()\l+ IsLinkUp()\l+ AddLinkChangeCallback()\land 15 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dac/classns3_1_1NetDevice.html",tooltip="Network layer to device interface. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node6 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node3 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_address" ,arrowhead="odiamond"];
  Node8 [label="{ns3::Mac48Address\n|- m_address\l|+ Mac48Address()\l+ Mac48Address()\l+ CopyFrom()\l+ CopyTo()\l+ operator Address()\l+ IsBroadcast()\l+ IsGroup()\l+ ConvertFrom()\l+ IsMatchingType()\l+ Allocate()\l+ GetBroadcast()\l+ GetMulticast()\l+ GetMulticast()\l+ GetMulticastPrefix()\l+ GetMulticast6Prefix()\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dee/classns3_1_1Mac48Address.html",tooltip="an EUI-48 address "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_phyTxEndTrace\n-m_phyRxEndTrace\n-m_macTxBackoffTrace\n-m_macRxTrace\n-m_snifferTrace\n-m_macTxTrace\n-m_phyTxDropTrace\n-m_phyRxBeginTrace\n-m_phyRxDropTrace\n-m_promiscSnifferTrace\n..." ,arrowhead="odiamond"];
  Node9 [label="{ns3::TracedCallback\l\< ns3::Ptr\< const ns3\l::Packet \> \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_bps" ,arrowhead="odiamond"];
  Node10 [label="{ns3::DataRate\n|- m_bps\l|+ DataRate()\l+ DataRate()\l+ DataRate()\l+ operator\<()\l+ operator\<=()\l+ operator\>()\l+ operator\>=()\l+ operator==()\l+ operator!=()\l+ CalculateBytesTxTime()\l+ CalculateBitsTxTime()\l+ CalculateTxTime()\l+ GetBitRate()\l- DoParse()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d01/classns3_1_1DataRate.html",tooltip="Class for representing data rates. "];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_promiscRxCallback" ,arrowhead="odiamond"];
  Node11 [label="{ns3::Callback\< bool,\l Ptr\< NetDevice \>, Ptr\l\< const Packet \>, uint16\l_t, const Address &, const\l Address &, enum PacketType \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::CallbackBase\n||+ CallbackBase()\l+ GetImpl()\l# CallbackBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1CallbackBase.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" #m_impl" ,arrowhead="odiamond"];
  Node13 [label="{ns3::Ptr\< ns3::CallbackImpl\lBase \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node14 [label="{ns3::CallbackImplBase\n||+ ~CallbackImplBase()\l+ IsEqual()\l+ GetTypeid()\l# Demangle()\l# GetCppTypeid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dfa/classns3_1_1CallbackImplBase.html"];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node15 [label="{ns3::SimpleRefCount\l\< CallbackImplBase \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node17 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node17 [label="{ns3::Ptr\< ns3::Node \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node18 [label="{ns3::Node\n|- m_id\l- m_sid\l- m_devices\l- m_applications\l- m_handlers\l- m_deviceAdditionListeners\l|+ Node()\l+ Node()\l+ ~Node()\l+ GetId()\l+ GetLocalTime()\l+ GetSystemId()\l+ AddDevice()\l+ GetDevice()\l+ GetNDevices()\l+ AddApplication()\land 6 more...\l+ GetTypeId()\l+ ChecksumEnabled()\l# DoDispose()\l# DoInitialize()\l- NotifyDeviceAdded()\l- NonPromiscReceiveFromDevice()\l- PromiscReceiveFromDevice()\l- ReceiveFromDevice()\l- Construct()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/ded/classns3_1_1Node.html",tooltip="A network Node. "];
  Node3 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node19 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_linkChangeCallbacks" ,arrowhead="odiamond"];
  Node19 [label="{ns3::TracedCallback\l\< T1, T2, T3, T4, T5,\l T6, T7, T8 \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html",tooltip="Forward calls to a chain of Callback. "];
  Node20 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_rxCallback" ,arrowhead="odiamond"];
  Node20 [label="{ns3::Callback\< bool,\l Ptr\< NetDevice \>, Ptr\l\< const Packet \>, uint16\l_t, const Address & \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node12 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_tInterframeGap" ,arrowhead="odiamond"];
  Node21 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node22 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_queueInterface" ,arrowhead="odiamond"];
  Node22 [label="{ns3::Ptr\< ns3::NetDevice\lQueueInterface \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node23 [label="{ns3::NetDeviceQueueInterface\n|- m_txQueuesVector\l- m_numTxQueues\l- m_lateTxQueuesCreation\l- m_traceMap\l|+ NetDeviceQueueInterface()\l+ ~NetDeviceQueueInterface()\l+ GetTxQueue()\l+ GetNTxQueues()\l+ SetTxQueuesN()\l+ CreateTxQueues()\l+ GetLateTxQueuesCreation()\l+ SetLateTxQueuesCreation()\l+ SetSelectQueueCallback()\l+ GetSelectQueueCallback()\l+ ConnectQueueTraces()\l+ GetTypeId()\l# DoDispose()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dba/classns3_1_1NetDeviceQueueInterface.html",tooltip="Network device transmission queue interface. "];
  Node3 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node24 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -m_selectQueueCallback" ,arrowhead="odiamond"];
  Node24 [label="{ns3::Callback\< uint8\l_t, Ptr\< QueueItem \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node12 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node25 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_currentPkt" ,arrowhead="odiamond"];
  Node25 [label="{ns3::Ptr\< ns3::Packet \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node26 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node26 [label="{ns3::Packet\n|- m_globalUid\l|+ Packet()\l+ Packet()\l+ operator=()\l+ Packet()\l+ Packet()\l+ Packet()\l+ CreateFragment()\l+ GetSize()\l+ AddHeader()\l+ RemoveHeader()\land 31 more...\l+ EnablePrinting()\l+ EnableChecking()\l- Packet()\l- Deserialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d7a/classns3_1_1Packet.html",tooltip="network packets "];
  Node27 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node27 [label="{ns3::SimpleRefCount\l\< Packet \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node16 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node28 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_nixVector" ,arrowhead="odiamond"];
  Node28 [label="{ns3::Ptr\< ns3::NixVector \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node29 -> Node28 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node29 [label="{ns3::NixVector\n|- m_nixVector\l- m_used\l- m_currentVectorBitSize\l- m_totalBitSize\l|+ NixVector()\l+ ~NixVector()\l+ Copy()\l+ NixVector()\l+ operator=()\l+ AddNeighborIndex()\l+ ExtractNeighborIndex()\l+ GetRemainingBits()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ BitCount()\l- DumpNixVector()\l- PrintDec2BinNixFill()\l- PrintDec2BinNix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d44/classns3_1_1NixVector.html",tooltip="Neighbor-index data structure for nix-vector routing. "];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node30 [label="{ns3::SimpleRefCount\l\< NixVector \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node16 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node31 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_metadata" ,arrowhead="odiamond"];
  Node31 [label="{ns3::PacketMetadata\n|- m_head\l- m_tail\l- m_used\l- m_packetUid\l- m_enable\l- m_enableChecking\l- m_metadataSkipped\l- m_maxSize\l- m_chunkUid\l|+ PacketMetadata()\l+ PacketMetadata()\l+ operator=()\l+ ~PacketMetadata()\l+ AddHeader()\l+ RemoveHeader()\l+ AddTrailer()\l+ RemoveTrailer()\l+ CreateFragment()\l+ AddAtEnd()\land 8 more...\l+ Enable()\l+ EnableChecking()\l- DataFreeList::~DataFreeList()\l- PacketMetadata()\l- AddSmall()\l- AddBig()\l- ReplaceTail()\l- UpdateHead()\l- UpdateTail()\l- GetUleb128Size()\l- ReadUleb128()\l- Append16()\land 11 more...\l- AddToRawU8()\l- AddToRawU16()\l- AddToRawU32()\l- AddToRawU64()\l- AddToRaw()\l- ReadFromRawU8()\l- ReadFromRawU16()\l- ReadFromRawU32()\l- ReadFromRawU64()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/db1/classns3_1_1PacketMetadata.html",tooltip="Handle packet metadata about packet headers and trailers. "];
  Node32 -> Node31 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node32 [label="{ns3::PacketMetadata\l::Data\n|+ m_count\l+ m_size\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d9c/structns3_1_1PacketMetadata_1_1Data.html"];
  Node33 -> Node31 [color="grey25",fontsize="10",style="solid",label=" -m_freeList" ,arrowhead="odiamond"];
  Node33 [label="{ns3::PacketMetadata\l::DataFreeList\n||+ ~DataFreeList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/df8/classns3_1_1PacketMetadata_1_1DataFreeList.html",tooltip="Class to hold all the metadata. "];
  Node34 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node34 [label="{std::vector\< struct\l Data * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node35 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_byteTagList" ,arrowhead="odiamond"];
  Node35 [label="{ns3::ByteTagList\n|- m_minStart\l- m_maxEnd\l- m_adjustment\l- m_used\l|+ ByteTagList()\l+ ByteTagList()\l+ operator=()\l+ ~ByteTagList()\l+ Add()\l+ Add()\l+ RemoveAll()\l+ Begin()\l+ Adjust()\l+ AddAtEnd()\l+ AddAtStart()\l- BeginAll()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d64/classns3_1_1ByteTagList.html",tooltip="keep track of the byte tags stored in a packet. "];
  Node36 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node36 [label="{ns3::ByteTagListData\n|+ size\l+ count\l+ dirty\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d62/structns3_1_1ByteTagListData.html",tooltip="Internal representation of the byte tags stored in a packet. "];
  Node37 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_packetTagList" ,arrowhead="odiamond"];
  Node37 [label="{ns3::PacketTagList\n||+ PacketTagList()\l+ PacketTagList()\l+ operator=()\l+ ~PacketTagList()\l+ Add()\l+ Remove()\l+ Replace()\l+ Peek()\l+ RemoveAll()\l+ Head()\l- COWTraverse()\l- RemoveWriter()\l- ReplaceWriter()\l- CreateTagData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d19/classns3_1_1PacketTagList.html",tooltip="List of the packet tags stored in a packet. "];
  Node38 -> Node37 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
  Node38 [label="{ns3::PacketTagList\l::TagData\n|+ count\l+ size\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d03/structns3_1_1PacketTagList_1_1TagData.html"];
  Node38 -> Node38 [color="grey25",fontsize="10",style="solid",label=" +next" ,arrowhead="odiamond"];
  Node6 -> Node38 [color="grey25",fontsize="10",style="solid",label=" +tid" ,arrowhead="odiamond"];
  Node39 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_buffer" ,arrowhead="odiamond"];
  Node39 [label="{ns3::Buffer\n|- m_maxZeroAreaStart\l- m_zeroAreaStart\l- m_zeroAreaEnd\l- m_start\l- m_end\l- g_recommendedStart\l- g_maxSize\l- g_freeList\l|+ GetSize()\l+ PeekData()\l+ AddAtStart()\l+ AddAtEnd()\l+ AddAtEnd()\l+ RemoveAtStart()\l+ RemoveAtEnd()\l+ CreateFragment()\l+ Begin()\l+ End()\land 11 more...\l- CreateFullCopy()\l- TransformIntoRealBuffer()\l- CheckInternalState()\l- Initialize()\l- GetInternalSize()\l- GetInternalEnd()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d85/classns3_1_1Buffer.html",tooltip="automatically resized byte buffer "];
  Node40 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node40 [label="{ns3::Buffer::Data\n|+ m_count\l+ m_size\l+ m_dirtyStart\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dcc/structns3_1_1Buffer_1_1Data.html"];
  Node41 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -g_localStaticDestructor" ,arrowhead="odiamond"];
  Node41 [label="{ns3::Buffer::LocalStatic\lDestructor\n||+ ~LocalStaticDestructor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/de5/structns3_1_1Buffer_1_1LocalStaticDestructor.html",tooltip="Local static destructor structure. "];
  Node42 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_queue" ,arrowhead="odiamond"];
  Node42 [label="{ns3::Ptr\< ns3::Queue\l\< ns3::Packet \> \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node43 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node43 [label="{ns3::Queue\< ns3::Packet \>\n|- m_packets\l|+ Queue()\l+ ~Queue()\l+ Enqueue()\l+ Dequeue()\l+ Remove()\l+ Peek()\l+ Flush()\l+ GetTypeId()\l# Head()\l# Tail()\l# DoEnqueue()\l# DoDequeue()\l# DoRemove()\l# DoPeek()\l# DropBeforeEnqueue()\l# DropAfterDequeue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d8f/classns3_1_1Queue.html"];
  Node44 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node44 [label="{ns3::QueueBase\n|- m_nTotalReceivedBytes\l- m_nTotalReceivedPackets\l- m_nTotalDroppedBytes\l- m_nTotalDroppedBytesBefore\lEnqueue\l- m_nTotalDroppedBytesAfter\lDequeue\l- m_nTotalDroppedPackets\l- m_nTotalDroppedPacketsBefore\lEnqueue\l- m_nTotalDroppedPacketsAfter\lDequeue\l- m_maxPackets\l- m_maxBytes\l- m_mode\l|+ QueueBase()\l+ ~QueueBase()\l+ IsEmpty()\l+ GetNPackets()\l+ GetNBytes()\l+ GetTotalReceivedBytes()\l+ GetTotalReceivedPackets()\l+ GetTotalDroppedBytes()\l+ GetTotalDroppedBytesBefore\lEnqueue()\l+ GetTotalDroppedBytesAfter\lDequeue()\land 10 more...\l+ GetTypeId()\l+ AppendItemTypeIfNotPresent()\l# DoNsLog()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dbd/classns3_1_1QueueBase.html",tooltip="Abstract base class for packet Queues. "];
  Node3 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node45 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -m_nPackets\n-m_nBytes" ,arrowhead="odiamond"];
  Node45 [label="{ns3::TracedValue\< uint32_t \>\n|- m_v\l|+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ operator uint32_t()\l+ operator=()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ Set()\l+ Get()\l+ operator++()\l+ operator++()\l+ operator--()\l+ operator--()\l* operator++()\l* operator++()\l* operator--()\l* operator--()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d97/classns3_1_1TracedValue.html"];
  Node46 -> Node45 [color="grey25",fontsize="10",style="solid",label=" -m_cb" ,arrowhead="odiamond"];
  Node46 [label="{ns3::TracedCallback\l\< uint32_t, uint32_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node9 -> Node43 [color="grey25",fontsize="10",style="solid",label=" -m_traceEnqueue\n-m_traceDropBeforeEnqueue\n-m_traceDrop\n-m_traceDequeue\n-m_traceDropAfterDequeue" ,arrowhead="odiamond"];
  Node47 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_channel" ,arrowhead="odiamond"];
  Node47 [label="{ns3::Ptr\< ns3::CsmaChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node48 -> Node47 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node48 [label="{ns3::CsmaChannel\n|- m_deviceList\l- m_currentSrc\l- m_state\l|+ CsmaChannel()\l+ ~CsmaChannel()\l+ Attach()\l+ Detach()\l+ Detach()\l+ Reattach()\l+ Reattach()\l+ TransmitStart()\l+ TransmitEnd()\l+ PropagationCompleteEvent()\land 10 more...\l+ GetTypeId()\l- CsmaChannel()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d86/classns3_1_1CsmaChannel.html",tooltip="Csma Channel. "];
  Node49 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node49 [label="{ns3::Channel\n|- m_id\l|+ Channel()\l+ ~Channel()\l+ GetId()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d67/classns3_1_1Channel.html",tooltip="Abstract Channel Base Class. "];
  Node3 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -m_bps" ,arrowhead="odiamond"];
  Node21 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -m_delay" ,arrowhead="odiamond"];
  Node25 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -m_currentPkt" ,arrowhead="odiamond"];
  Node50 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_receiveErrorModel" ,arrowhead="odiamond"];
  Node50 [label="{ns3::Ptr\< ns3::ErrorModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node51 -> Node50 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node51 [label="{ns3::ErrorModel\n|- m_enable\l|+ ErrorModel()\l+ ~ErrorModel()\l+ IsCorrupt()\l+ Reset()\l+ Enable()\l+ Disable()\l+ IsEnabled()\l+ GetTypeId()\l- DoCorrupt()\l- DoReset()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d63/classns3_1_1ErrorModel.html",tooltip="General error model that can be used to corrupt packets. "];
  Node3 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node52 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_backoff" ,arrowhead="odiamond"];
  Node52 [label="{ns3::Backoff\n|+ m_minSlots\l+ m_maxSlots\l+ m_ceiling\l+ m_maxRetries\l- m_numBackoffRetries\l|+ Backoff()\l+ Backoff()\l+ GetBackoffTime()\l+ ResetBackoffTime()\l+ MaxRetriesReached()\l+ IncrNumRetries()\l+ AssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d54/classns3_1_1Backoff.html",tooltip="The backoff class is used for calculating backoff times when many net devices can write to the same c..."];
  Node21 -> Node52 [color="grey25",fontsize="10",style="solid",label=" +m_slotTime" ,arrowhead="odiamond"];
  Node53 -> Node52 [color="grey25",fontsize="10",style="solid",label=" -m_rng" ,arrowhead="odiamond"];
  Node53 [label="{ns3::Ptr\< ns3::UniformRandom\lVariable \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node54 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node54 [label="{ns3::UniformRandomVariable\n||+ UniformRandomVariable()\l+ GetMin()\l+ GetMax()\l+ GetValue()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d5b/classns3_1_1UniformRandomVariable.html",tooltip="The uniform distribution Random Number Generator (RNG). "];
  Node55 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node55 [label="{ns3::RandomVariableStream\n|- m_isAntithetic\l- m_stream\l|+ RandomVariableStream()\l+ ~RandomVariableStream()\l+ SetStream()\l+ GetStream()\l+ SetAntithetic()\l+ IsAntithetic()\l+ GetValue()\l+ GetInteger()\l+ GetTypeId()\l# Peek()\l- RandomVariableStream()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/daa/classns3_1_1RandomVariableStream.html",tooltip="The basic uniform Random Number Generator (RNG). "];
  Node3 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node56 -> Node55 [color="grey25",fontsize="10",style="solid",label=" -m_rng" ,arrowhead="odiamond"];
  Node56 [label="{ns3::RngStream\n|- m_currentState\l|+ RngStream()\l+ RngStream()\l+ RandU01()\l- AdvanceNthBy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d35/classns3_1_1RngStream.html",tooltip="Combined Multiple-Recursive Generator MRG32k3a. "];
}
