digraph "ns3::OriginatorBlockAckAgreement"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::OriginatorBlockAckAgreement\n|- m_state\l- m_sentMpdus\l- m_needBlockAckReq\l|+ OriginatorBlockAckAgreement()\l+ OriginatorBlockAckAgreement()\l+ ~OriginatorBlockAckAgreement()\l+ SetState()\l+ IsPending()\l+ IsEstablished()\l+ IsInactive()\l+ IsUnsuccessful()\l+ NotifyMpduTransmission()\l+ IsBlockAckRequestNeeded()\l+ CompleteExchange()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::BlockAckAgreement\n|# m_amsduSupported\l# m_blockAckPolicy\l# m_tid\l# m_bufferSize\l# m_timeout\l# m_startingSeq\l# m_winEnd\l# m_htSupported\l|+ BlockAckAgreement()\l+ BlockAckAgreement()\l+ ~BlockAckAgreement()\l+ SetBufferSize()\l+ SetTimeout()\l+ SetStartingSequence()\l+ SetStartingSequenceControl()\l+ SetImmediateBlockAck()\l+ SetDelayedBlockAck()\l+ SetAmsduSupport()\land 12 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d42/classns3_1_1BlockAckAgreement.html",tooltip="Maintains information for a block ack agreement. "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_peer" ,arrowhead="odiamond"];
  Node3 [label="{ns3::Mac48Address\n|- m_address\l|+ Mac48Address()\l+ Mac48Address()\l+ CopyFrom()\l+ CopyTo()\l+ operator Address()\l+ IsBroadcast()\l+ IsGroup()\l+ ConvertFrom()\l+ IsMatchingType()\l+ Allocate()\l+ GetBroadcast()\l+ GetMulticast()\l+ GetMulticast()\l+ GetMulticastPrefix()\l+ GetMulticast6Prefix()\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dee/classns3_1_1Mac48Address.html",tooltip="an EUI-48 address "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_inactivityEvent" ,arrowhead="odiamond"];
  Node4 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node5 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node6 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
}
