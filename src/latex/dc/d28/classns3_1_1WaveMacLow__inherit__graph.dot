digraph "ns3::WaveMacLow"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::WaveMacLow\n|- m_scheduler\l- m_coordinator\l|+ WaveMacLow()\l+ ~WaveMacLow()\l+ SetWaveNetDevice()\l+ StartTransmission()\l+ GetTypeId()\l- GetDataTxVector()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::MacLow\n|- m_phy\l- m_stationManager\l- m_rxCallback\l- m_dcfManagers\l- m_normalAckTimeoutEvent\l- m_fastAckTimeoutEvent\l- m_superFastAckTimeoutEvent\l- m_fastAckFailedTimeoutEvent\l- m_blockAckTimeoutEvent\l- m_ctsTimeoutEvent\land 33 more...\l|+ MacLow()\l+ ~MacLow()\l+ SetPhy()\l+ GetPhy()\l+ ResetPhy()\l+ SetWifiRemoteStationManager()\l+ SetAddress()\l+ SetAckTimeout()\l+ SetBasicBlockAckTimeout()\l+ SetCompressedBlockAckTimeout()\land 38 more...\l+ GetTypeId()\l- CancelAllEvents()\l- GetAckSize()\l- GetBlockAckSize()\l- GetRtsSize()\l- GetCtsSize()\l- GetSize()\l- AddWifiMacTrailer()\l- ForwardDown()\l- SendMpdu()\l- GetRtsTxVector()\land 53 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/da6/classns3_1_1MacLow.html",tooltip="handle RTS/CTS/DATA/ACK transactions. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
}
