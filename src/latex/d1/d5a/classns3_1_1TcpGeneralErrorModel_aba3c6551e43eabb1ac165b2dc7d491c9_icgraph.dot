digraph "ns3::TcpGeneralErrorModel::ShouldDrop"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ns3::TcpGeneralErrorModel\l::ShouldDrop",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="ns3::TcpGeneralErrorModel\l::DoCorrupt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d5a/classns3_1_1TcpGeneralErrorModel.html#a45cf0b37801164078eb0643dfe388468"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="ns3::TcpGeneralErrorModel\l::SetDropCallback",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d5a/classns3_1_1TcpGeneralErrorModel.html#a812f8d0b0eaf4508efd44be00028673f",tooltip="Set the drop callback. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="TcpBytesInFlightTest\l::CreateReceiverErrorModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d15/classTcpBytesInFlightTest.html#a1942203532d11a2136fe0369fd7385fc",tooltip="Create a receiver error model. "];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="TcpFastRetrTest::CreateReceiver\lErrorModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d85/classTcpFastRetrTest.html#a42205ea481c029c1f7202d0eba41e098",tooltip="Create and return the error model to install in the receiver node. "];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="TcpTimeRtoTest::CreateReceiver\lErrorModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/da7/classTcpTimeRtoTest.html#ab9f68845369259b334d796ce9f92c7cd",tooltip="Create and return the error model to install in the receiver node. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="ns3::TcpSeqErrorModel\l::AddSeqToKill",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d33/classns3_1_1TcpSeqErrorModel.html#a5c414ce6277ae9ff84decb83a0847386",tooltip="Add the sequence number to the list of segments to be killed. "];
  Node7 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="TcpRttEstimationWithLoss\lTest::CreateReceiverErrorModel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d57/classTcpRttEstimationWithLossTest.html#a72a578c553fd6835f4234af0890efd8b",tooltip="Create and return the error model to install in the receiver node. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="ns3::TcpFlagErrorModel\l::SetKillRepeat",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/daf/classns3_1_1TcpFlagErrorModel.html#a97071fba6dfb851b41af2f6d42d01f54",tooltip="Set how many packets should be killed. "];
}
