digraph "ns3::NscTcpSocketImpl"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::NscTcpSocketImpl\n|- m_delAckMaxCount\l- m_noDelay\l- m_remotePort\l- m_localPort\l- m_errno\l- m_shutdownSend\l- m_shutdownRecv\l- m_connected\l- m_closeOnEmpty\l- m_txBuffer\land 12 more...\l|+ NscTcpSocketImpl()\l+ NscTcpSocketImpl()\l+ ~NscTcpSocketImpl()\l+ SetNode()\l+ SetTcp()\l+ GetErrno()\l+ GetSocketType()\l+ GetPeerName()\l+ GetNode()\l+ Bind()\land 16 more...\l+ GetTypeId()\l- NSCWakeup()\l- FinishBind()\l- ForwardUp()\l- Destroy()\l- SendPendingData()\l- ReadPendingData()\l- Accept()\l- CompleteFork()\l- ConnectionSucceeded()\l- Copy()\land 27 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::TcpSocket\n|+ TcpStateName\l|+ TcpSocket()\l+ ~TcpSocket()\l+ GetTypeId()\l- SetSndBufSize()\l- GetSndBufSize()\l- SetRcvBufSize()\l- GetRcvBufSize()\l- SetSegSize()\l- GetSegSize()\l- SetInitialSSThresh()\l- GetInitialSSThresh()\l- SetInitialCwnd()\l- GetInitialCwnd()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dc5/classns3_1_1TcpSocket.html",tooltip="(abstract) base class of all TcpSockets "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Socket\n|# m_recvPktInfo\l- m_priority\l- m_manualIpTtl\l- m_ipRecvTos\l- m_ipRecvTtl\l- m_ipTos\l- m_ipTtl\l- m_manualIpv6Tclass\l- m_manualIpv6HopLimit\l- m_ipv6RecvTclass\l- m_ipv6RecvHopLimit\l- m_ipv6Tclass\l- m_ipv6HopLimit\l|+ Socket()\l+ ~Socket()\l+ GetErrno()\l+ GetSocketType()\l+ GetNode()\l+ SetConnectCallback()\l+ SetCloseCallbacks()\l+ SetAcceptCallback()\l+ SetDataSentCallback()\l+ SetSendCallback()\land 51 more...\l+ GetTypeId()\l+ CreateSocket()\l+ IpTos2Priority()\l# NotifyConnectionSucceeded()\l# NotifyConnectionFailed()\l# NotifyNormalClose()\l# NotifyErrorClose()\l# NotifyConnectionRequest()\l# NotifyNewConnectionCreated()\l# NotifyDataSent()\l# NotifySend()\l# NotifyDataRecv()\l# DoDispose()\l# IsManualIpv6Tclass()\l# IsManualIpTtl()\l# IsManualIpv6HopLimit()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/df2/classns3_1_1Socket.html",tooltip="A low-level Socket API based loosely on the BSD Socket API.A few things to keep in mind about this ty..."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node7 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node8 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node8 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node4 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node9 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #m_boundnetdevice" ,arrowhead="odiamond"];
  Node9 [label="{ns3::Ptr\< ns3::NetDevice \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node10 [label="{ns3::NetDevice\n|+ isEnbTypeForDc\l|+ ~NetDevice()\l+ SetIfIndex()\l+ GetIfIndex()\l+ GetChannel()\l+ SetAddress()\l+ GetAddress()\l+ SetMtu()\l+ GetMtu()\l+ IsLinkUp()\l+ AddLinkChangeCallback()\land 15 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dac/classns3_1_1NetDevice.html",tooltip="Network layer to device interface. "];
  Node4 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #m_ipv6MulticastGroupAddress" ,arrowhead="odiamond"];
  Node11 [label="{ns3::Ipv6Address\n|- m_address\l|+ Ipv6Address()\l+ Ipv6Address()\l+ Ipv6Address()\l+ Ipv6Address()\l+ Ipv6Address()\l+ ~Ipv6Address()\l+ Set()\l+ Set()\l+ IsEqual()\l+ Serialize()\land 16 more...\l+ Deserialize()\l+ MakeSolicitedAddress()\l+ MakeIpv4MappedAddress()\l+ MakeAutoconfiguredAddress()\l+ MakeAutoconfiguredAddress()\l+ MakeAutoconfiguredAddress()\l+ MakeAutoconfiguredLinkLocal\lAddress()\l+ MakeAutoconfiguredLinkLocal\lAddress()\l+ MakeAutoconfiguredLinkLocal\lAddress()\l+ IsMatchingType()\land 8 more...\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de6/classns3_1_1Ipv6Address.html",tooltip="Describes an IPv6 address. "];
  Node12 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_newConnectionCreated" ,arrowhead="odiamond"];
  Node12 [label="{ns3::Callback\< void,\l ns3::Ptr\< ns3::Socket\l \>, const ns3::Address & \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 [label="{ns3::CallbackBase\n||+ CallbackBase()\l+ GetImpl()\l# CallbackBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1CallbackBase.html"];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" #m_impl" ,arrowhead="odiamond"];
  Node14 [label="{ns3::Ptr\< ns3::CallbackImpl\lBase \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node15 [label="{ns3::CallbackImplBase\n||+ ~CallbackImplBase()\l+ IsEqual()\l+ GetTypeid()\l# Demangle()\l# GetCppTypeid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dfa/classns3_1_1CallbackImplBase.html"];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 [label="{ns3::SimpleRefCount\l\< CallbackImplBase \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node17 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node18 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_sendCb\n-m_dataSent" ,arrowhead="odiamond"];
  Node18 [label="{ns3::Callback\< void,\l ns3::Ptr\< ns3::Socket\l \>, uint32_t \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node19 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_connectionSucceeded\n-m_normalClose\n-m_receivedData\n-m_errorClose\n-m_connectionFailed" ,arrowhead="odiamond"];
  Node19 [label="{ns3::Callback\< void,\l ns3::Ptr\< ns3::Socket \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_connectionRequest" ,arrowhead="odiamond"];
  Node20 [label="{ns3::Callback\< bool,\l ns3::Ptr\< ns3::Socket\l \>, const ns3::Address & \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_nscTcpSocket" ,arrowhead="odiamond"];
  Node21 [label="{INetStreamSocket\n||+ ~INetStreamSocket()\l+ connect()\l+ disconnect()\l+ listen()\l+ accept()\l+ send_data()\l+ read_data()\l+ setsockopt()\l+ print_state()\l+ is_connected()\l+ is_listening()\l+ getpeername()\l+ getsockname()\l+ get_var()\l+ set_var()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d0d/structINetStreamSocket.html",tooltip="Struct interface to NSC Stream (i.e., TCP) Sockets. "];
  Node22 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_peerAddress" ,arrowhead="odiamond"];
  Node22 [label="{ns3::InetSocketAddress\n|- m_port\l- m_tos\l|+ InetSocketAddress()\l+ InetSocketAddress()\l+ InetSocketAddress()\l+ InetSocketAddress()\l+ InetSocketAddress()\l+ GetPort()\l+ GetIpv4()\l+ GetTos()\l+ SetPort()\l+ SetIpv4()\l+ SetTos()\l+ operator Address()\l+ IsMatchingType()\l+ ConvertFrom()\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/dfc/classns3_1_1InetSocketAddress.html",tooltip="an Inet address class "];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_ipv4" ,arrowhead="odiamond"];
  Node23 [label="{ns3::Ipv4Address\n|- m_address\l|+ Ipv4Address()\l+ Ipv4Address()\l+ Ipv4Address()\l+ Get()\l+ Set()\l+ Set()\l+ IsEqual()\l+ Serialize()\l+ Print()\l+ IsAny()\land 8 more...\l+ Deserialize()\l+ IsMatchingType()\l+ ConvertFrom()\l+ GetZero()\l+ GetAny()\l+ GetBroadcast()\l+ GetLoopback()\l- ConvertTo()\l- GetType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d55/classns3_1_1Ipv4Address.html",tooltip="Ipv4 addresses are stored in host order in this class. "];
  Node24 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_state" ,arrowhead="odiamond"];
  Node24 [label="{ns3::TracedValue\< TcpStates_t \>\n|- m_v\l|+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ operator TcpStates_t()\l+ operator=()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ Set()\l+ Get()\l+ operator++()\l+ operator++()\l+ operator--()\l+ operator--()\l* operator++()\l* operator++()\l* operator--()\l* operator--()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d97/classns3_1_1TracedValue.html"];
  Node25 -> Node24 [color="grey25",fontsize="10",style="solid",label=" -m_cb" ,arrowhead="odiamond"];
  Node25 [label="{ns3::TracedCallback\l\< TcpStates_t, TcpStates_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node26 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node26 [label="{ns3::Ptr\< ns3::Node \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node27 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node27 [label="{ns3::Node\n|- m_id\l- m_sid\l- m_devices\l- m_applications\l- m_handlers\l- m_deviceAdditionListeners\l|+ Node()\l+ Node()\l+ ~Node()\l+ GetId()\l+ GetLocalTime()\l+ GetSystemId()\l+ AddDevice()\l+ GetDevice()\l+ GetNDevices()\l+ AddApplication()\land 6 more...\l+ GetTypeId()\l+ ChecksumEnabled()\l# DoDispose()\l# DoInitialize()\l- NotifyDeviceAdded()\l- NonPromiscReceiveFromDevice()\l- PromiscReceiveFromDevice()\l- ReceiveFromDevice()\l- Construct()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/ded/classns3_1_1Node.html",tooltip="A network Node. "];
  Node4 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node28 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_cnTimeout\n-m_lastMeasuredRtt\n-m_delAckTimeout\n-m_persistTimeout" ,arrowhead="odiamond"];
  Node28 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node23 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_localAddress\n-m_remoteAddress" ,arrowhead="odiamond"];
  Node29 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_endPoint" ,arrowhead="odiamond"];
  Node29 [label="{ns3::Ipv4EndPoint\n|- m_localPort\l- m_peerPort\l- m_rxEnabled\l|+ Ipv4EndPoint()\l+ ~Ipv4EndPoint()\l+ GetLocalAddress()\l+ SetLocalAddress()\l+ GetLocalPort()\l+ GetPeerAddress()\l+ GetPeerPort()\l+ SetPeer()\l+ BindToNetDevice()\l+ GetBoundNetDevice()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d51/classns3_1_1Ipv4EndPoint.html",tooltip="A representation of an internet endpoint/connection. "];
  Node30 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_icmpCallback" ,arrowhead="odiamond"];
  Node30 [label="{ns3::Callback\< void,\l ns3::Ipv4Address, uint8\l_t, uint8_t, uint8_t, uint32_t \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node31 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_rxCallback" ,arrowhead="odiamond"];
  Node31 [label="{ns3::Callback\< void,\l ns3::Ptr\< ns3::Packet\l \>, ns3::Ipv4Header, uint16\l_t, ns3::Ptr\< ns3::Ipv4Interface \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_boundnetdevice" ,arrowhead="odiamond"];
  Node32 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_destroyCallback" ,arrowhead="odiamond"];
  Node32 [label="{ns3::Callback\< void \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node23 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_localAddr\n-m_peerAddr" ,arrowhead="odiamond"];
  Node33 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_tcp" ,arrowhead="odiamond"];
  Node33 [label="{ns3::Ptr\< ns3::NscTcpL4Protocol \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node34 -> Node33 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node34 [label="{ns3::NscTcpL4Protocol\n|+ PROT_NUMBER\l- m_dlopenHandle\l- m_nscLibrary\l- m_sockets\l|+ NscTcpL4Protocol()\l+ ~NscTcpL4Protocol()\l+ SetNode()\l+ SetNscLibrary()\l+ GetNscLibrary()\l+ GetProtocolNumber()\l+ GetVersion()\l+ CreateSocket()\l+ Allocate()\l+ Allocate()\land 10 more...\l+ GetTypeId()\l# DoDispose()\l# NotifyNewAggregate()\l- NscTcpL4Protocol()\l- operator=()\l- send_callback()\l- wakeup()\l- gettime()\l- AddInterface()\l- SoftInterrupt()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/dfe/classns3_1_1NscTcpL4Protocol.html",tooltip="Nsc wrapper glue, to interface with the Ipv4 protocol underneath. "];
  Node35 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node35 [label="{ns3::IpL4Protocol\n||+ ~IpL4Protocol()\l+ GetProtocolNumber()\l+ Receive()\l+ Receive()\l+ ReceiveIcmp()\l+ ReceiveIcmp()\l+ SetDownTarget()\l+ SetDownTarget6()\l+ GetDownTarget()\l+ GetDownTarget6()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/da5/classns3_1_1IpL4Protocol.html",tooltip="L4 Protocol abstract base class. "];
  Node4 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node26 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -m_node" ,arrowhead="odiamond"];
  Node36 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -m_nscInterface" ,arrowhead="odiamond"];
  Node36 [label="{ns3::NscInterfaceImpl\n||+ NscInterfaceImpl()\l- send_callback()\l- wakeup()\l- gettime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d04/classns3_1_1NscInterfaceImpl.html",tooltip="Nsc interface implementation class. "];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node37 [label="{ISendCallback\n||+ ~ISendCallback()\l+ send_callback()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d9d/structISendCallback.html",tooltip="Struct interface to NSC send capabilities. "];
  Node38 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node38 [label="{IInterruptCallback\n||+ ~IInterruptCallback()\l+ wakeup()\l+ gettime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dd7/structIInterruptCallback.html",tooltip="Struct interface to NSC soft interrupt capabilities. "];
  Node33 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -m_prot" ,arrowhead="odiamond"];
  Node39 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -m_nscStack" ,arrowhead="odiamond"];
  Node39 [label="{INetStack\n||+ ~INetStack()\l+ init()\l+ if_receive_packet()\l+ if_send_packet()\l+ if_send_finish()\l+ if_attach()\l+ add_default_gateway()\l+ get_id()\l+ get_name()\l+ get_hz()\land 15 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d49/structINetStack.html",tooltip="Struct interface to NSC stack. "];
  Node40 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -m_downTarget" ,arrowhead="odiamond"];
  Node40 [label="{ns3::Callback\< void,\l Ptr\< Packet \>, Ipv4Address,\l Ipv4Address, uint8_t, Ptr\l\< Ipv4Route \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node13 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node41 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -m_endPoints" ,arrowhead="odiamond"];
  Node41 [label="{ns3::Ipv4EndPointDemux\n|- m_ephemeral\l- m_portLast\l- m_portFirst\l- m_endPoints\l|+ Ipv4EndPointDemux()\l+ ~Ipv4EndPointDemux()\l+ GetAllEndPoints()\l+ LookupPortLocal()\l+ LookupLocal()\l+ Lookup()\l+ SimpleLookup()\l+ Allocate()\l+ Allocate()\l+ Allocate()\l+ Allocate()\l+ Allocate()\l+ DeAllocate()\l- AllocateEphemeralPort()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d61/classns3_1_1Ipv4EndPointDemux.html",tooltip="Demultiplexes packets to various transport layer endpoints. "];
  Node42 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -m_softTimer" ,arrowhead="odiamond"];
  Node42 [label="{ns3::Timer\n|- m_flags\l|+ Timer()\l+ Timer()\l+ ~Timer()\l+ SetFunction()\l+ SetFunction()\l+ SetArguments()\l+ SetArguments()\l+ SetArguments()\l+ SetArguments()\l+ SetArguments()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d3e/classns3_1_1Timer.html",tooltip="A simple Timer class. "];
  Node43 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_event" ,arrowhead="odiamond"];
  Node43 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node44 -> Node43 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node44 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node45 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node45 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node46 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node46 [label="{ns3::SimpleRefCount\l\< EventImpl \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node17 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node28 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_delayLeft\n-m_delay" ,arrowhead="odiamond"];
  Node47 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_impl" ,arrowhead="odiamond"];
  Node47 [label="{ns3::TimerImpl\n||+ ~TimerImpl()\l+ Schedule()\l+ Invoke()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l+ SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l* SetArgs()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d2f/classns3_1_1TimerImpl.html"];
  Node48 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_cWnd\n-m_ssThresh" ,arrowhead="odiamond"];
  Node48 [label="{ns3::TracedValue\< uint32_t \>\n|- m_v\l|+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ TracedValue()\l+ operator uint32_t()\l+ operator=()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ Set()\l+ Get()\l+ operator++()\l+ operator++()\l+ operator--()\l+ operator--()\l* operator++()\l* operator++()\l* operator--()\l* operator--()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d97/classns3_1_1TracedValue.html"];
  Node49 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -m_cb" ,arrowhead="odiamond"];
  Node49 [label="{ns3::TracedCallback\l\< uint32_t, uint32_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
}
