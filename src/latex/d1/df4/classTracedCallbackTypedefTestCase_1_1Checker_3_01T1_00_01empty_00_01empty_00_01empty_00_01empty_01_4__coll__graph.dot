digraph "TracedCallbackTypedefTestCase::Checker&lt; T1, empty, empty, empty, empty &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{TracedCallbackTypedefTest\lCase::Checker\< T1, empty,\l empty, empty, empty \>\n||+ Invoke()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{TracedCallbackTypedefTest\lCase::CheckerBase\< T1,\l empty, empty, empty, empty \>\n||+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d9e/classTracedCallbackTypedefTestCase_1_1CheckerBase.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{Object\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +m1" ,arrowhead="odiamond"];
  Node4 [label="{TypeTraits\< T1 \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/da2/structTypeTraits.html"];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +m2\n+m3\n+m4\n+m5" ,arrowhead="odiamond"];
  Node5 [label="{TypeTraits\< empty \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/da2/structTypeTraits.html"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_cb" ,arrowhead="odiamond"];
  Node6 [label="{ns3::TracedCallback\l\< T1 \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
}
