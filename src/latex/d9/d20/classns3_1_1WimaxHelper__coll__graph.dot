digraph "ns3::WimaxHelper"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::WimaxHelper\n||+ WimaxHelper()\l+ ~WimaxHelper()\l+ CreatePhy()\l+ CreateUplinkScheduler()\l+ CreateBSScheduler()\l+ Install()\l+ Install()\l+ Install()\l+ SetPropagationLossModel()\l+ CreatePhyWithoutChannel()\land 6 more...\l+ EnableAsciiForConnection()\l+ EnableLogComponents()\l- EnablePcapInternal()\l- EnableAsciiInternal()\l- AsciiRxEvent()\l- AsciiTxEvent()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::PcapHelperForDevice\n||+ PcapHelperForDevice()\l+ ~PcapHelperForDevice()\l+ EnablePcapInternal()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcap()\l+ EnablePcapAll()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d03/classns3_1_1PcapHelperForDevice.html",tooltip="Base class providing common user-level pcap operations for helpers representing net devices..."];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::AsciiTraceHelperFor\lDevice\n||+ AsciiTraceHelperForDevice()\l+ ~AsciiTraceHelperForDevice()\l+ EnableAsciiInternal()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAscii()\l+ EnableAsciiAll()\l+ EnableAsciiAll()\l+ EnableAscii()\l+ EnableAscii()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l- EnableAsciiImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/daf/classns3_1_1AsciiTraceHelperForDevice.html",tooltip="Base class providing common user-level ascii trace operations for helpers representing net devices..."];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_channel" ,arrowhead="odiamond"];
  Node4 [label="{ns3::Ptr\< ns3::WimaxChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node5 [label="{ns3::WimaxChannel\n||+ WimaxChannel()\l+ ~WimaxChannel()\l+ Attach()\l+ GetNDevices()\l+ GetDevice()\l+ AssignStreams()\l+ GetTypeId()\l- DoAttach()\l- DoGetNDevices()\l- DoGetDevice()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d3a/classns3_1_1WimaxChannel.html"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::Channel\n|- m_id\l|+ Channel()\l+ ~Channel()\l+ GetId()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d67/classns3_1_1Channel.html",tooltip="Abstract Channel Base Class. "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node10 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node10 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node11 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node11 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node7 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
}
