digraph "ns3::MobilityModel"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::MobilityModel\n|- m_courseChangeTrace\l|+ MobilityModel()\l+ ~MobilityModel()\l+ GetPosition()\l+ SetPosition()\l+ GetVelocity()\l+ GetDistanceFrom()\l+ GetRelativeSpeed()\l+ AssignStreams()\l+ GetTypeId()\l# NotifyCourseChange()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ConstantAcceleration\lMobilityModel\n|- m_baseTime\l- m_basePosition\l- m_baseVelocity\l- m_acceleration\l|+ ConstantAccelerationMobility\lModel()\l+ ~ConstantAccelerationMobility\lModel()\l+ SetVelocityAndAcceleration()\l+ GetTypeId()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d36/classns3_1_1ConstantAccelerationMobilityModel.html",tooltip="Mobility model for which the current acceleration does not change once it has been set and until it i..."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::ConstantPositionMobility\lModel\n|- m_position\l|+ ConstantPositionMobility\lModel()\l+ ~ConstantPositionMobility\lModel()\l+ GetTypeId()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d91/classns3_1_1ConstantPositionMobilityModel.html",tooltip="Mobility model for which the current position does not change once it has been set and until it is se..."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::ConstantVelocityMobility\lModel\n|- m_helper\l|+ ConstantVelocityMobility\lModel()\l+ ~ConstantVelocityMobility\lModel()\l+ SetVelocity()\l+ GetTypeId()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dc3/classns3_1_1ConstantVelocityMobilityModel.html",tooltip="Mobility model for which the current speed does not change once it has been set and until it is set a..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::GaussMarkovMobility\lModel\n|- m_helper\l- m_timeStep\l- m_alpha\l- m_meanVelocity\l- m_meanDirection\l- m_meanPitch\l- m_Velocity\l- m_Direction\l- m_Pitch\l- m_rndMeanVelocity\land 7 more...\l|+ GaussMarkovMobilityModel()\l+ GetTypeId()\l- Start()\l- DoWalk()\l- DoDispose()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dd2/classns3_1_1GaussMarkovMobilityModel.html",tooltip="Gauss-Markov mobility model. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::HierarchicalMobility\lModel\n|- m_child\l- m_parent\l|+ HierarchicalMobilityModel()\l+ GetChild()\l+ GetParent()\l+ SetChild()\l+ SetParent()\l+ GetTypeId()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- ParentChanged()\l- ChildChanged()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d44/classns3_1_1HierarchicalMobilityModel.html",tooltip="Hierarchical mobility model. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::RandomDirection2dMobility\lModel\n|- m_direction\l- m_bounds\l- m_speed\l- m_pause\l- m_event\l- m_helper\l|+ RandomDirection2dMobility\lModel()\l+ GetTypeId()\l- ResetDirectionAndSpeed()\l- BeginPause()\l- SetDirectionAndSpeed()\l- DoInitializePrivate()\l- DoDispose()\l- DoInitialize()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d1a/classns3_1_1RandomDirection2dMobilityModel.html",tooltip="Random direction mobility model. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::RandomWalk2dMobility\lModel\n|- m_helper\l- m_event\l- m_mode\l- m_modeDistance\l- m_modeTime\l- m_speed\l- m_direction\l- m_bounds\l|+ GetTypeId()\l- Rebound()\l- DoWalk()\l- DoInitializePrivate()\l- DoDispose()\l- DoInitialize()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d99/classns3_1_1RandomWalk2dMobilityModel.html",tooltip="2D random walk mobility model. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::RandomWaypointMobility\lModel\n|- m_helper\l- m_position\l- m_speed\l- m_pause\l- m_event\l|+ GetTypeId()\l# DoInitialize()\l- BeginWalk()\l- DoInitializePrivate()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d09/classns3_1_1RandomWaypointMobilityModel.html",tooltip="Random waypoint mobility model. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 [label="{ns3::SteadyStateRandomWaypoint\lMobilityModel\n|- m_helper\l- m_maxSpeed\l- m_minSpeed\l- m_speed\l- m_minX\l- m_maxX\l- m_minY\l- m_maxY\l- m_z\l- m_position\land 12 more...\l|+ SteadyStateRandomWaypoint\lMobilityModel()\l+ GetTypeId()\l# DoInitialize()\l- DoInitializePrivate()\l- SteadyStateBeginWalk()\l- Start()\l- BeginWalk()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d91/classns3_1_1SteadyStateRandomWaypointMobilityModel.html",tooltip="Steady-state random waypoint mobility model. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::WaypointMobilityModel\n|- m_first\l- m_lazyNotify\l- m_initialPositionIsWaypoint\l- m_waypoints\l- m_current\l- m_next\l- m_velocity\l|+ WaypointMobilityModel()\l+ ~WaypointMobilityModel()\l+ AddWaypoint()\l+ GetNextWaypoint()\l+ WaypointsLeft()\l+ EndMobility()\l+ GetTypeId()\l- Update()\l- DoDispose()\l- DoGetPosition()\l- DoSetPosition()\l- DoGetVelocity()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d89/classns3_1_1WaypointMobilityModel.html",tooltip="Waypoint-based mobility model. "];
}
