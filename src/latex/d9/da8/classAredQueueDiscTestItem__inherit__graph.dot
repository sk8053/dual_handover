digraph "AredQueueDiscTestItem"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{AredQueueDiscTestItem\n||+ AredQueueDiscTestItem()\l+ ~AredQueueDiscTestItem()\l+ AddHeader()\l+ Mark()\l- AredQueueDiscTestItem()\l- AredQueueDiscTestItem()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::QueueDiscItem\n|- m_address\l- m_protocol\l- m_txq\l|+ QueueDiscItem()\l+ ~QueueDiscItem()\l+ GetAddress()\l+ GetProtocol()\l+ GetTxQueueIndex()\l+ SetTxQueueIndex()\l+ AddHeader()\l+ Print()\l+ Mark()\l- QueueDiscItem()\l- QueueDiscItem()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d5c/classns3_1_1QueueDiscItem.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::QueueItem\n|- m_packet\l|+ QueueItem()\l+ ~QueueItem()\l+ GetPacket()\l+ GetSize()\l+ GetUint8Value()\l+ Print()\l- QueueItem()\l- QueueItem()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d7b/classns3_1_1QueueItem.html",tooltip="Base class to represent items of packet Queues. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< QueueItem \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
}
