digraph "ns3::Icmpv6DestinationUnreachable"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::Icmpv6DestinationUnreachable\n||+ Icmpv6DestinationUnreachable()\l+ ~Icmpv6DestinationUnreachable()\l+ GetInstanceTypeId()\l+ GetPacket()\l+ SetPacket()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Icmpv6Header\n|# m_calcChecksum\l# m_checksum\l- m_type\l- m_code\l|+ GetInstanceTypeId()\l+ Icmpv6Header()\l+ ~Icmpv6Header()\l+ GetType()\l+ SetType()\l+ GetCode()\l+ SetCode()\l+ GetChecksum()\l+ SetChecksum()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ CalculatePseudoHeaderChecksum()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d73/classns3_1_1Icmpv6Header.html",tooltip="ICMPv6 header. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Header\n||+ ~Header()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dae/classns3_1_1Header.html",tooltip="Protocol header serialization and deserialization. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::Chunk\n||+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9b/classns3_1_1Chunk.html",tooltip="abstract base class for ns3::Header and ns3::Trailer "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_packet" ,arrowhead="odiamond"];
  Node6 [label="{ns3::Ptr\< ns3::Packet \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Packet\n|- m_globalUid\l|+ Packet()\l+ Packet()\l+ operator=()\l+ Packet()\l+ Packet()\l+ Packet()\l+ CreateFragment()\l+ GetSize()\l+ AddHeader()\l+ RemoveHeader()\land 31 more...\l+ EnablePrinting()\l+ EnableChecking()\l- Packet()\l- Deserialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d7a/classns3_1_1Packet.html",tooltip="network packets "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::SimpleRefCount\l\< Packet \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node10 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_nixVector" ,arrowhead="odiamond"];
  Node10 [label="{ns3::Ptr\< ns3::NixVector \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node11 [label="{ns3::NixVector\n|- m_nixVector\l- m_used\l- m_currentVectorBitSize\l- m_totalBitSize\l|+ NixVector()\l+ ~NixVector()\l+ Copy()\l+ NixVector()\l+ operator=()\l+ AddNeighborIndex()\l+ ExtractNeighborIndex()\l+ GetRemainingBits()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ BitCount()\l- DumpNixVector()\l- PrintDec2BinNixFill()\l- PrintDec2BinNix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d44/classns3_1_1NixVector.html",tooltip="Neighbor-index data structure for nix-vector routing. "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::SimpleRefCount\l\< NixVector \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node9 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_metadata" ,arrowhead="odiamond"];
  Node13 [label="{ns3::PacketMetadata\n|- m_head\l- m_tail\l- m_used\l- m_packetUid\l- m_enable\l- m_enableChecking\l- m_metadataSkipped\l- m_maxSize\l- m_chunkUid\l|+ PacketMetadata()\l+ PacketMetadata()\l+ operator=()\l+ ~PacketMetadata()\l+ AddHeader()\l+ RemoveHeader()\l+ AddTrailer()\l+ RemoveTrailer()\l+ CreateFragment()\l+ AddAtEnd()\land 8 more...\l+ Enable()\l+ EnableChecking()\l- DataFreeList::~DataFreeList()\l- PacketMetadata()\l- AddSmall()\l- AddBig()\l- ReplaceTail()\l- UpdateHead()\l- UpdateTail()\l- GetUleb128Size()\l- ReadUleb128()\l- Append16()\land 11 more...\l- AddToRawU8()\l- AddToRawU16()\l- AddToRawU32()\l- AddToRawU64()\l- AddToRaw()\l- ReadFromRawU8()\l- ReadFromRawU16()\l- ReadFromRawU32()\l- ReadFromRawU64()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/db1/classns3_1_1PacketMetadata.html",tooltip="Handle packet metadata about packet headers and trailers. "];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node14 [label="{ns3::PacketMetadata\l::Data\n|+ m_count\l+ m_size\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d9c/structns3_1_1PacketMetadata_1_1Data.html"];
  Node15 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -m_freeList" ,arrowhead="odiamond"];
  Node15 [label="{ns3::PacketMetadata\l::DataFreeList\n||+ ~DataFreeList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/df8/classns3_1_1PacketMetadata_1_1DataFreeList.html",tooltip="Class to hold all the metadata. "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 [label="{std::vector\< struct\l Data * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node17 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_byteTagList" ,arrowhead="odiamond"];
  Node17 [label="{ns3::ByteTagList\n|- m_minStart\l- m_maxEnd\l- m_adjustment\l- m_used\l|+ ByteTagList()\l+ ByteTagList()\l+ operator=()\l+ ~ByteTagList()\l+ Add()\l+ Add()\l+ RemoveAll()\l+ Begin()\l+ Adjust()\l+ AddAtEnd()\l+ AddAtStart()\l- BeginAll()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d64/classns3_1_1ByteTagList.html",tooltip="keep track of the byte tags stored in a packet. "];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node18 [label="{ns3::ByteTagListData\n|+ size\l+ count\l+ dirty\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d62/structns3_1_1ByteTagListData.html",tooltip="Internal representation of the byte tags stored in a packet. "];
  Node19 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_packetTagList" ,arrowhead="odiamond"];
  Node19 [label="{ns3::PacketTagList\n||+ PacketTagList()\l+ PacketTagList()\l+ operator=()\l+ ~PacketTagList()\l+ Add()\l+ Remove()\l+ Replace()\l+ Peek()\l+ RemoveAll()\l+ Head()\l- COWTraverse()\l- RemoveWriter()\l- ReplaceWriter()\l- CreateTagData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d19/classns3_1_1PacketTagList.html",tooltip="List of the packet tags stored in a packet. "];
  Node20 -> Node19 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
  Node20 [label="{ns3::PacketTagList\l::TagData\n|+ count\l+ size\l+ data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d03/structns3_1_1PacketTagList_1_1TagData.html"];
  Node20 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +next" ,arrowhead="odiamond"];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" +tid" ,arrowhead="odiamond"];
  Node21 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node22 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_buffer" ,arrowhead="odiamond"];
  Node22 [label="{ns3::Buffer\n|- m_maxZeroAreaStart\l- m_zeroAreaStart\l- m_zeroAreaEnd\l- m_start\l- m_end\l- g_recommendedStart\l- g_maxSize\l- g_freeList\l|+ GetSize()\l+ PeekData()\l+ AddAtStart()\l+ AddAtEnd()\l+ AddAtEnd()\l+ RemoveAtStart()\l+ RemoveAtEnd()\l+ CreateFragment()\l+ Begin()\l+ End()\land 11 more...\l- CreateFullCopy()\l- TransformIntoRealBuffer()\l- CheckInternalState()\l- Initialize()\l- GetInternalSize()\l- GetInternalEnd()\l- Recycle()\l- Create()\l- Allocate()\l- Deallocate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d85/classns3_1_1Buffer.html",tooltip="automatically resized byte buffer "];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_data" ,arrowhead="odiamond"];
  Node23 [label="{ns3::Buffer::Data\n|+ m_count\l+ m_size\l+ m_dirtyStart\l+ m_dirtyEnd\l+ m_data\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dcc/structns3_1_1Buffer_1_1Data.html"];
  Node24 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -g_localStaticDestructor" ,arrowhead="odiamond"];
  Node24 [label="{ns3::Buffer::LocalStatic\lDestructor\n||+ ~LocalStaticDestructor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/de5/structns3_1_1Buffer_1_1LocalStaticDestructor.html",tooltip="Local static destructor structure. "];
}
