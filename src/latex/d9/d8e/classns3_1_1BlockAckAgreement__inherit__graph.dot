digraph "ns3::BlockAckAgreement"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::BlockAckAgreement\n|# m_peer\l# m_amsduSupported\l# m_blockAckPolicy\l# m_tid\l# m_bufferSize\l# m_timeout\l# m_startingSeq\l# m_winEnd\l# m_htSupported\l# m_inactivityEvent\l|+ BlockAckAgreement()\l+ BlockAckAgreement()\l+ ~BlockAckAgreement()\l+ SetBufferSize()\l+ SetTimeout()\l+ SetStartingSequence()\l+ SetStartingSequenceControl()\l+ SetImmediateBlockAck()\l+ SetDelayedBlockAck()\l+ SetAmsduSupport()\land 12 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::OriginatorBlockAckAgreement\n|- m_state\l- m_sentMpdus\l- m_needBlockAckReq\l|+ OriginatorBlockAckAgreement()\l+ OriginatorBlockAckAgreement()\l+ ~OriginatorBlockAckAgreement()\l+ SetState()\l+ IsPending()\l+ IsEstablished()\l+ IsInactive()\l+ IsUnsuccessful()\l+ NotifyMpduTransmission()\l+ IsBlockAckRequestNeeded()\l+ CompleteExchange()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d73/classns3_1_1OriginatorBlockAckAgreement.html"];
}
