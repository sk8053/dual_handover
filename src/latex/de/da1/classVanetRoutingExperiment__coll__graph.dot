digraph "VanetRoutingExperiment"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{VanetRoutingExperiment\n|- m_port\l- m_CSVfileName\l- m_CSVfileName2\l- m_nSinks\l- m_protocolName\l- m_txp\l- m_traceMobility\l- m_protocol\l- m_lossModel\l- m_fading\land 40 more...\l|+ VanetRoutingExperiment()\l# SetDefaultAttributeValues()\l# ParseCommandLineArguments()\l# ConfigureNodes()\l# ConfigureChannels()\l# ConfigureDevices()\l# ConfigureMobility()\l# ConfigureApplications()\l# ConfigureTracing()\l# RunSimulation()\l# ProcessOutputs()\l- Run()\l- CommandSetup()\l- CheckThroughput()\l- SetupLogFile()\l- SetupLogging()\l- ConfigureDefaults()\l- SetupAdhocMobilityNodes()\l- SetupAdhocDevices()\l- SetupWaveMessages()\l- SetupRoutingMessages()\l- SetupScenario()\l- WriteCsvHeader()\l- SetConfigFromGlobals()\l- SetGlobalsFromConfig()\l- CourseChange()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{WifiApp\n||+ WifiApp()\l+ ~WifiApp()\l+ Simulate()\l# SetDefaultAttributeValues()\l# ParseCommandLineArguments()\l# ConfigureNodes()\l# ConfigureChannels()\l# ConfigureDevices()\l# ConfigureMobility()\l# ConfigureApplications()\l# ConfigureTracing()\l# RunSimulation()\l# ProcessOutputs()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dbc/classWifiApp.html",tooltip="The WifiApp class enforces program flow for ns-3 wifi applications. "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_adhocTxInterfaces" ,arrowhead="odiamond"];
  Node3 [label="{ns3::Ipv4InterfaceContainer\n|- m_interfaces\l|+ Ipv4InterfaceContainer()\l+ Add()\l+ Begin()\l+ End()\l+ GetN()\l+ GetAddress()\l+ SetMetric()\l+ Add()\l+ Add()\l+ Add()\l+ Get()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d02/classns3_1_1Ipv4InterfaceContainer.html",tooltip="holds a vector of std::pair of Ptr<Ipv4> and interface index. "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_waveBsmHelper" ,arrowhead="odiamond"];
  Node4 [label="{ns3::WaveBsmHelper\n|- m_txSafetyRangesSq\l- nodesMoving\l|+ WaveBsmHelper()\l+ SetAttribute()\l+ Install()\l+ Install()\l+ Install()\l+ GetWaveBsmStats()\l+ AssignStreams()\l+ GetNodesMoving()\l- InstallPriv()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d84/classns3_1_1WaveBsmHelper.html",tooltip="The WaveBsmHelper class manages IEEE 1609 WAVE (Wireless Access in Vehicular Environments) Basic Safe..."];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_waveBsmStats" ,arrowhead="odiamond"];
  Node5 [label="{ns3::WaveBsmStats\n|- m_wavePktSendCount\l- m_waveByteSendCount\l- m_wavePktReceiveCount\l- m_wavePktInCoverageReceive\lCounts\l- m_wavePktExpectedReceive\lCounts\l- m_waveTotalPktInCoverage\lReceiveCounts\l- m_waveTotalPktExpectedReceive\lCounts\l- m_log\l|+ WaveBsmStats()\l+ IncTxPktCount()\l+ GetTxPktCount()\l+ IncExpectedRxPktCount()\l+ IncRxPktCount()\l+ IncRxPktInRangeCount()\l+ GetRxPktCount()\l+ GetExpectedRxPktCount()\l+ GetRxPktInRangeCount()\l+ SetExpectedRxPktCount()\land 10 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dcc/classns3_1_1WaveBsmStats.html",tooltip="The WaveBsmStats class implements a stats collector for IEEE 1609 WAVE (Wireless Access in Vehicular ..."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node9 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node9 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node10 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node10 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node6 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node11 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_factory" ,arrowhead="odiamond"];
  Node11 [label="{ns3::ObjectFactory\n||+ ObjectFactory()\l+ ObjectFactory()\l+ Set()\l+ GetTypeId()\l+ Create()\l+ Create()\l+ SetTypeId()\l+ SetTypeId()\l+ SetTypeId()\l* SetTypeId()\l* SetTypeId()\l* SetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d0d/classns3_1_1ObjectFactory.html",tooltip="Instantiate subclasses of ns3::Object. "];
  Node9 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -m_parameters" ,arrowhead="odiamond"];
  Node12 [label="{ns3::AttributeConstructionList\n|- m_list\l|+ AttributeConstructionList()\l+ Add()\l+ Find()\l+ Begin()\l+ End()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df3/classns3_1_1AttributeConstructionList.html"];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_adhocTxDevices" ,arrowhead="odiamond"];
  Node13 [label="{ns3::NetDeviceContainer\n|- m_devices\l|+ NetDeviceContainer()\l+ NetDeviceContainer()\l+ NetDeviceContainer()\l+ NetDeviceContainer()\l+ Begin()\l+ End()\l+ GetN()\l+ Get()\l+ Add()\l+ Add()\l+ Add()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d94/classns3_1_1NetDeviceContainer.html",tooltip="holds a vector of ns3::NetDevice pointers "];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_routingHelper" ,arrowhead="odiamond"];
  Node14 [label="{ns3::Ptr\< RoutingHelper \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node15 [label="{RoutingHelper\n|- m_TotalSimTime\l- m_protocol\l- m_port\l- m_nSinks\l- m_routingTables\l- m_protocolName\l- m_log\l|+ RoutingHelper()\l+ ~RoutingHelper()\l+ Install()\l+ OnOffTrace()\l+ GetRoutingStats()\l+ SetLogging()\l+ GetTypeId()\l- SetupRoutingProtocol()\l- AssignIpAddresses()\l- SetupRoutingMessages()\l- SetupRoutingPacketReceive()\l- ReceiveRoutingPacket()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d84/classRoutingHelper.html",tooltip="The RoutingHelper class generates routing data between nodes (vehicles) and uses the RoutingStats cla..."];
  Node6 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -routingStats" ,arrowhead="odiamond"];
  Node16 [label="{RoutingStats\n|- m_RxBytes\l- m_cumulativeRxBytes\l- m_RxPkts\l- m_cumulativeRxPkts\l- m_TxBytes\l- m_cumulativeTxBytes\l- m_TxPkts\l- m_cumulativeTxPkts\l|+ RoutingStats()\l+ GetRxBytes()\l+ GetCumulativeRxBytes()\l+ GetRxPkts()\l+ GetCumulativeRxPkts()\l+ IncRxBytes()\l+ IncRxPkts()\l+ SetRxBytes()\l+ SetRxPkts()\l+ GetTxBytes()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/db3/classRoutingStats.html",tooltip="The RoutingStats class manages collects statistics on routing data (application-data packet and byte ..."];
  Node17 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_wifiPhyStats" ,arrowhead="odiamond"];
  Node17 [label="{ns3::Ptr\< WifiPhyStats \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node18 [label="{WifiPhyStats\n|- m_phyTxPkts\l- m_phyTxBytes\l|+ WifiPhyStats()\l+ ~WifiPhyStats()\l+ GetTxBytes()\l+ PhyTxTrace()\l+ PhyTxDrop()\l+ PhyRxDrop()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d3b/classWifiPhyStats.html",tooltip="The WifiPhyStats class collects Wifi MAC/PHY statistics. "];
  Node6 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node19 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_adhocTxNodes" ,arrowhead="odiamond"];
  Node19 [label="{ns3::NodeContainer\n|- m_nodes\l|+ NodeContainer()\l+ NodeContainer()\l+ NodeContainer()\l+ NodeContainer()\l+ NodeContainer()\l+ NodeContainer()\l+ NodeContainer()\l+ Begin()\l+ End()\l+ GetN()\land 6 more...\l+ GetGlobal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d97/classns3_1_1NodeContainer.html",tooltip="keep track of a set of node pointers. "];
}
