digraph "ns3::dsr::DsrRouting"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::dsr::DsrRouting\n|+ PROT_NUMBER\l# m_dropTrace\l# m_txPacketTrace\l- m_options\l- m_ipv4\l- m_ipv4Route\l- m_ip\l- m_node\l- m_mainAddress\l- segsLeft\l- m_downTarget\l- m_maxNetworkSize\l- m_maxNetworkDelay\land 68 more...\l|+ DsrRouting()\l+ ~DsrRouting()\l+ GetNode()\l+ SetNode()\l+ SetRouteCache()\l+ GetRouteCache()\l+ SetRequestTable()\l+ GetRequestTable()\l+ SetPassiveBuffer()\l+ GetPassiveBuffer()\land 62 more...\l+ IsLinkCache()\l+ UseExtends()\l+ LookupRoute()\l+ AddRoute_Link()\l+ AddRoute()\l+ DeleteAllRoutesIncludeLink()\l+ UpdateRouteEntry()\l+ FindSourceEntry()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoDispose()\l- Start()\l- SendRerrWhenBreaksLinkTo\lNextHop()\l- PromiscReceive()\l* IsLinkCache()\l* UseExtends()\l* LookupRoute()\l* AddRoute_Link()\l* AddRoute()\l* DeleteAllRoutesIncludeLink()\l* UpdateRouteEntry()\l* FindSourceEntry()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::IpL4Protocol\n||+ ~IpL4Protocol()\l+ GetProtocolNumber()\l+ Receive()\l+ Receive()\l+ ReceiveIcmp()\l+ ReceiveIcmp()\l+ SetDownTarget()\l+ SetDownTarget6()\l+ GetDownTarget()\l+ GetDownTarget6()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/da5/classns3_1_1IpL4Protocol.html",tooltip="L4 Protocol abstract base class. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
}
