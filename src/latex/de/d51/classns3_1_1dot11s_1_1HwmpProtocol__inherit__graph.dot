digraph "ns3::dot11s::HwmpProtocol"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::dot11s::HwmpProtocol\n|- m_routeDiscoveryTimeCallback\l- m_routeChangeTraceSource\l- m_rtable\l- m_preqTimeouts\l- m_proactivePreqTimer\l- m_randomStart\l- m_rqueue\l- m_coefficient\l- m_neighboursCallback\l- m_lastDataSeqno\l- m_hwmpSeqnoMetricDatabase\l- m_maxQueueSize\l- m_dot11MeshHWMPmaxPREQretries\l- m_dot11MeshHWMPnetDiameter\lTraversalTime\l- m_dot11MeshHWMPpreqMinInterval\l- m_dot11MeshHWMPperrMinInterval\l- m_dot11MeshHWMPactiveRoot\lTimeout\l- m_dot11MeshHWMPactivePath\lTimeout\l- m_dot11MeshHWMPpathToRoot\lInterval\l- m_dot11MeshHWMPrannInterval\l- m_isRoot\land 6 more...\l|+ HwmpProtocol()\l+ ~HwmpProtocol()\l+ DoDispose()\l+ RequestRoute()\l+ RemoveRoutingStuff()\l+ Install()\l+ PeerLinkStatus()\l+ SetNeighboursCallback()\l+ Report()\l+ ResetStats()\l+ AssignStreams()\l+ GetRoutingTable()\l+ SetRoot()\l+ UnsetRoot()\l+ GetTypeId()\l- DoInitialize()\l- operator=()\l- HwmpProtocol()\l- ForwardUnicast()\l- GetAddress()\l- ReceivePreq()\l- ReceivePrep()\l- ReceivePerr()\l- SendPrep()\l- MakePathError()\l- ForwardPathError()\l- InitiatePathError()\l- GetPerrReceivers()\l- GetPreqReceivers()\l- GetBroadcastReceivers()\l- DropDataFrame()\l- QueuePacket()\l- DequeueFirstPacketByDst()\l- DequeueFirstPacket()\l- ReactivePathResolved()\l- ProactivePathResolved()\l- ShouldSendPreq()\l- RetryPathDiscovery()\l- SendProactivePreq()\l* m_stats\l* m_interfaces\l* m_address\l* m_dataSeqno\l* m_hwmpSeqno\l* m_preqId\l* GetDoFlag()\l* GetRfFlag()\l* GetPreqMinInterval()\l* GetPerrMinInterval()\l* GetMaxTtl()\l* GetNextPreqId()\l* GetNextHwmpSeqno()\l* GetActivePathLifetime()\l* GetUnicastPerrThreshold()\l* m_lastDataSeqno\l* m_hwmpSeqnoMetricDatabase\l* m_maxQueueSize\l* m_dot11MeshHWMPmaxPREQretries\l* m_dot11MeshHWMPnetDiameter\lTraversalTime\l* m_dot11MeshHWMPpreqMinInterval\l* m_dot11MeshHWMPperrMinInterval\l* m_dot11MeshHWMPactiveRoot\lTimeout\l* m_dot11MeshHWMPactivePath\lTimeout\l* m_dot11MeshHWMPpathToRoot\lInterval\l* m_dot11MeshHWMPrannInterval\l* m_isRoot\land 6 more...\l* SetRoot()\l* UnsetRoot()\l* ReceivePreq()\l* ReceivePrep()\l* ReceivePerr()\l* SendPrep()\l* MakePathError()\l* ForwardPathError()\l* InitiatePathError()\l* GetPerrReceivers()\l* GetPreqReceivers()\l* GetBroadcastReceivers()\l* DropDataFrame()\l* QueuePacket()\l* DequeueFirstPacketByDst()\l* DequeueFirstPacket()\l* ReactivePathResolved()\l* ProactivePathResolved()\l* ShouldSendPreq()\l* RetryPathDiscovery()\l* SendProactivePreq()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::MeshL2RoutingProtocol\n|# m_mp\l|+ ~MeshL2RoutingProtocol()\l+ RequestRoute()\l+ RemoveRoutingStuff()\l+ SetMeshPoint()\l+ GetMeshPoint()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d91/classns3_1_1MeshL2RoutingProtocol.html",tooltip="Interface for L2 mesh routing protocol and mesh point communication. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
}
