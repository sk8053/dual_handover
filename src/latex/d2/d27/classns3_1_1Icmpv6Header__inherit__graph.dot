digraph "ns3::Icmpv6Header"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::Icmpv6Header\n|# m_calcChecksum\l# m_checksum\l- m_type\l- m_code\l|+ GetInstanceTypeId()\l+ Icmpv6Header()\l+ ~Icmpv6Header()\l+ GetType()\l+ SetType()\l+ GetCode()\l+ SetCode()\l+ GetChecksum()\l+ SetChecksum()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ CalculatePseudoHeaderChecksum()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Header\n||+ ~Header()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dae/classns3_1_1Header.html",tooltip="Protocol header serialization and deserialization. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Chunk\n||+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9b/classns3_1_1Chunk.html",tooltip="abstract base class for ns3::Header and ns3::Trailer "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::Icmpv6DestinationUnreachable\n|- m_packet\l|+ Icmpv6DestinationUnreachable()\l+ ~Icmpv6DestinationUnreachable()\l+ GetInstanceTypeId()\l+ GetPacket()\l+ SetPacket()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/deb/classns3_1_1Icmpv6DestinationUnreachable.html",tooltip="ICMPv6 Error Destination Unreachable header. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::Icmpv6Echo\n|- m_id\l- m_seq\l|+ GetInstanceTypeId()\l+ Icmpv6Echo()\l+ Icmpv6Echo()\l+ ~Icmpv6Echo()\l+ GetId()\l+ SetId()\l+ GetSeq()\l+ SetSeq()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5b/classns3_1_1Icmpv6Echo.html",tooltip="ICMPv6 Echo message. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::Icmpv6NA\n|- m_flagR\l- m_flagS\l- m_flagO\l- m_reserved\l- m_target\l|+ Icmpv6NA()\l+ ~Icmpv6NA()\l+ GetInstanceTypeId()\l+ GetReserved()\l+ SetReserved()\l+ GetIpv6Target()\l+ SetIpv6Target()\l+ GetFlagR()\l+ SetFlagR()\l+ GetFlagS()\land 7 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/de8/classns3_1_1Icmpv6NA.html",tooltip="ICMPv6 Neighbor Advertisement header. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::Icmpv6NS\n|- m_reserved\l- m_target\l|+ Icmpv6NS()\l+ Icmpv6NS()\l+ ~Icmpv6NS()\l+ GetInstanceTypeId()\l+ GetReserved()\l+ SetReserved()\l+ GetIpv6Target()\l+ SetIpv6Target()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/da5/classns3_1_1Icmpv6NS.html",tooltip="ICMPv6 Neighbor Solicitation header. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::Icmpv6ParameterError\n|- m_packet\l- m_ptr\l|+ Icmpv6ParameterError()\l+ ~Icmpv6ParameterError()\l+ GetInstanceTypeId()\l+ GetPacket()\l+ SetPacket()\l+ GetPtr()\l+ SetPtr()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/dd7/classns3_1_1Icmpv6ParameterError.html",tooltip="ICMPv6 Error Parameter Error header. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::Icmpv6RA\n|- m_flagM\l- m_flagO\l- m_flagH\l- m_flags\l- m_LifeTime\l- m_ReachableTime\l- m_RetransmissionTimer\l- m_curHopLimit\l|+ Icmpv6RA()\l+ ~Icmpv6RA()\l+ GetInstanceTypeId()\l+ SetCurHopLimit()\l+ GetCurHopLimit()\l+ SetLifeTime()\l+ GetLifeTime()\l+ SetReachableTime()\l+ GetReachableTime()\l+ SetRetransmissionTime()\land 13 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d73/classns3_1_1Icmpv6RA.html",tooltip="ICMPv6 Router Advertisement header. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::Icmpv6Redirection\n|- m_target\l- m_destination\l- m_reserved\l|+ Icmpv6Redirection()\l+ ~Icmpv6Redirection()\l+ GetInstanceTypeId()\l+ GetTarget()\l+ SetTarget()\l+ GetDestination()\l+ SetDestination()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetReserved()\l+ SetReserved()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/da3/classns3_1_1Icmpv6Redirection.html",tooltip="ICMPv6 Redirection header. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 [label="{ns3::Icmpv6RS\n|- m_reserved\l|+ Icmpv6RS()\l+ ~Icmpv6RS()\l+ GetInstanceTypeId()\l+ GetReserved()\l+ SetReserved()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d2f/classns3_1_1Icmpv6RS.html",tooltip="ICMPv6 Router Solicitation header. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node13 [label="{ns3::Icmpv6TimeExceeded\n|- m_packet\l|+ Icmpv6TimeExceeded()\l+ ~Icmpv6TimeExceeded()\l+ GetInstanceTypeId()\l+ GetPacket()\l+ SetPacket()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/db1/classns3_1_1Icmpv6TimeExceeded.html",tooltip="ICMPv6 Error Time Exceeded header. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 [label="{ns3::Icmpv6TooBig\n|- m_packet\l- m_mtu\l|+ Icmpv6TooBig()\l+ ~Icmpv6TooBig()\l+ GetInstanceTypeId()\l+ GetPacket()\l+ SetPacket()\l+ GetMtu()\l+ SetMtu()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d1b/classns3_1_1Icmpv6TooBig.html",tooltip="ICMPv6 Error Too Big header. "];
}
