digraph "ns3::ServiceFlowManager"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::ServiceFlowManager\n|- m_serviceFlows\l|+ ServiceFlowManager()\l+ ~ServiceFlowManager()\l+ DoDispose()\l+ AddServiceFlow()\l+ GetServiceFlow()\l+ GetServiceFlow()\l+ GetServiceFlows()\l+ AreServiceFlowsAllocated()\l+ AreServiceFlowsAllocated()\l+ AreServiceFlowsAllocated()\l+ GetNextServiceFlowToAllocate()\l+ GetNrServiceFlows()\l+ DoClassify()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::BsServiceFlowManager\n|- m_device\l- m_sfidIndex\l- m_maxDsaRspRetries\l- m_dsaAckTimeoutEvent\l- m_inuseScheduleDsaRspCid\l|+ BsServiceFlowManager()\l+ ~BsServiceFlowManager()\l+ DoDispose()\l+ AddServiceFlow()\l+ GetServiceFlow()\l+ GetServiceFlow()\l+ GetServiceFlows()\l+ SetMaxDsaRspRetries()\l+ GetDsaAckTimeoutEvent()\l+ AllocateServiceFlows()\l+ AddMulticastServiceFlow()\l+ ProcessDsaAck()\l+ ProcessDsaReq()\l+ GetTypeId()\l- CreateDsaRsp()\l- GetMaxDsaRspRetries()\l- ScheduleDsaRsp()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5e/classns3_1_1BsServiceFlowManager.html",tooltip="BsServiceFlowManager. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::SsServiceFlowManager\n|- m_device\l- m_maxDsaReqRetries\l- m_dsaRspTimeoutEvent\l- m_dsaAckTimeoutEvent\l- m_dsaReq\l- m_dsaAck\l- m_currentTransactionId\l- m_transactionIdIndex\l- m_dsaReqRetries\l- m_pendingServiceFlow\l|+ SsServiceFlowManager()\l+ ~SsServiceFlowManager()\l+ DoDispose()\l+ AddServiceFlow()\l+ AddServiceFlow()\l+ SetMaxDsaReqRetries()\l+ GetMaxDsaReqRetries()\l+ GetDsaRspTimeoutEvent()\l+ GetDsaAckTimeoutEvent()\l+ InitiateServiceFlows()\l+ CreateDsaReq()\l+ CreateDsaAck()\l+ ScheduleDsaReq()\l+ ProcessDsaRsp()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/dc3/classns3_1_1SsServiceFlowManager.html",tooltip="SsServiceFlowManager class. "];
}
