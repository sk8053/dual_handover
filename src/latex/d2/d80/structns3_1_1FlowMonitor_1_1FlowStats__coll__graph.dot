digraph "ns3::FlowMonitor::FlowStats"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::FlowMonitor::FlowStats\n|+ txBytes\l+ rxBytes\l+ txPackets\l+ rxPackets\l+ lostPackets\l+ timesForwarded\l+ packetsDropped\l+ bytesDropped\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +delayHistogram\n+packetSizeHistogram\n+flowInterruptionsHistogram\n+jitterHistogram" ,arrowhead="odiamond"];
  Node2 [label="{ns3::Histogram\n|- m_histogram\l- m_binWidth\l|+ Histogram()\l+ Histogram()\l+ GetNBins()\l+ GetBinStart()\l+ GetBinEnd()\l+ GetBinWidth()\l+ SetDefaultBinWidth()\l+ GetBinCount()\l+ AddValue()\l+ SerializeToXmlStream()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d4f/classns3_1_1Histogram.html",tooltip="Class used to store data and make an histogram of the data frequency. "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +jitterSum\n+lastDelay\n+timeLastRxPacket\n+timeFirstRxPacket\n+delaySum\n+timeLastTxPacket\n+timeFirstTxPacket" ,arrowhead="odiamond"];
  Node3 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
}
