digraph "ns3::HighLatencyCtsToSelfTxVectorTag"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::HighLatencyCtsToSelf\lTxVectorTag\n||+ HighLatencyCtsToSelfTxVectorTag()\l+ HighLatencyCtsToSelfTxVectorTag()\l+ GetCtsToSelfTxVector()\l+ GetInstanceTypeId()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Tag\n||+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d79/classns3_1_1Tag.html",tooltip="tag a set of bytes in a packet "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_ctsToSelfTxVector" ,arrowhead="odiamond"];
  Node4 [label="{ns3::WifiTxVector\n|- m_txPowerLevel\l- m_retries\l- m_preamble\l- m_channelWidth\l- m_guardInterval\l- m_nTx\l- m_nss\l- m_ness\l- m_aggregation\l- m_stbc\l- m_modeInitialized\l- m_txPowerLevelInitialized\l|+ WifiTxVector()\l+ WifiTxVector()\l+ GetMode()\l+ SetMode()\l+ GetTxPowerLevel()\l+ SetTxPowerLevel()\l+ GetRetries()\l+ SetRetries()\l+ GetPreambleType()\l+ SetPreambleType()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d58/classns3_1_1WifiTxVector.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_mode" ,arrowhead="odiamond"];
  Node5 [label="{ns3::WifiMode\n|- m_uid\l|+ IsAllowed()\l+ GetPhyRate()\l+ GetPhyRate()\l+ GetDataRate()\l+ GetDataRate()\l+ GetDataRate()\l+ GetCodeRate()\l+ GetConstellationSize()\l+ GetMcsValue()\l+ GetUniqueName()\land 8 more...\l- WifiMode()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d56/classns3_1_1WifiMode.html",tooltip="represent a single transmission modeA WifiMode is implemented by a single integer which is used to lo..."];
}
