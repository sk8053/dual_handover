digraph "ns3::Ipv6OptionHeader"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::Ipv6OptionHeader\n|- m_type\l- m_length\l- m_data\l|+ GetInstanceTypeId()\l+ Ipv6OptionHeader()\l+ ~Ipv6OptionHeader()\l+ SetType()\l+ GetType()\l+ SetLength()\l+ GetLength()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetAlignment()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Header\n||+ ~Header()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dae/classns3_1_1Header.html",tooltip="Protocol header serialization and deserialization. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::Chunk\n||+ Deserialize()\l+ Print()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9b/classns3_1_1Chunk.html",tooltip="abstract base class for ns3::Header and ns3::Trailer "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::Ipv6OptionJumbogram\lHeader\n|- m_dataLength\l|+ GetInstanceTypeId()\l+ Ipv6OptionJumbogramHeader()\l+ ~Ipv6OptionJumbogramHeader()\l+ SetDataLength()\l+ GetDataLength()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetAlignment()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/db7/classns3_1_1Ipv6OptionJumbogramHeader.html",tooltip="Header of IPv6 Option Jumbogram. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::Ipv6OptionPad1Header\n||+ GetInstanceTypeId()\l+ Ipv6OptionPad1Header()\l+ ~Ipv6OptionPad1Header()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dbf/classns3_1_1Ipv6OptionPad1Header.html",tooltip="Header of IPv6 Option Pad1. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::Ipv6OptionPadnHeader\n||+ GetInstanceTypeId()\l+ Ipv6OptionPadnHeader()\l+ ~Ipv6OptionPadnHeader()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d2f/classns3_1_1Ipv6OptionPadnHeader.html",tooltip="Header of IPv6 Option Padn. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::Ipv6OptionRouterAlert\lHeader\n|- m_value\l|+ GetInstanceTypeId()\l+ Ipv6OptionRouterAlertHeader()\l+ ~Ipv6OptionRouterAlertHeader()\l+ SetValue()\l+ GetValue()\l+ Print()\l+ GetSerializedSize()\l+ Serialize()\l+ Deserialize()\l+ GetAlignment()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/da8/classns3_1_1Ipv6OptionRouterAlertHeader.html",tooltip="Header of IPv6 Option Router Alert. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{OptionWithAlignmentHeader\n|+ TYPE\l|+ GetSerializedSize()\l+ Serialize()\l+ GetAlignment()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d09/classOptionWithAlignmentHeader.html",tooltip="IPv6 extensions Test: Option with alignement. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{OptionWithoutAlignmentHeader\n|+ TYPE\l|+ GetSerializedSize()\l+ Serialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d5d/classOptionWithoutAlignmentHeader.html",tooltip="IPv6 extensions Test: Option without alignment. "];
}
