digraph "ns3::TypeId::AttributeInformation"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::TypeId::AttributeInformation\n|+ name\l+ help\l+ flags\l+ supportLevel\l+ supportMsg\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +originalInitialValue\n+initialValue" ,arrowhead="odiamond"];
  Node2 [label="{ns3::Ptr\< const ns3\l::AttributeValue \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node3 [label="{ns3::AttributeValue\n||+ AttributeValue()\l+ ~AttributeValue()\l+ Copy()\l+ SerializeToString()\l+ DeserializeFromString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d83/classns3_1_1AttributeValue.html",tooltip="Hold a value for an Attribute. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::SimpleRefCount\l\< AttributeValue \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::empty\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6a/classns3_1_1empty.html",tooltip="make Callback use a separate empty type "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +accessor" ,arrowhead="odiamond"];
  Node6 [label="{ns3::Ptr\< const ns3\l::AttributeAccessor \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node7 [label="{ns3::AttributeAccessor\n||+ AttributeAccessor()\l+ ~AttributeAccessor()\l+ Set()\l+ Get()\l+ HasGetter()\l+ HasSetter()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d31/classns3_1_1AttributeAccessor.html",tooltip="allow setting and getting the value of an attribute. "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::SimpleRefCount\l\< AttributeAccessor \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +checker" ,arrowhead="odiamond"];
  Node9 [label="{ns3::Ptr\< const ns3\l::AttributeChecker \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node10 [label="{ns3::AttributeChecker\n||+ AttributeChecker()\l+ ~AttributeChecker()\l+ CreateValidValue()\l+ Check()\l+ GetValueTypeName()\l+ HasUnderlyingTypeInformation()\l+ GetUnderlyingTypeInformation()\l+ Create()\l+ Copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d95/classns3_1_1AttributeChecker.html",tooltip="Represent the type of an attribute. "];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::SimpleRefCount\l\< AttributeChecker \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node5 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
}
