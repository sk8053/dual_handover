digraph "ns3::UanMac"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::UanMac\n||+ GetAddress()\l+ SetAddress()\l+ Enqueue()\l+ SetForwardUpCb()\l+ AttachPhy()\l+ GetBroadcast()\l+ Clear()\l+ AssignStreams()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::UanMacAloha\n|- m_address\l- m_phy\l- m_forUpCb\l- m_cleared\l|+ UanMacAloha()\l+ ~UanMacAloha()\l+ GetAddress()\l+ SetAddress()\l+ Enqueue()\l+ SetForwardUpCb()\l+ AttachPhy()\l+ GetBroadcast()\l+ Clear()\l+ AssignStreams()\l+ GetTypeId()\l# DoDispose()\l- RxPacketGood()\l- RxPacketError()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d10/classns3_1_1UanMacAloha.html"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::UanMacCw\n|- m_forwardUpCb\l- m_address\l- m_phy\l- m_rxLogger\l- m_enqueueLogger\l- m_dequeueLogger\l- m_cw\l- m_slotTime\l- m_sendTime\l- m_savedDelayS\land 7 more...\l|+ UanMacCw()\l+ ~UanMacCw()\l+ SetCw()\l+ SetSlotTime()\l+ GetCw()\l+ GetSlotTime()\l+ GetAddress()\l+ SetAddress()\l+ Enqueue()\l+ SetForwardUpCb()\land 10 more...\l+ GetTypeId()\l# DoDispose()\l- PhyRxPacketGood()\l- PhyRxPacketError()\l- SaveTimer()\l- StartTimer()\l- SendPacket()\l- EndTx()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/db3/classns3_1_1UanMacCw.html"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::UanMacRc\n|- m_state\l- m_rtsBlocked\l- m_startAgain\l- m_address\l- m_retryRate\l- m_assocAddr\l- m_phy\l- m_numRates\l- m_currentRate\l- m_maxFrames\land 17 more...\l- m_cntrlSends\l|+ UanMacRc()\l+ ~UanMacRc()\l+ GetAddress()\l+ SetAddress()\l+ Enqueue()\l+ SetForwardUpCb()\l+ AttachPhy()\l+ GetBroadcast()\l+ Clear()\l+ AssignStreams()\l+ GetTypeId()\l# DoDispose()\l- ReceiveOkFromPhy()\l- Associate()\l- AssociateTimeout()\l- SendRts()\l- RtsTimeout()\l- CreateRtsHeader()\l- ScheduleData()\l- ProcessAck()\l- SendPacket()\l- IsPhy1Ok()\l- BlockRtsing()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d87/classns3_1_1UanMacRc.html"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::UanMacRcGw\n|- m_state\l- m_forwardUpCb\l- m_phy\l- m_address\l- m_maxDelta\l- m_sifs\l- m_maxRes\l- m_numRates\l- m_rtsSize\l- m_ctsSizeN\land 17 more...\l|+ UanMacRcGw()\l+ ~UanMacRcGw()\l+ GetAddress()\l+ SetAddress()\l+ Enqueue()\l+ SetForwardUpCb()\l+ AttachPhy()\l+ GetBroadcast()\l+ Clear()\l+ AssignStreams()\l+ GetTypeId()\l# DoDispose()\l- ReceivePacket()\l- StartCycle()\l- EndCycle()\l- SendPacket()\l- CycleStarted()\l- ReceiveError()\l- ComputeAlpha()\l- GetExpPdk()\l- ComputeExpS()\l- ComputeExpS()\l- CompExpMinIndex()\l- ComputePiK()\l- ComputeExpBOverA()\l- NchooseK()\l- FindOptA()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/da2/classns3_1_1UanMacRcGw.html"];
}
