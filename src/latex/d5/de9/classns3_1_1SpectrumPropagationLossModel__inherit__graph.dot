digraph "ns3::SpectrumPropagationLossModel"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::SpectrumPropagation\lLossModel\n|- m_next\l|+ SpectrumPropagationLossModel()\l+ ~SpectrumPropagationLoss\lModel()\l+ SetNext()\l+ CalcRxPowerSpectralDensity()\l+ GetTypeId()\l# DoDispose()\l- DoCalcRxPowerSpectralDensity()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_tid\l- m_disposed\l- m_initialized\l- m_aggregates\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{ns3::ConstantSpectrumPropagation\lLossModel\n|# m_lossDb\l# m_lossLinear\l|+ ConstantSpectrumPropagation\lLossModel()\l+ ~ConstantSpectrumPropagation\lLossModel()\l+ DoCalcRxPowerSpectralDensity()\l+ SetLossDb()\l+ GetLossDb()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/ded/classns3_1_1ConstantSpectrumPropagationLossModel.html"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{ns3::FriisSpectrumPropagation\lLossModel\n||+ FriisSpectrumPropagation\lLossModel()\l+ ~FriisSpectrumPropagation\lLossModel()\l+ DoCalcRxPowerSpectralDensity()\l+ CalculateLoss()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d2c/classns3_1_1FriisSpectrumPropagationLossModel.html",tooltip="Friis spectrum propagation loss model. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{ns3::MmWave3gppChannel\n|+ isAdditionalMmWavePhy\l- m_connectedPair\l- m_channelMap\l- m_uniformRv\l- m_uniformRvBlockage\l- m_normalRv\l- m_normalRvBlockage\l- m_expRv\l- m_phyMacConfig\l- m_3gppPathloss\l- m_table3gpp\land 8 more...\l|+ MmWave3gppChannel()\l+ ~MmWave3gppChannel()\l+ DoDispose()\l+ ConnectDevices()\l+ Initial()\l+ SetBeamformingVector()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ SetPathlossModel()\l+ GetTypeId()\l- DoCalcRxPowerSpectralDensity()\l- GetNewChannel()\l- UpdateChannel()\l- LongTermCovMatrixBeamforming()\l- BeamSearchBeamforming()\l- CalLongTerm()\l- CalBeamformingGain()\l- GetSystemBandwidth()\l- Get3gppTable()\l- DeleteChannel()\l- CalAttenuationOfBlockage()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d15/classns3_1_1MmWave3gppChannel.html",tooltip="This class implements the fading computation of the 3GPP TR 38.900 channel model and performs the bea..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{ns3::MmWaveBeamforming\n|+ isAdditionalMmWavePhy\l- m_channelMatrixMap\l- m_pathNum\l- m_enbAntennaSize\l- m_ueAntennaSize\l- m_phyMacConfig\l- m_longTermUpdatePeriod\l- m_smallScale\l- m_fixSpeed\l- m_ueSpeed\l- m_update\l- m_uniformRV\l|+ MmWaveBeamforming()\l+ ~MmWaveBeamforming()\l+ DoDispose()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ LoadFile()\l+ Initial()\l+ UpdateMatrices()\l+ CalcRxPowerSpectralDensity()\l+ SetBeamformingVector()\l+ GetTypeId()\l- ParseComplex()\l- LoadSmallScaleFading()\l- LoadEnbAntenna()\l- LoadUeAntenna()\l- LoadEnbSpatialSignature()\l- LoadUeSpatialSignature()\l- DoCalcRxPowerSpectralDensity()\l- SetChannelMatrix()\l- GetSystemBandwidth()\l- GetLongTermFading()\l- GetChannelGainVector()\l- GetUeEnbAntennaPair()\l- GetUeEnbAntennaPair_2()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d81/classns3_1_1MmWaveBeamforming.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::MmWaveChannelMatrix\n|+ isAdditionalMmWavePhy\l- m_connectedPair\l- m_channelMatrixMap\l- m_antennaSeparation\l- m_subBW\l- m_numRB\l- m_numSBPerRB\l- m_uniformRv\l- m_expRv\l- m_phyMacConfig\l|+ MmWaveChannelMatrix()\l+ ~MmWaveChannelMatrix()\l+ DoDispose()\l+ ConnectDevices()\l+ Initial()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ CalcRxPowerSpectralDensity()\l+ GetTypeId()\l- DoCalcRxPowerSpectralDensity()\l- GenSpatialMatrix()\l- GenSinglePath()\l- GetChannelGain()\l- GetSystemBandwidth()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d57/classns3_1_1MmWaveChannelMatrix.html"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 [label="{ns3::MmWaveChannelRaytracing\n|- m_connectedPair\l- m_channelMatrixMap\l- m_antennaSeparation\l- m_uniformRv\l- m_phyMacConfig\l- m_startDistance\l- m_speed\l|+ MmWaveChannelRaytracing()\l+ ~MmWaveChannelRaytracing()\l+ DoDispose()\l+ LoadTraces()\l+ ConnectDevices()\l+ Initial()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ CalcRxPowerSpectralDensity()\l+ GetTypeId()\l- DoCalcRxPowerSpectralDensity()\l- GenSpatialMatrix()\l- GenSinglePath()\l- CalcBeamformingVector()\l- GetChannelGain()\l- GetSystemBandwidth()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d92/classns3_1_1MmWaveChannelRaytracing.html"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node11 [label="{ns3::TraceFadingLossModel\n|- m_windowOffsetsMap\l- m_startVariableMap\l- m_traceFile\l- m_fadingTrace\l- m_traceLength\l- m_samplesNum\l- m_windowSize\l- m_rbNum\l- m_lastWindowUpdate\l- m_timeGranularity\l- m_currentStream\l- m_lastStream\l- m_streamSetSize\l- m_streamsAssigned\l|+ TraceFadingLossModel()\l+ ~TraceFadingLossModel()\l+ DoInitialize()\l+ AssignStreams()\l+ TraceFadingLossModel()\l+ ~TraceFadingLossModel()\l+ DoInitialize()\l+ AssignStreams()\l+ GetTypeId()\l+ GetTypeId()\l- DoCalcRxPowerSpectralDensity()\l- GetValue()\l- SetTraceFileName()\l- SetTraceLength()\l- LoadTrace()\l- DoCalcRxPowerSpectralDensity()\l- GetValue()\l- SetTraceFileName()\l- SetTraceLength()\l- LoadTrace()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/ddd/classns3_1_1TraceFadingLossModel.html",tooltip="fading loss model based on precalculated fading traces "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
}
