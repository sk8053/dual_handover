digraph "ns3::MmWaveHelper"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ns3::MmWaveHelper\n|- CellIdMmWaveEnbPhy\l- EnbType\l- m_pathlossModelType\l- m_channelModelType\l- m_lteEnbNetDeviceFactory\l- m_ueNetDeviceFactory\l- m_channelFactory\l- m_pathlossModelFactory\l- m_ffrAlgorithmFactory\l- m_lteFfrAlgorithmFactory\land 15 more...\l|+ MmWaveHelper()\l+ ~MmWaveHelper()\l+ DoDispose()\l+ InstallUeDevice()\l+ InstallMcUeDevice()\l+ InstallInterRatHoCapable\lUeDevice()\l+ InstallEnbDevice_28GHZ()\l+ InstallEnbDevice_73GHZ()\l+ InstallLteEnbDevice()\l+ SetAntenna()\land 28 more...\l+ GetTypeId()\l# DoInitialize()\l- InstallSingleUeDevice()\l- InstallSingleMcUeDevice()\l- InstallSingleEnbDevice()\l- InstallSingleEnbDevice_2()\l- InstallSingleLteEnbDevice()\l- InstallSingleInterRatHoCapable\lUeDevice()\l- AttachToClosestEnb()\l- AttachMcToClosestEnb()\l- AttachIrToClosestEnb()\l- AttachMcToClosestEnb_2()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{ns3::Object\n|- m_disposed\l- m_initialized\l- m_getObjectCount\l|+ Object()\l+ ~Object()\l+ GetInstanceTypeId()\l+ GetObject()\l+ GetObject()\l+ Dispose()\l+ AggregateObject()\l+ GetAggregateIterator()\l+ Initialize()\l+ IsInitialized()\l+ GetTypeId()\l# NotifyNewAggregate()\l# DoInitialize()\l# DoDispose()\l# Object()\l- DoGetObject()\l- Check()\l- CheckLoose()\l- SetTypeId()\l- Construct()\l- UpdateSortedArray()\l- DoDelete()\l* CopyObject\l* CopyObject\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d77/classns3_1_1Object.html",tooltip="A base class which provides memory management and object aggregation. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{ns3::SimpleRefCount\l\< Object, ObjectBase,\l ObjectDeleter \>\n|- m_count\l|+ SimpleRefCount()\l+ SimpleRefCount()\l+ operator=()\l+ Ref()\l+ Unref()\l+ GetReferenceCount()\l+ Cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/da1/classns3_1_1SimpleRefCount.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{ns3::ObjectBase\n||+ ~ObjectBase()\l+ GetInstanceTypeId()\l+ SetAttribute()\l+ SetAttributeFailSafe()\l+ GetAttribute()\l+ GetAttributeFailSafe()\l+ TraceConnect()\l+ TraceConnectWithoutContext()\l+ TraceDisconnect()\l+ TraceDisconnectWithoutContext()\l+ GetTypeId()\l# NotifyConstructionCompleted()\l# ConstructSelf()\l- DoSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dac/classns3_1_1ObjectBase.html",tooltip="Anchor the ns-3 type and attribute system. "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node5 [label="{ns3::TypeId\n|- m_tid\l|+ TypeId()\l+ GetParent()\l+ HasParent()\l+ IsChildOf()\l+ GetGroupName()\l+ GetName()\l+ GetHash()\l+ GetSize()\l+ HasConstructor()\l+ GetAttributeN()\land 26 more...\l+ LookupByName()\l+ LookupByNameFailSafe()\l+ LookupByHash()\l+ LookupByHashFailSafe()\l+ GetRegisteredN()\l+ GetRegistered()\l- TypeId()\l- DoAddConstructor()\l* operator==\l* operator!=\l* operator\<\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d11/classns3_1_1TypeId.html",tooltip="a unique identifier for an interface. "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_aggregates" ,arrowhead="odiamond"];
  Node6 [label="{ns3::Object::Aggregates\n|+ n\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de9/structns3_1_1Object_1_1Aggregates.html"];
  Node2 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +buffer" ,arrowhead="odiamond"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_downlinkChannel\n-m_channel\n-m_uplinkChannel\n-m_channel_2" ,arrowhead="odiamond"];
  Node7 [label="{ns3::Ptr\< ns3::SpectrumChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node8 [label="{ns3::SpectrumChannel\n||+ ~SpectrumChannel()\l+ AddPropagationLossModel()\l+ AddSpectrumPropagationLoss\lModel()\l+ SetPropagationDelayModel()\l+ StartTx()\l+ AddRx()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d59/classns3_1_1SpectrumChannel.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node9 [label="{ns3::Channel\n|- m_id\l|+ Channel()\l+ ~Channel()\l+ GetId()\l+ GetNDevices()\l+ GetDevice()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d67/classns3_1_1Channel.html",tooltip="Abstract Channel Base Class. "];
  Node2 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_losTracker_2\n-m_losTracker" ,arrowhead="odiamond"];
  Node10 [label="{ns3::Ptr\< ns3::MmWaveLos\lTracker \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node11 [label="{ns3::MmWaveLosTracker\n|- m_mapNlos\l- m_mapLos\l|+ MmWaveLosTracker()\l+ ~MmWaveLosTracker()\l+ UpdateLosNlosState()\l+ GetNlosSamples()\l+ GetLosSamples()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d4e/classns3_1_1MmWaveLosTracker.html"];
  Node2 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_cnStats" ,arrowhead="odiamond"];
  Node12 [label="{ns3::Ptr\< ns3::CoreNetwork\lStatsCalculator \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node13 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node13 [label="{ns3::CoreNetworkStatsCalculator\n|- m_mmeOutFileName\l- m_x2OutFileName\l- m_x2OutFile\l- m_mmeOutFile\l|+ CoreNetworkStatsCalculator()\l+ ~CoreNetworkStatsCalculator()\l+ DoDispose()\l+ LogX2Packet()\l+ LogMmePacket()\l+ GetX2OutputFilename()\l+ GetMmeOutputFilename()\l+ SetX2OutputFilename()\l+ SetMmeOutputFilename()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d47/classns3_1_1CoreNetworkStatsCalculator.html"];
  Node2 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_epcHelper" ,arrowhead="odiamond"];
  Node14 [label="{ns3::Ptr\< ns3::EpcHelper \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node15 [label="{ns3::EpcHelper\n||+ EpcHelper()\l+ ~EpcHelper()\l+ DoDispose()\l+ AddEnb()\l+ AddUe()\l+ AddX2Interface()\l+ ActivateEpsBearer()\l+ ActivateEpsBearer()\l+ GetPgwNode()\l+ AssignUeIpv4Address()\l+ GetUeDefaultGatewayAddress()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d5b/classns3_1_1EpcHelper.html",tooltip="Base helper class to handle the creation of the EPC entities. "];
  Node2 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_phyStats" ,arrowhead="odiamond"];
  Node16 [label="{ns3::Ptr\< ns3::MmWavePhy\lRxTrace \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node17 [label="{ns3::MmWavePhyRxTrace\n|- m_rxPacketTraceFile\l- m_rxPacketTraceFilename\l|+ MmWavePhyRxTrace()\l+ ~MmWavePhyRxTrace()\l+ GetTypeId()\l+ ReportCurrentCellRsrpSinr\lCallback()\l+ ReportPacketCountUeCallback()\l+ ReportPacketCountEnbCallback()\l+ ReportDownLinkTBSize()\l+ RxPacketTraceUeCallback()\l+ RxPacketTraceEnbCallback()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/def/classns3_1_1MmWavePhyRxTrace.html"];
  Node2 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node18 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_raytracing\n-m_raytracing_2" ,arrowhead="odiamond"];
  Node18 [label="{ns3::Ptr\< ns3::MmWaveChannel\lRaytracing \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node19 -> Node18 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node19 [label="{ns3::MmWaveChannelRaytracing\n|- m_connectedPair\l- m_channelMatrixMap\l- m_antennaSeparation\l- m_startDistance\l- m_speed\l|+ MmWaveChannelRaytracing()\l+ ~MmWaveChannelRaytracing()\l+ DoDispose()\l+ LoadTraces()\l+ ConnectDevices()\l+ Initial()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ CalcRxPowerSpectralDensity()\l+ GetTypeId()\l- DoCalcRxPowerSpectralDensity()\l- GenSpatialMatrix()\l- GenSinglePath()\l- CalcBeamformingVector()\l- GetChannelGain()\l- GetSystemBandwidth()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d92/classns3_1_1MmWaveChannelRaytracing.html"];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node20 [label="{ns3::SpectrumPropagation\lLossModel\n||+ SpectrumPropagationLossModel()\l+ ~SpectrumPropagationLoss\lModel()\l+ SetNext()\l+ CalcRxPowerSpectralDensity()\l+ GetTypeId()\l# DoDispose()\l- DoCalcRxPowerSpectralDensity()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dd7/classns3_1_1SpectrumPropagationLossModel.html",tooltip="spectrum-aware propagation loss model "];
  Node2 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node21 -> Node20 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
  Node21 [label="{ns3::Ptr\< ns3::SpectrumPropagation\lLossModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node20 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node22 -> Node19 [color="grey25",fontsize="10",style="solid",label=" -m_phyMacConfig" ,arrowhead="odiamond"];
  Node22 [label="{ns3::Ptr\< ns3::MmWavePhy\lMacCommon \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node23 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node23 [label="{ns3::MmWavePhyMacCommon\n|- m_symbolsPerSlot\l- m_symbolPeriod\l- m_symbolsPerSubframe\l- m_subframePeriod\l- m_ctrlSymbols\l- m_dlCtrlSymbols\l- m_ulCtrlSymbols\l- m_slotsPerSubframe\l- m_subframesPerFrame\l- m_numRefSymbols\land 18 more...\l|+ MmWavePhyMacCommon()\l+ ~MmWavePhyMacCommon()\l+ GetSymbPerSlot()\l+ GetSymbolPeriod()\l+ GetCtrlSymbols()\l+ GetDlCtrlSymbols()\l+ GetUlCtrlSymbols()\l+ GetSymbolsPerSubframe()\l+ GetSubframePeriod()\l+ GetTti()\land 52 more...\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/df4/classns3_1_1MmWavePhyMacCommon.html"];
  Node2 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node24 -> Node19 [color="grey25",fontsize="10",style="solid",label=" -m_uniformRv" ,arrowhead="odiamond"];
  Node24 [label="{ns3::Ptr\< ns3::UniformRandom\lVariable \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node25 -> Node24 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node25 [label="{ns3::UniformRandomVariable\n||+ UniformRandomVariable()\l+ GetMin()\l+ GetMax()\l+ GetValue()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d5b/classns3_1_1UniformRandomVariable.html",tooltip="The uniform distribution Random Number Generator (RNG). "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node26 [label="{ns3::RandomVariableStream\n|- m_isAntithetic\l- m_stream\l|+ RandomVariableStream()\l+ ~RandomVariableStream()\l+ SetStream()\l+ GetStream()\l+ SetAntithetic()\l+ IsAntithetic()\l+ GetValue()\l+ GetInteger()\l+ GetTypeId()\l# Peek()\l- RandomVariableStream()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/daa/classns3_1_1RandomVariableStream.html",tooltip="The basic uniform Random Number Generator (RNG). "];
  Node2 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node27 -> Node26 [color="grey25",fontsize="10",style="solid",label=" -m_rng" ,arrowhead="odiamond"];
  Node27 [label="{ns3::RngStream\n|- m_currentState\l|+ RngStream()\l+ RngStream()\l+ RandU01()\l- AdvanceNthBy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d35/classns3_1_1RngStream.html",tooltip="Combined Multiple-Recursive Generator MRG32k3a. "];
  Node28 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_3gppChannel\n-m_3gppChannel_2" ,arrowhead="odiamond"];
  Node28 [label="{ns3::Ptr\< ns3::MmWave3gpp\lChannel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node29 -> Node28 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node29 [label="{ns3::MmWave3gppChannel\n|+ isAdditionalMmWavePhy\l- m_connectedPair\l- m_channelMap\l- m_cellScan\l- m_blockage\l- m_numNonSelfBloking\l- m_portraitMode\l- m_scenario\l- m_blockerSpeed\l- m_forceInitialBfComputation\l|+ MmWave3gppChannel()\l+ ~MmWave3gppChannel()\l+ DoDispose()\l+ ConnectDevices()\l+ Initial()\l+ SetBeamformingVector()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ SetPathlossModel()\l+ GetTypeId()\l- DoCalcRxPowerSpectralDensity()\l- GetNewChannel()\l- UpdateChannel()\l- LongTermCovMatrixBeamforming()\l- BeamSearchBeamforming()\l- CalLongTerm()\l- CalBeamformingGain()\l- GetSystemBandwidth()\l- Get3gppTable()\l- DeleteChannel()\l- CalAttenuationOfBlockage()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d15/classns3_1_1MmWave3gppChannel.html",tooltip="This class implements the fading computation of the 3GPP TR 38.900 channel model and performs the bea..."];
  Node20 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node30 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_table3gpp" ,arrowhead="odiamond"];
  Node30 [label="{ns3::Ptr\< ns3::ParamsTable \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node31 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node31 [label="{ns3::ParamsTable\n|+ m_numOfCluster\l+ m_raysPerCluster\l+ m_uLgDS\l+ m_sigLgDS\l+ m_uLgASD\l+ m_sigLgASD\l+ m_uLgASA\l+ m_sigLgASA\l+ m_uLgZSA\l+ m_sigLgZSA\land 12 more...\l|+ ParamsTable()\l+ SetParams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d87/structns3_1_1ParamsTable.html"];
  Node2 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node32 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_normalRv\n-m_normalRvBlockage" ,arrowhead="odiamond"];
  Node32 [label="{ns3::Ptr\< ns3::NormalRandom\lVariable \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node33 -> Node32 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node33 [label="{ns3::NormalRandomVariable\n|+ INFINITE_VALUE\l- m_mean\l- m_variance\l- m_bound\l- m_nextValid\l- m_next\l|+ NormalRandomVariable()\l+ GetMean()\l+ GetVariance()\l+ GetBound()\l+ GetValue()\l+ GetInteger()\l+ GetValue()\l+ GetInteger()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d87/classns3_1_1NormalRandomVariable.html",tooltip="The normal (Gaussian) distribution Random Number Generator (RNG) that allows stream numbers to be set..."];
  Node26 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node34 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_updatePeriod" ,arrowhead="odiamond"];
  Node34 [label="{ns3::Time\n|- m_data\l- g_markingTimes\l|+ operator=()\l+ Time()\l+ Time()\l+ Time()\l+ ~Time()\l+ IsZero()\l+ IsNegative()\l+ IsPositive()\l+ IsStrictlyNegative()\l+ IsStrictlyPositive()\l+ Compare()\l+ operator int64x64_t()\l+ As()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ Time()\l+ GetYears()\l+ GetDays()\l+ GetHours()\l+ GetMinutes()\l+ GetSeconds()\l+ GetMilliSeconds()\l+ GetMicroSeconds()\l+ GetNanoSeconds()\l+ GetPicoSeconds()\l+ GetFemtoSeconds()\l+ GetTimeStep()\l+ GetDouble()\l+ GetInteger()\l+ ToInteger()\l+ ToDouble()\l+ To()\l+ Min()\l+ Max()\l+ SetResolution()\l+ GetResolution()\l+ From()\l+ StaticInit()\l+ FromInteger()\l+ FromDouble()\l+ From()\l- PeekResolution()\l- PeekInformation()\l- SetDefaultNsResolution()\l- SetResolution()\l- ClearMarkedTimes()\l- Mark()\l- Clear()\l- ConvertTimes()\l* operator==\l* operator!=\l* operator\<=\l* operator\>=\l* operator\<\l* operator\>\l* operator+\l* operator-\l* operator*\l* operator*\l* operator/\l* operator/\l* operator+=\l* operator-=\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* Time()\l* GetYears()\l* GetDays()\l* GetHours()\l* GetMinutes()\l* GetSeconds()\l* GetMilliSeconds()\l* GetMicroSeconds()\l* GetNanoSeconds()\l* GetPicoSeconds()\l* GetFemtoSeconds()\l* GetTimeStep()\l* GetDouble()\l* GetInteger()\l* ToInteger()\l* ToDouble()\l* To()\l* FromInteger()\l* FromDouble()\l* From()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d04/classns3_1_1Time.html",tooltip="Simulation virtual time values and global simulation resolution. "];
  Node22 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_phyMacConfig" ,arrowhead="odiamond"];
  Node35 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_3gppPathloss" ,arrowhead="odiamond"];
  Node35 [label="{ns3::Ptr\< ns3::Propagation\lLossModel \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node36 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node36 [label="{ns3::PropagationLossModel\n||+ PropagationLossModel()\l+ ~PropagationLossModel()\l+ SetNext()\l+ GetNext()\l+ CalcRxPower()\l+ AssignStreams()\l+ GetTypeId()\l- PropagationLossModel()\l- operator=()\l- DoCalcRxPower()\l- DoAssignStreams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/df9/classns3_1_1PropagationLossModel.html",tooltip="Models the propagation loss through a transmission medium. "];
  Node2 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node35 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -m_next" ,arrowhead="odiamond"];
  Node24 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_uniformRv\n-m_uniformRvBlockage" ,arrowhead="odiamond"];
  Node37 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -m_expRv" ,arrowhead="odiamond"];
  Node37 [label="{ns3::Ptr\< ns3::Exponential\lRandomVariable \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node38 -> Node37 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node38 [label="{ns3::ExponentialRandomVariable\n|- m_mean\l- m_bound\l|+ ExponentialRandomVariable()\l+ GetMean()\l+ GetBound()\l+ GetValue()\l+ GetInteger()\l+ GetValue()\l+ GetInteger()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d98/classns3_1_1ExponentialRandomVariable.html",tooltip="The exponential distribution Random Number Generator (RNG). "];
  Node26 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node39 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_schedulerFactory\n-m_enbAntennaModelFactory\n-m_lteChannelFactory\n-m_mcUeNetDeviceFactory\n-m_enbNetDeviceFactory\n-m_lteSchedulerFactory\n-m_channelFactory_2\n-m_lteEnbAntennaModelFactory\n-m_lteHandoverAlgorithmFactory\n-m_ulPathlossModelFactory\n..." ,arrowhead="odiamond"];
  Node39 [label="{ns3::ObjectFactory\n||+ ObjectFactory()\l+ ObjectFactory()\l+ Set()\l+ GetTypeId()\l+ Create()\l+ Create()\l+ SetTypeId()\l+ SetTypeId()\l+ SetTypeId()\l* SetTypeId()\l* SetTypeId()\l* SetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d0d/classns3_1_1ObjectFactory.html",tooltip="Instantiate subclasses of ns3::Object. "];
  Node5 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -m_tid" ,arrowhead="odiamond"];
  Node40 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -m_parameters" ,arrowhead="odiamond"];
  Node40 [label="{ns3::AttributeConstructionList\n|- m_list\l|+ AttributeConstructionList()\l+ Add()\l+ Find()\l+ Begin()\l+ End()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df3/classns3_1_1AttributeConstructionList.html"];
  Node41 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -lteEnbRrc" ,arrowhead="odiamond"];
  Node41 [label="{ns3::Ptr\< ns3::LteEnbRrc \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node42 -> Node41 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node42 [label="{ns3::LteEnbRrc\n|+ ImsiTosecondCellRnti\l+ EnbType\l+ secondBestCellId\l+ m_secondMmWave_m_rnti\l+ m_firstCellId\l+ isAdditionalMmWave\l- m_switchEnabled\l- m_configured\l- m_cellId\l- m_lteCellId\l- m_dlEarfcn\l- m_ulEarfcn\l- m_dlBandwidth\l- m_ulBandwidth\l- m_lastAllocatedRnti\l- m_ueMap\land 43 more...\l|+ LteEnbRrc()\l+ ~LteEnbRrc()\l+ DoRecvAssistantInfo()\l+ SetEpcX2SapProvider()\l+ GetEpcX2SapUser()\l+ GetEpcX2SapProvider()\l+ SetEpcX2PdcpProvider()\l+ GetEpcX2PdcpProvider()\l+ SetX2()\l+ GetX2()\land 42 more...\l+ GetTypeId()\l# DoDispose()\l- DoCompleteSetupUe()\l- DoRecvRrcConnectionRequest()\l- DoRecvRrcConnectionSetup\lCompleted()\l- DoRecvRrcConnectionReconfiguration\lCompleted()\l- DoRecvRrcConnectionReestablishment\lRequest()\l- DoRecvRrcConnectionReestablishment\lComplete()\l- DoRecvMeasurementReport()\l- DoRecvRrcSecondaryCellInitial\lAccessSuccessful()\l- DoDataRadioBearerSetupRequest()\l- DoPathSwitchRequestAcknowledge()\land 42 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d65/classns3_1_1LteEnbRrc.html"];
  Node2 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node43 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_notifyMmWaveSinrTrace" ,arrowhead="odiamond"];
  Node43 [label="{ns3::TracedCallback\l\< uint64_t, uint16_t,\l long double \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node44 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_anrSapUser" ,arrowhead="odiamond"];
  Node44 [label="{ns3::LteAnrSapUser\n||+ ~LteAnrSapUser()\l+ AddUeMeasReportConfigForAnr()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d11/classns3_1_1LteAnrSapUser.html",tooltip="Service Access Point (SAP) offered by the eNodeB RRC instance to the ANR instance. "];
  Node45 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_cphySapProvider" ,arrowhead="odiamond"];
  Node45 [label="{ns3::LteEnbCphySapProvider\n||+ ~LteEnbCphySapProvider()\l+ SetCellId()\l+ SetBandwidth()\l+ SetEarfcn()\l+ AddUe()\l+ RemoveUe()\l+ SetPa()\l+ SetTransmissionMode()\l+ SetSrsConfigurationIndex()\l+ SetMasterInformationBlock()\l+ SetSystemInformationBlock\lType1()\l+ GetReferenceSignalPower()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d1a/classns3_1_1LteEnbCphySapProvider.html"];
  Node46 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_x2SapProvider" ,arrowhead="odiamond"];
  Node46 [label="{ns3::EpcX2SapProvider\n||+ ~EpcX2SapProvider()\l+ SendHandoverRequest()\l+ SendHandoverRequestAck()\l+ SendHandoverPreparationFailure()\l+ SendSnStatusTransfer()\l+ SendUeContextRelease()\l+ SendLoadInformation()\l+ SendResourceStatusUpdate()\l+ SendUeData()\l+ SetEpcX2PdcpUser()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d17/classns3_1_1EpcX2SapProvider.html"];
  Node47 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node47 [label="{ns3::EpcX2Sap\n|+ m_maxPdcpSn\l|+ ~EpcX2Sap()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dc9/classns3_1_1EpcX2Sap.html",tooltip="Common structures for EpcX2SapProvider and EpcX2SapUser. "];
  Node48 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_recvMeasurementReport\lTrace" ,arrowhead="odiamond"];
  Node48 [label="{ns3::TracedCallback\l\< uint64_t, uint16_t,\l uint16_t, ns3::LteRrcSap\l::MeasurementReport \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node49 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_cmacSapUser" ,arrowhead="odiamond"];
  Node49 [label="{ns3::LteEnbCmacSapUser\n||+ ~LteEnbCmacSapUser()\l+ AllocateTemporaryCellRnti()\l+ NotifyLcConfigResult()\l+ RrcConfigurationUpdateInd()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d14/classns3_1_1LteEnbCmacSapUser.html"];
  Node50 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_cphySapUser" ,arrowhead="odiamond"];
  Node50 [label="{ns3::LteEnbCphySapUser\n||+ ~LteEnbCphySapUser()\l+ UpdateUeSinrEstimate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d56/classns3_1_1LteEnbCphySapUser.html"];
  Node51 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_s1SapProvider" ,arrowhead="odiamond"];
  Node51 [label="{ns3::EpcEnbS1SapProvider\n||+ ~EpcEnbS1SapProvider()\l+ InitialUeMessage()\l+ DoSendReleaseIndication()\l+ PathSwitchRequest()\l+ UeContextRelease()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d42/classns3_1_1EpcEnbS1SapProvider.html"];
  Node52 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_handoverManagementSapUser" ,arrowhead="odiamond"];
  Node52 [label="{ns3::LteHandoverManagement\lSapUser\n||+ ~LteHandoverManagementSapUser()\l+ AddUeMeasReportConfigFor\lHandover()\l+ TriggerHandover()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/deb/classns3_1_1LteHandoverManagementSapUser.html",tooltip="Service Access Point (SAP) offered by the eNodeB RRC instance to the handover algorithm instance..."];
  Node53 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_handoverStartTrace" ,arrowhead="odiamond"];
  Node53 [label="{ns3::TracedCallback\l\< uint64_t, uint16_t,\l uint16_t, uint16_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node34 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_handoverJoiningTimeout\lDuration\n-m_connectionRejectedTimeout\lDuration\n-m_systemInformationPeriodicity\n-m_connectionSetupTimeoutDuration\n-m_connectionRequestTimeoutDuration\n-m_handoverLeavingTimeoutDuration" ,arrowhead="odiamond"];
  Node54 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_ueMeasConfig" ,arrowhead="odiamond"];
  Node54 [label="{ns3::LteRrcSap::MeasConfig\n|+ measObjectToRemoveList\l+ measObjectToAddModList\l+ reportConfigToRemoveList\l+ reportConfigToAddModList\l+ measIdToRemoveList\l+ measIdToAddModList\l+ haveQuantityConfig\l+ haveMeasGapConfig\l+ haveSmeasure\l+ sMeasure\l+ haveSpeedStatePars\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d45/structns3_1_1LteRrcSap_1_1MeasConfig.html"];
  Node55 -> Node54 [color="grey25",fontsize="10",style="solid",label=" +quantityConfig" ,arrowhead="odiamond"];
  Node55 [label="{ns3::LteRrcSap::Quantity\lConfig\n|+ filterCoefficientRSRP\l+ filterCoefficientRSRQ\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d34/structns3_1_1LteRrcSap_1_1QuantityConfig.html"];
  Node56 -> Node54 [color="grey25",fontsize="10",style="solid",label=" +speedStatePars" ,arrowhead="odiamond"];
  Node56 [label="{ns3::LteRrcSap::SpeedStatePars\n|+ type\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d8e/structns3_1_1LteRrcSap_1_1SpeedStatePars.html"];
  Node57 -> Node56 [color="grey25",fontsize="10",style="solid",label=" +mobilityStateParameters" ,arrowhead="odiamond"];
  Node57 [label="{ns3::LteRrcSap::Mobility\lStateParameters\n|+ tEvaluation\l+ tHystNormal\l+ nCellChangeMedium\l+ nCellChangeHigh\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d42/structns3_1_1LteRrcSap_1_1MobilityStateParameters.html"];
  Node58 -> Node56 [color="grey25",fontsize="10",style="solid",label=" +timeToTriggerSf" ,arrowhead="odiamond"];
  Node58 [label="{ns3::LteRrcSap::SpeedState\lScaleFactors\n|+ sfMedium\l+ sfHigh\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/df9/structns3_1_1LteRrcSap_1_1SpeedStateScaleFactors.html"];
  Node59 -> Node54 [color="grey25",fontsize="10",style="solid",label=" +measGapConfig" ,arrowhead="odiamond"];
  Node59 [label="{ns3::LteRrcSap::MeasGapConfig\n|+ type\l+ gapOffsetChoice\l+ gapOffsetValue\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d90/structns3_1_1LteRrcSap_1_1MeasGapConfig.html"];
  Node60 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_s1SapUser" ,arrowhead="odiamond"];
  Node60 [label="{ns3::EpcEnbS1SapUser\n||+ ~EpcEnbS1SapUser()\l+ DataRadioBearerSetupRequest()\l+ PathSwitchRequestAcknowledge()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/de1/classns3_1_1EpcEnbS1SapUser.html"];
  Node61 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_rrcSapUser" ,arrowhead="odiamond"];
  Node61 [label="{ns3::LteEnbRrcSapUser\n||+ SetupUe()\l+ RemoveUe()\l+ SendSystemInformation()\l+ SendRrcConnectionSetup()\l+ SendRrcConnectionReconfiguration()\l+ SendRrcConnectionReestablishment()\l+ SendRrcConnectionReestablishment\lReject()\l+ SendRrcConnectionRelease()\l+ SendRrcConnectionReject()\l+ SendRrcConnectionSwitch()\l+ SendRrcConnectToMmWave()\l+ EncodeHandoverPreparation\lInformation()\l+ DecodeHandoverPreparation\lInformation()\l+ EncodeHandoverCommand()\l+ DecodeHandoverCommand()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d92/classns3_1_1LteEnbRrcSapUser.html",tooltip="Part of the RRC protocol. This Service Access Point (SAP) is used by the eNB RRC to send messages to ..."];
  Node62 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node62 [label="{ns3::LteRrcSap\n|+ MaxReportCells\l|+ ~LteRrcSap()\l+ ConvertPdschConfigDedicated2\lDouble()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d3e/classns3_1_1LteRrcSap.html",tooltip="Class holding definition common to all UE/eNodeB SAP Users/Providers. "];
  Node63 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_anrSapProvider" ,arrowhead="odiamond"];
  Node63 [label="{ns3::LteAnrSapProvider\n||+ ~LteAnrSapProvider()\l+ ReportUeMeas()\l+ AddNeighbourRelation()\l+ GetNoRemove()\l+ GetNoHo()\l+ GetNoX2()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/ddf/classns3_1_1LteAnrSapProvider.html",tooltip="Service Access Point (SAP) offered by the ANR instance to the eNodeB RRC instance. "];
  Node64 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_x2SapUser" ,arrowhead="odiamond"];
  Node64 [label="{ns3::EpcX2SapUser\n||+ ~EpcX2SapUser()\l+ RecvHandoverRequest()\l+ RecvAssistantInformation()\l+ RecvHandoverRequestAck()\l+ RecvHandoverPreparationFailure()\l+ RecvSnStatusTransfer()\l+ RecvUeContextRelease()\l+ RecvLoadInformation()\l+ RecvResourceStatusUpdate()\l+ RecvRlcSetupRequest()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/dce/classns3_1_1EpcX2SapUser.html"];
  Node47 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node65 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_ffrRrcSapProvider" ,arrowhead="odiamond"];
  Node65 [label="{ns3::LteFfrRrcSapProvider\n||+ ~LteFfrRrcSapProvider()\l+ SetCellId()\l+ SetBandwidth()\l+ ReportUeMeas()\l+ RecvLoadInformation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d57/classns3_1_1LteFfrRrcSapProvider.html",tooltip="Service Access Point (SAP) offered by the Frequency Reuse algorithm instance to the eNodeB RRC instan..."];
  Node66 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_forwardUpCallback" ,arrowhead="odiamond"];
  Node66 [label="{ns3::Callback\< void,\l ns3::Ptr\< ns3::Packet \> \>\n||+ Callback()\l+ Callback()\l+ Callback()\l+ Callback()\l+ Bind()\l+ TwoBind()\l+ ThreeBind()\l+ IsNull()\l+ Nullify()\l+ IsEqual()\l+ CheckType()\l+ Assign()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l- DoPeekImpl()\l- DoCheckType()\l- DoAssign()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d48/classns3_1_1Callback.html"];
  Node67 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node67 [label="{ns3::CallbackBase\n||+ CallbackBase()\l+ GetImpl()\l# CallbackBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/db5/classns3_1_1CallbackBase.html"];
  Node68 -> Node67 [color="grey25",fontsize="10",style="solid",label=" #m_impl" ,arrowhead="odiamond"];
  Node68 [label="{ns3::Ptr\< ns3::CallbackImpl\lBase \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node69 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_newUeContextTrace" ,arrowhead="odiamond"];
  Node69 [label="{ns3::TracedCallback\l\< uint16_t, uint16_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node70 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_x2PdcpProvider" ,arrowhead="odiamond"];
  Node70 [label="{ns3::EpcX2PdcpProvider\n||+ ~EpcX2PdcpProvider()\l+ SendMcPdcpPdu()\l+ ReceiveAssistantInformation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d42/classns3_1_1EpcX2PdcpProvider.html"];
  Node47 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node71 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_ffrRrcSapUser" ,arrowhead="odiamond"];
  Node71 [label="{ns3::LteFfrRrcSapUser\n||+ ~LteFfrRrcSapUser()\l+ AddUeMeasReportConfigForFfr()\l+ SetPdschConfigDedicated()\l+ SendLoadInformation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d7f/classns3_1_1LteFfrRrcSapUser.html",tooltip="Service Access Point (SAP) offered by the eNodeB RRC instance to the Frequency Reuse algorithm instan..."];
  Node72 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_cmacSapProvider" ,arrowhead="odiamond"];
  Node72 [label="{ns3::LteEnbCmacSapProvider\n||+ ~LteEnbCmacSapProvider()\l+ ConfigureMac()\l+ AddUe()\l+ RemoveUe()\l+ AddLc()\l+ ReconfigureLc()\l+ ReleaseLc()\l+ UeUpdateConfigurationReq()\l+ GetRachConfig()\l+ AllocateNcRaPreamble()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d73/classns3_1_1LteEnbCmacSapProvider.html"];
  Node73 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_connectionReconfiguration\lTrace\n-m_handoverEndOkTrace\n-m_connectionEstablishedTrace" ,arrowhead="odiamond"];
  Node73 [label="{ns3::TracedCallback\l\< uint64_t, uint16_t,\l uint16_t \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node74 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_sib1" ,arrowhead="odiamond"];
  Node74 [label="{ns3::LteRrcSap::SystemInformation\lBlockType1\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dc9/structns3_1_1LteRrcSap_1_1SystemInformationBlockType1.html"];
  Node75 -> Node74 [color="grey25",fontsize="10",style="solid",label=" +cellSelectionInfo" ,arrowhead="odiamond"];
  Node75 [label="{ns3::LteRrcSap::CellSelectionInfo\n|+ qRxLevMin\l+ qQualMin\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d73/structns3_1_1LteRrcSap_1_1CellSelectionInfo.html"];
  Node76 -> Node74 [color="grey25",fontsize="10",style="solid",label=" +cellAccessRelatedInfo" ,arrowhead="odiamond"];
  Node76 [label="{ns3::LteRrcSap::CellAccess\lRelatedInfo\n|+ cellIdentity\l+ csgIndication\l+ csgIdentity\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/ddd/structns3_1_1LteRrcSap_1_1CellAccessRelatedInfo.html"];
  Node77 -> Node76 [color="grey25",fontsize="10",style="solid",label=" +plmnIdentityInfo" ,arrowhead="odiamond"];
  Node77 [label="{ns3::LteRrcSap::PlmnIdentityInfo\n|+ plmnIdentity\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d1d/structns3_1_1LteRrcSap_1_1PlmnIdentityInfo.html"];
  Node78 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_x2" ,arrowhead="odiamond"];
  Node78 [label="{ns3::Ptr\< ns3::EpcX2 \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node79 -> Node78 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node79 [label="{ns3::EpcX2\n|+ isAdditionalMmWave\l# m_x2PdcpUserMap\l# m_x2PdcpUserMap_2\l# m_x2RlcUserMap\l# m_x2RlcUserMap_2\l- m_x2InterfaceSockets\l- m_x2InterfaceCellIds\l- m_x2cUdpPort\l- m_x2uUdpPort\l- m_teidToBeForwardedMap\l|+ EpcX2()\l+ ~EpcX2()\l+ DoDispose()\l+ SetEpcX2SapUser()\l+ GetEpcX2SapProvider()\l+ GetEpcX2PdcpProvider()\l+ SetEpcX2PdcpUser()\l+ GetEpcX2RlcProvider()\l+ SetMcEpcX2RlcUser()\l+ SetMcEpcX2RlcUser_2()\l+ SetMcEpcX2PdcpUser()\l+ SetMcEpcX2PdcpUser_2()\l+ AddX2Interface()\l+ RecvFromX2cSocket()\l+ RecvFromX2uSocket()\l+ GetTypeId()\l# DoReceiveAssistantInformation()\l# DoSendHandoverRequest()\l# DoSendRlcSetupRequest()\l# DoSendRlcSetupCompleted()\l# DoSendHandoverRequestAck()\l# DoSendHandoverPreparation\lFailure()\l# DoSendSnStatusTransfer()\l# DoSendUeContextRelease()\l# DoSendLoadInformation()\l# DoSendResourceStatusUpdate()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d1e/classns3_1_1EpcX2.html"];
  Node2 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node80 -> Node79 [color="grey25",fontsize="10",style="solid",label=" -m_rxPdu" ,arrowhead="odiamond"];
  Node80 [label="{ns3::TracedCallback\l\< uint16_t, uint16_t,\l uint32_t, uint64_t,\l bool \>\n|- m_callbackList\l|+ TracedCallback()\l+ ConnectWithoutContext()\l+ Connect()\l+ DisconnectWithoutContext()\l+ Disconnect()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l+ operator()()\l* Uint32Callback\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l* operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dec/classns3_1_1TracedCallback.html"];
  Node46 -> Node79 [color="grey25",fontsize="10",style="solid",label=" #m_x2SapProvider" ,arrowhead="odiamond"];
  Node81 -> Node79 [color="grey25",fontsize="10",style="solid",label=" #m_x2PdcpUser" ,arrowhead="odiamond"];
  Node81 [label="{ns3::EpcX2PdcpUser\n||+ ~EpcX2PdcpUser()\l+ ReceiveMcPdcpPdu()\l+ ReceiveAssistantInformation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dcf/classns3_1_1EpcX2PdcpUser.html"];
  Node47 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node64 -> Node79 [color="grey25",fontsize="10",style="solid",label=" #m_x2SapUser" ,arrowhead="odiamond"];
  Node70 -> Node79 [color="grey25",fontsize="10",style="solid",label=" #m_x2PdcpProvider" ,arrowhead="odiamond"];
  Node82 -> Node79 [color="grey25",fontsize="10",style="solid",label=" #m_x2RlcProvider" ,arrowhead="odiamond"];
  Node82 [label="{ns3::EpcX2RlcProvider\n||+ ~EpcX2RlcProvider()\l+ ReceiveMcPdcpSdu()\l+ ReceiveAssistantInformation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d20/classns3_1_1EpcX2RlcProvider.html"];
  Node47 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node82 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_x2RlcProvider" ,arrowhead="odiamond"];
  Node83 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_macSapProvider" ,arrowhead="odiamond"];
  Node83 [label="{ns3::LteMacSapProvider\n||+ ~LteMacSapProvider()\l+ TransmitPdu()\l+ ReportBufferStatus()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d1a/classns3_1_1LteMacSapProvider.html"];
  Node84 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_rrcSapProvider" ,arrowhead="odiamond"];
  Node84 [label="{ns3::LteEnbRrcSapProvider\n||+ CompleteSetupUe()\l+ RecvRrcConnectionRequest()\l+ RecvRrcConnectionSetupCompleted()\l+ RecvRrcConnectionReconfiguration\lCompleted()\l+ RecvRrcConnectionReestablishment\lRequest()\l+ RecvRrcConnectionReestablishment\lComplete()\l+ RecvMeasurementReport()\l+ RecvRrcSecondaryCellInitial\lAccessSuccessful()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/da8/classns3_1_1LteEnbRrcSapProvider.html",tooltip="Part of the RRC protocol. This Service Access Point (SAP) is used to let the eNB RRC receive a messag..."];
  Node62 -> Node84 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node85 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -m_handoverManagementSap\lProvider" ,arrowhead="odiamond"];
  Node85 [label="{ns3::LteHandoverManagement\lSapProvider\n||+ ~LteHandoverManagementSap\lProvider()\l+ ReportUeMeas()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d2c/classns3_1_1LteHandoverManagementSapProvider.html",tooltip="Service Access Point (SAP) offered by the handover algorithm instance to the eNodeB RRC instance..."];
  Node86 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_mcStats" ,arrowhead="odiamond"];
  Node86 [label="{ns3::Ptr\< ns3::McStatsCalculator \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node87 -> Node86 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node87 [label="{ns3::McStatsCalculator\n|- m_lteOutputFilename\l- m_mmWaveOutputFilename\l- m_cellInTimeFilename\l- m_lteOutFile\l- m_mmWaveOutFile\l- m_cellInTimeOutFile\l|+ McStatsCalculator()\l+ ~McStatsCalculator()\l+ DoDispose()\l+ GetLteOutputFilename()\l+ GetMmWaveOutputFilename()\l+ GetCellIdInTimeOutputFilename()\l+ SetLteOutputFilename()\l+ SetMmWaveOutputFilename()\l+ SetCellIdInTimeOutputFilename()\l+ SwitchToLte()\l+ SwitchToMmWave()\l+ GetTypeId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/df3/classns3_1_1McStatsCalculator.html"];
  Node2 -> Node87 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node88 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_pdcpStats\n-m_rlcStats" ,arrowhead="odiamond"];
  Node88 [label="{ns3::Ptr\< ns3::MmWaveBearer\lStatsCalculator \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node89 -> Node88 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node89 [label="{ns3::MmWaveBearerStatsCalculator\n|- m_flowId\l- m_dlCellId\l- m_dlTxPackets\l- m_dlRxPackets\l- m_dlTxData\l- m_dlRxData\l- m_dlDelay\l- m_dlPduSize\l- m_ulCellId\l- m_ulTxPackets\land 12 more...\l|+ MmWaveBearerStatsCalculator()\l+ MmWaveBearerStatsCalculator()\l+ ~MmWaveBearerStatsCalculator()\l+ DoDispose()\l+ GetUlOutputFilename()\l+ GetDlOutputFilename()\l+ SetUlPdcpOutputFilename()\l+ GetUlPdcpOutputFilename()\l+ SetDlPdcpOutputFilename()\l+ GetDlPdcpOutputFilename()\land 24 more...\l+ GetTypeId()\l- ShowResults()\l- WriteUlResults()\l- WriteDlResults()\l- ResetResults()\l- RescheduleEndEpoch()\l- EndEpoch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d8f/classns3_1_1MmWaveBearerStatsCalculator.html"];
  Node90 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node90 [label="{ns3::LteStatsCalculator\n|- m_pathImsiMap\l- m_pathCellIdMap\l- m_dlOutputFilename\l- m_ulOutputFilename\l|+ LteStatsCalculator()\l+ ~LteStatsCalculator()\l+ SetUlOutputFilename()\l+ GetUlOutputFilename()\l+ SetDlOutputFilename()\l+ GetDlOutputFilename()\l+ ExistsImsiPath()\l+ SetImsiPath()\l+ GetImsiPath()\l+ ExistsCellIdPath()\l+ SetCellIdPath()\l+ GetCellIdPath()\l+ GetTypeId()\l# FindImsiFromEnbRlcPath()\l# FindImsiFromUePhy()\l# FindImsiFromLteNetDevice()\l# FindCellIdFromEnbRlcPath()\l# FindImsiFromEnbMac()\l# FindCellIdFromEnbMac()\l# FindImsiForEnb()\l# FindImsiForUe()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d9c/classns3_1_1LteStatsCalculator.html"];
  Node2 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node91 -> Node89 [color="grey25",fontsize="10",style="solid",label=" -m_endEpochEvent" ,arrowhead="odiamond"];
  Node91 [label="{ns3::EventId\n|- m_ts\l- m_context\l- m_uid\l|+ EventId()\l+ EventId()\l+ Cancel()\l+ IsExpired()\l+ IsRunning()\l+ PeekEventImpl()\l+ GetTs()\l+ GetContext()\l+ GetUid()\l* PeekEventImpl()\l* GetTs()\l* GetContext()\l* GetUid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/df8/classns3_1_1EventId.html",tooltip="An identifier for simulation events. "];
  Node92 -> Node91 [color="grey25",fontsize="10",style="solid",label=" -m_eventImpl" ,arrowhead="odiamond"];
  Node92 [label="{ns3::Ptr\< ns3::EventImpl \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node93 -> Node92 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node93 [label="{ns3::EventImpl\n|- m_cancel\l|+ EventImpl()\l+ ~EventImpl()\l+ Invoke()\l+ Cancel()\l+ IsCancelled()\l# Notify()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$da/def/classns3_1_1EventImpl.html",tooltip="A simulation event. "];
  Node34 -> Node89 [color="grey25",fontsize="10",style="solid",label=" -m_epochDuration\n-m_startTime" ,arrowhead="odiamond"];
  Node22 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_phyMacCommon\n-m_phyMacCommon_2" ,arrowhead="odiamond"];
  Node94 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_channelMatrix\n-m_channelMatrix_2" ,arrowhead="odiamond"];
  Node94 [label="{ns3::Ptr\< ns3::MmWaveChannel\lMatrix \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node95 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node95 [label="{ns3::MmWaveChannelMatrix\n|+ isAdditionalMmWavePhy\l- m_connectedPair\l- m_channelMatrixMap\l- m_antennaSeparation\l- m_subBW\l- m_numRB\l- m_numSBPerRB\l|+ MmWaveChannelMatrix()\l+ ~MmWaveChannelMatrix()\l+ DoDispose()\l+ ConnectDevices()\l+ Initial()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ CalcRxPowerSpectralDensity()\l+ GetTypeId()\l- DoCalcRxPowerSpectralDensity()\l- GenSpatialMatrix()\l- GenSinglePath()\l- GetChannelGain()\l- GetSystemBandwidth()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d57/classns3_1_1MmWaveChannelMatrix.html"];
  Node20 -> Node95 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node22 -> Node95 [color="grey25",fontsize="10",style="solid",label=" -m_phyMacConfig" ,arrowhead="odiamond"];
  Node24 -> Node95 [color="grey25",fontsize="10",style="solid",label=" -m_uniformRv" ,arrowhead="odiamond"];
  Node37 -> Node95 [color="grey25",fontsize="10",style="solid",label=" -m_expRv" ,arrowhead="odiamond"];
  Node96 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_radioBearerStatsConnector" ,arrowhead="odiamond"];
  Node96 [label="{ns3::Ptr\< ns3::MmWaveBearer\lStatsConnector \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node97 -> Node96 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node97 [label="{ns3::MmWaveBearerStatsConnector\n|- m_connected\l- m_imsiSeenUe\l- m_imsiSeenEnb\l- m_ueManagerPathByCellIdRnti\l- m_enbHandoverStartFilename\l- m_enbHandoverEndFilename\l- m_ueHandoverStartFilename\l- m_ueHandoverEndFilename\l- m_cellIdInTimeHandoverFilename\l- m_mmWaveSinrOutputFilename\land 8 more...\l|+ MmWaveBearerStatsConnector()\l+ ~MmWaveBearerStatsConnector()\l+ DoDispose()\l+ EnableRlcStats()\l+ EnablePdcpStats()\l+ EnableMcStats()\l+ EnsureConnected()\l+ PrintMmWaveSinr()\l+ PrintLteSinr()\l+ GetEnbHandoverStartOutput\lFilename()\land 13 more...\l+ GetTypeId()\l+ NotifyRandomAccessSuccessfulUe()\l+ NotifyConnectionSetupUe()\l+ NotifyConnectionReconfigurationUe()\l+ NotifyHandoverStartUe()\l+ NotifyHandoverEndOkUe()\l+ NotifyNewUeContextEnb()\l+ NotifyConnectionReconfigurationEnb()\l+ NotifyHandoverStartEnb()\l+ NotifyHandoverEndOkEnb()\l+ NotifySwitchToMmWaveUe()\l+ NotifySecondaryMmWaveEnb\lAvailable()\l+ NotifyMmWaveSinr()\l+ NotifyLteSinr()\l- StoreUeManagerPath()\l- ConnectSrb0Traces()\l- ConnectSrb1TracesUe()\l- ConnectTracesUeIfFirstTime()\l- ConnectTracesEnbIfFirstTime()\l- ConnectTracesUe()\l- DisconnectTracesUe()\l- ConnectTracesEnb()\l- DisconnectTracesEnb()\l- ConnectSecondaryTracesUe()\l- ConnectSecondaryTracesEnb()\l- PrintEnbStartHandover()\l- PrintEnbEndHandover()\l- PrintUeStartHandover()\l- PrintUeEndHandover()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9f/classns3_1_1MmWaveBearerStatsConnector.html"];
  Node2 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node86 -> Node97 [color="grey25",fontsize="10",style="solid",label=" -m_mcStats" ,arrowhead="odiamond"];
  Node88 -> Node97 [color="grey25",fontsize="10",style="solid",label=" -m_pdcpStats\n-m_rlcStats" ,arrowhead="odiamond"];
  Node98 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_downlinkPathlossModel\n-m_pathlossModel\n-m_pathlossModel_2\n-m_uplinkPathlossModel" ,arrowhead="odiamond"];
  Node98 [label="{ns3::Ptr\< ns3::Object \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node2 -> Node98 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node99 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_beamforming_2\n-m_beamforming" ,arrowhead="odiamond"];
  Node99 [label="{ns3::Ptr\< ns3::MmWaveBeamforming \>\n||+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ Ptr()\l+ ~Ptr()\l+ operator=()\l+ operator-\>()\l+ operator-\>()\l+ operator*()\l+ operator*()\l+ operator!()\l+ operator Tester *()\l- Acquire()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d90/classns3_1_1Ptr.html"];
  Node100 -> Node99 [color="grey25",fontsize="10",style="solid",label=" -m_ptr" ,arrowhead="odiamond"];
  Node100 [label="{ns3::MmWaveBeamforming\n|+ isAdditionalMmWavePhy\l- m_channelMatrixMap\l- m_pathNum\l- m_enbAntennaSize\l- m_ueAntennaSize\l- m_smallScale\l- m_fixSpeed\l- m_ueSpeed\l- m_update\l|+ MmWaveBeamforming()\l+ ~MmWaveBeamforming()\l+ DoDispose()\l+ SetConfigurationParameters()\l+ GetConfigurationParameters()\l+ LoadFile()\l+ Initial()\l+ UpdateMatrices()\l+ CalcRxPowerSpectralDensity()\l+ SetBeamformingVector()\l+ GetTypeId()\l- ParseComplex()\l- LoadSmallScaleFading()\l- LoadEnbAntenna()\l- LoadUeAntenna()\l- LoadEnbSpatialSignature()\l- LoadUeSpatialSignature()\l- DoCalcRxPowerSpectralDensity()\l- SetChannelMatrix()\l- GetSystemBandwidth()\l- GetLongTermFading()\l- GetChannelGainVector()\l- GetUeEnbAntennaPair()\l- GetUeEnbAntennaPair_2()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d81/classns3_1_1MmWaveBeamforming.html"];
  Node20 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node34 -> Node100 [color="grey25",fontsize="10",style="solid",label=" -m_longTermUpdatePeriod" ,arrowhead="odiamond"];
  Node22 -> Node100 [color="grey25",fontsize="10",style="solid",label=" -m_phyMacConfig" ,arrowhead="odiamond"];
  Node24 -> Node100 [color="grey25",fontsize="10",style="solid",label=" -m_uniformRV" ,arrowhead="odiamond"];
}
